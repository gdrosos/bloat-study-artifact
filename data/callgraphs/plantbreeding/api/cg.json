{
  "edges": [
    [
      9,
      120
    ],
    [
      9,
      122
    ],
    [
      9,
      121
    ],
    [
      120,
      117
    ],
    [
      121,
      117
    ],
    [
      122,
      117
    ],
    [
      15,
      115
    ],
    [
      21,
      132
    ],
    [
      26,
      118
    ],
    [
      27,
      115
    ],
    [
      27,
      116
    ],
    [
      33,
      120
    ],
    [
      33,
      54
    ],
    [
      33,
      117
    ],
    [
      39,
      129
    ],
    [
      39,
      115
    ],
    [
      39,
      123
    ],
    [
      39,
      130
    ],
    [
      39,
      120
    ],
    [
      39,
      128
    ],
    [
      39,
      126
    ],
    [
      39,
      118
    ],
    [
      39,
      121
    ],
    [
      39,
      127
    ],
    [
      45,
      126
    ],
    [
      51,
      124
    ],
    [
      51,
      119
    ],
    [
      60,
      137
    ],
    [
      60,
      140
    ],
    [
      60,
      72
    ],
    [
      60,
      142
    ],
    [
      60,
      55
    ],
    [
      60,
      74
    ],
    [
      60,
      67
    ],
    [
      60,
      133
    ],
    [
      60,
      135
    ],
    [
      60,
      136
    ],
    [
      60,
      77
    ],
    [
      60,
      102
    ],
    [
      60,
      134
    ],
    [
      60,
      66
    ],
    [
      66,
      65
    ],
    [
      66,
      64
    ],
    [
      74,
      71
    ],
    [
      74,
      69
    ],
    [
      74,
      73
    ],
    [
      74,
      70
    ],
    [
      61,
      60
    ],
    [
      62,
      61
    ],
    [
      64,
      117
    ],
    [
      64,
      131
    ],
    [
      64,
      134
    ],
    [
      65,
      117
    ],
    [
      68,
      115
    ],
    [
      68,
      118
    ],
    [
      69,
      115
    ],
    [
      69,
      68
    ],
    [
      71,
      54
    ],
    [
      71,
      117
    ],
    [
      89,
      67
    ],
    [
      89,
      134
    ],
    [
      89,
      66
    ],
    [
      97,
      117
    ],
    [
      100,
      99
    ],
    [
      104,
      137
    ],
    [
      109,
      108
    ],
    [
      138,
      117
    ],
    [
      139,
      134
    ],
    [
      144,
      60
    ],
    [
      144,
      108
    ],
    [
      146,
      148
    ],
    [
      148,
      103
    ],
    [
      148,
      111
    ],
    [
      148,
      61
    ],
    [
      148,
      108
    ],
    [
      148,
      147
    ],
    [
      150,
      220
    ],
    [
      152,
      151
    ],
    [
      154,
      206
    ],
    [
      154,
      231
    ],
    [
      154,
      204
    ],
    [
      154,
      241
    ],
    [
      154,
      243
    ],
    [
      154,
      230
    ],
    [
      154,
      234
    ],
    [
      154,
      223
    ],
    [
      154,
      237
    ],
    [
      154,
      242
    ],
    [
      154,
      224
    ],
    [
      154,
      244
    ],
    [
      154,
      226
    ],
    [
      154,
      228
    ],
    [
      154,
      205
    ],
    [
      154,
      221
    ],
    [
      154,
      222
    ],
    [
      154,
      240
    ],
    [
      154,
      247
    ],
    [
      154,
      239
    ],
    [
      154,
      232
    ],
    [
      154,
      233
    ],
    [
      154,
      235
    ],
    [
      154,
      236
    ],
    [
      154,
      225
    ],
    [
      154,
      238
    ],
    [
      154,
      227
    ],
    [
      154,
      245
    ],
    [
      154,
      246
    ],
    [
      154,
      229
    ],
    [
      157,
      158
    ],
    [
      160,
      207
    ],
    [
      161,
      163
    ],
    [
      162,
      163
    ],
    [
      165,
      447
    ],
    [
      447,
      445
    ],
    [
      447,
      436
    ],
    [
      167,
      248
    ],
    [
      168,
      167
    ],
    [
      168,
      208
    ],
    [
      171,
      168
    ],
    [
      172,
      249
    ],
    [
      172,
      251
    ],
    [
      172,
      209
    ],
    [
      172,
      252
    ],
    [
      172,
      278
    ],
    [
      172,
      250
    ],
    [
      173,
      172
    ],
    [
      174,
      175
    ],
    [
      179,
      178
    ],
    [
      179,
      176
    ],
    [
      179,
      177
    ],
    [
      179,
      180
    ],
    [
      179,
      174
    ],
    [
      181,
      179
    ],
    [
      183,
      253
    ],
    [
      183,
      181
    ],
    [
      183,
      179
    ],
    [
      185,
      507
    ],
    [
      185,
      184
    ],
    [
      507,
      198
    ],
    [
      186,
      254
    ],
    [
      190,
      191
    ],
    [
      191,
      278
    ],
    [
      193,
      278
    ],
    [
      195,
      197
    ],
    [
      195,
      196
    ],
    [
      308,
      327
    ],
    [
      327,
      447
    ],
    [
      327,
      343
    ],
    [
      327,
      185
    ],
    [
      327,
      357
    ],
    [
      327,
      500
    ],
    [
      309,
      308
    ],
    [
      310,
      308
    ],
    [
      311,
      308
    ],
    [
      312,
      308
    ],
    [
      313,
      308
    ],
    [
      314,
      308
    ],
    [
      315,
      308
    ],
    [
      317,
      160
    ],
    [
      317,
      507
    ],
    [
      318,
      317
    ],
    [
      320,
      348
    ],
    [
      348,
      202
    ],
    [
      348,
      274
    ],
    [
      322,
      348
    ],
    [
      322,
      473
    ],
    [
      322,
      193
    ],
    [
      322,
      278
    ],
    [
      322,
      173
    ],
    [
      322,
      258
    ],
    [
      322,
      218
    ],
    [
      322,
      415
    ],
    [
      322,
      210
    ],
    [
      322,
      339
    ],
    [
      322,
      255
    ],
    [
      322,
      324
    ],
    [
      322,
      256
    ],
    [
      322,
      320
    ],
    [
      322,
      448
    ],
    [
      322,
      325
    ],
    [
      322,
      257
    ],
    [
      322,
      323
    ],
    [
      322,
      465
    ],
    [
      465,
      462
    ],
    [
      465,
      515
    ],
    [
      465,
      444
    ],
    [
      415,
      412
    ],
    [
      415,
      397
    ],
    [
      448,
      447
    ],
    [
      448,
      436
    ],
    [
      448,
      437
    ],
    [
      473,
      416
    ],
    [
      473,
      447
    ],
    [
      324,
      371
    ],
    [
      324,
      183
    ],
    [
      324,
      189
    ],
    [
      323,
      321
    ],
    [
      323,
      472
    ],
    [
      323,
      155
    ],
    [
      339,
      415
    ],
    [
      339,
      183
    ],
    [
      339,
      341
    ],
    [
      339,
      322
    ],
    [
      339,
      501
    ],
    [
      472,
      471
    ],
    [
      472,
      507
    ],
    [
      472,
      375
    ],
    [
      472,
      189
    ],
    [
      371,
      348
    ],
    [
      357,
      360
    ],
    [
      329,
      342
    ],
    [
      330,
      447
    ],
    [
      330,
      318
    ],
    [
      330,
      462
    ],
    [
      330,
      463
    ],
    [
      330,
      317
    ],
    [
      330,
      448
    ],
    [
      330,
      259
    ],
    [
      330,
      155
    ],
    [
      462,
      500
    ],
    [
      463,
      470
    ],
    [
      463,
      474
    ],
    [
      463,
      466
    ],
    [
      463,
      473
    ],
    [
      463,
      468
    ],
    [
      463,
      472
    ],
    [
      463,
      469
    ],
    [
      331,
      458
    ],
    [
      331,
      339
    ],
    [
      331,
      340
    ],
    [
      331,
      330
    ],
    [
      458,
      455
    ],
    [
      458,
      500
    ],
    [
      340,
      208
    ],
    [
      340,
      317
    ],
    [
      340,
      181
    ],
    [
      340,
      211
    ],
    [
      332,
      331
    ],
    [
      333,
      331
    ],
    [
      334,
      331
    ],
    [
      335,
      331
    ],
    [
      336,
      331
    ],
    [
      337,
      331
    ],
    [
      338,
      331
    ],
    [
      341,
      268
    ],
    [
      341,
      278
    ],
    [
      341,
      260
    ],
    [
      341,
      261
    ],
    [
      341,
      262
    ],
    [
      341,
      265
    ],
    [
      341,
      263
    ],
    [
      341,
      266
    ],
    [
      341,
      264
    ],
    [
      341,
      219
    ],
    [
      341,
      267
    ],
    [
      346,
      327
    ],
    [
      351,
      278
    ],
    [
      359,
      360
    ],
    [
      361,
      368
    ],
    [
      361,
      189
    ],
    [
      368,
      189
    ],
    [
      368,
      371
    ],
    [
      362,
      157
    ],
    [
      363,
      415
    ],
    [
      363,
      168
    ],
    [
      363,
      507
    ],
    [
      363,
      476
    ],
    [
      476,
      507
    ],
    [
      476,
      447
    ],
    [
      364,
      182
    ],
    [
      364,
      278
    ],
    [
      364,
      361
    ],
    [
      364,
      188
    ],
    [
      366,
      192
    ],
    [
      366,
      182
    ],
    [
      369,
      367
    ],
    [
      369,
      362
    ],
    [
      369,
      363
    ],
    [
      369,
      364
    ],
    [
      369,
      278
    ],
    [
      369,
      366
    ],
    [
      452,
      160
    ],
    [
      453,
      156
    ],
    [
      453,
      160
    ],
    [
      460,
      462
    ],
    [
      460,
      463
    ],
    [
      466,
      212
    ],
    [
      466,
      269
    ],
    [
      466,
      348
    ],
    [
      468,
      467
    ],
    [
      468,
      348
    ],
    [
      468,
      278
    ],
    [
      468,
      452
    ],
    [
      468,
      173
    ],
    [
      468,
      349
    ],
    [
      469,
      348
    ],
    [
      469,
      507
    ],
    [
      469,
      207
    ],
    [
      469,
      190
    ],
    [
      470,
      270
    ],
    [
      470,
      231
    ],
    [
      470,
      452
    ],
    [
      470,
      230
    ],
    [
      470,
      234
    ],
    [
      470,
      278
    ],
    [
      470,
      237
    ],
    [
      470,
      271
    ],
    [
      470,
      205
    ],
    [
      470,
      453
    ],
    [
      470,
      273
    ],
    [
      470,
      471
    ],
    [
      470,
      213
    ],
    [
      470,
      232
    ],
    [
      470,
      233
    ],
    [
      470,
      235
    ],
    [
      470,
      236
    ],
    [
      470,
      272
    ],
    [
      470,
      154
    ],
    [
      470,
      238
    ],
    [
      474,
      511
    ],
    [
      474,
      455
    ],
    [
      515,
      507
    ],
    [
      444,
      442
    ],
    [
      349,
      275
    ],
    [
      471,
      154
    ],
    [
      471,
      208
    ],
    [
      416,
      397
    ],
    [
      416,
      407
    ],
    [
      478,
      498
    ],
    [
      484,
      490
    ],
    [
      490,
      491
    ],
    [
      490,
      278
    ],
    [
      490,
      169
    ],
    [
      490,
      170
    ],
    [
      485,
      497
    ],
    [
      497,
      278
    ],
    [
      491,
      278
    ],
    [
      492,
      490
    ],
    [
      493,
      490
    ],
    [
      495,
      281
    ],
    [
      495,
      187
    ],
    [
      281,
      278
    ],
    [
      496,
      186
    ],
    [
      496,
      208
    ],
    [
      502,
      503
    ],
    [
      502,
      518
    ],
    [
      503,
      504
    ],
    [
      514,
      513
    ],
    [
      514,
      507
    ],
    [
      516,
      207
    ],
    [
      378,
      371
    ],
    [
      380,
      371
    ],
    [
      384,
      386
    ],
    [
      384,
      385
    ],
    [
      384,
      389
    ],
    [
      384,
      388
    ],
    [
      384,
      387
    ],
    [
      389,
      388
    ],
    [
      389,
      387
    ],
    [
      389,
      386
    ],
    [
      389,
      385
    ],
    [
      391,
      384
    ],
    [
      391,
      162
    ],
    [
      391,
      415
    ],
    [
      392,
      384
    ],
    [
      392,
      383
    ],
    [
      400,
      399
    ],
    [
      401,
      348
    ],
    [
      401,
      208
    ],
    [
      404,
      208
    ],
    [
      408,
      402
    ],
    [
      409,
      400
    ],
    [
      410,
      399
    ],
    [
      420,
      439
    ],
    [
      421,
      436
    ],
    [
      421,
      417
    ],
    [
      421,
      445
    ],
    [
      421,
      446
    ],
    [
      446,
      445
    ],
    [
      423,
      422
    ],
    [
      425,
      424
    ],
    [
      427,
      426
    ],
    [
      433,
      439
    ],
    [
      434,
      421
    ],
    [
      435,
      417
    ],
    [
      437,
      436
    ],
    [
      442,
      437
    ],
    [
      442,
      443
    ],
    [
      522,
      525
    ],
    [
      524,
      523
    ],
    [
      525,
      524
    ],
    [
      150,
      526
    ],
    [
      188,
      527
    ],
    [
      195,
      528
    ],
    [
      357,
      529
    ],
    [
      357,
      530
    ],
    [
      360,
      531
    ],
    [
      361,
      532
    ],
    [
      361,
      533
    ],
    [
      364,
      534
    ],
    [
      364,
      533
    ],
    [
      364,
      527
    ],
    [
      364,
      535
    ],
    [
      365,
      536
    ],
    [
      369,
      535
    ],
    [
      369,
      531
    ],
    [
      369,
      537
    ],
    [
      369,
      534
    ],
    [
      369,
      533
    ],
    [
      453,
      538
    ],
    [
      453,
      539
    ],
    [
      453,
      540
    ],
    [
      468,
      527
    ],
    [
      468,
      541
    ],
    [
      468,
      542
    ],
    [
      467,
      541
    ],
    [
      467,
      541
    ],
    [
      467,
      542
    ],
    [
      349,
      541
    ],
    [
      349,
      542
    ],
    [
      498,
      535
    ],
    [
      498,
      531
    ],
    [
      498,
      534
    ],
    [
      498,
      533
    ],
    [
      497,
      535
    ],
    [
      497,
      531
    ],
    [
      497,
      534
    ],
    [
      497,
      533
    ],
    [
      489,
      144
    ],
    [
      491,
      534
    ],
    [
      491,
      533
    ],
    [
      491,
      534
    ],
    [
      491,
      533
    ],
    [
      491,
      535
    ],
    [
      491,
      531
    ],
    [
      491,
      535
    ],
    [
      491,
      531
    ],
    [
      414,
      535
    ],
    [
      414,
      534
    ],
    [
      194,
      543
    ],
    [
      549,
      557
    ],
    [
      551,
      546
    ],
    [
      559,
      645
    ],
    [
      559,
      561
    ],
    [
      645,
      774
    ],
    [
      645,
      660
    ],
    [
      560,
      546
    ],
    [
      563,
      566
    ],
    [
      566,
      1027
    ],
    [
      566,
      572
    ],
    [
      566,
      569
    ],
    [
      566,
      565
    ],
    [
      566,
      561
    ],
    [
      565,
      564
    ],
    [
      1027,
      645
    ],
    [
      569,
      570
    ],
    [
      569,
      561
    ],
    [
      572,
      573
    ],
    [
      567,
      568
    ],
    [
      568,
      679
    ],
    [
      570,
      679
    ],
    [
      570,
      688
    ],
    [
      573,
      679
    ],
    [
      573,
      688
    ],
    [
      574,
      556
    ],
    [
      574,
      597
    ],
    [
      597,
      645
    ],
    [
      576,
      1027
    ],
    [
      576,
      645
    ],
    [
      577,
      582
    ],
    [
      577,
      579
    ],
    [
      577,
      580
    ],
    [
      577,
      581
    ],
    [
      582,
      597
    ],
    [
      582,
      580
    ],
    [
      581,
      581
    ],
    [
      581,
      578
    ],
    [
      581,
      580
    ],
    [
      580,
      559
    ],
    [
      580,
      578
    ],
    [
      578,
      685
    ],
    [
      588,
      590
    ],
    [
      671,
      672
    ],
    [
      672,
      673
    ],
    [
      673,
      672
    ],
    [
      675,
      675
    ],
    [
      683,
      689
    ],
    [
      683,
      680
    ],
    [
      686,
      677
    ],
    [
      687,
      723
    ],
    [
      687,
      689
    ],
    [
      687,
      687
    ],
    [
      697,
      700
    ],
    [
      700,
      704
    ],
    [
      705,
      740
    ],
    [
      705,
      733
    ],
    [
      705,
      741
    ],
    [
      706,
      706
    ],
    [
      706,
      722
    ],
    [
      722,
      728
    ],
    [
      709,
      709
    ],
    [
      730,
      722
    ],
    [
      735,
      712
    ],
    [
      735,
      734
    ],
    [
      736,
      712
    ],
    [
      736,
      735
    ],
    [
      736,
      734
    ],
    [
      743,
      740
    ],
    [
      743,
      741
    ],
    [
      747,
      740
    ],
    [
      747,
      741
    ],
    [
      755,
      758
    ],
    [
      886,
      893
    ],
    [
      896,
      679
    ],
    [
      897,
      898
    ],
    [
      898,
      900
    ],
    [
      898,
      901
    ],
    [
      898,
      899
    ],
    [
      898,
      902
    ],
    [
      898,
      903
    ],
    [
      901,
      713
    ],
    [
      899,
      713
    ],
    [
      902,
      713
    ],
    [
      900,
      713
    ],
    [
      903,
      713
    ],
    [
      907,
      645
    ],
    [
      908,
      911
    ],
    [
      911,
      905
    ],
    [
      909,
      911
    ],
    [
      909,
      916
    ],
    [
      909,
      679
    ],
    [
      916,
      679
    ],
    [
      913,
      914
    ],
    [
      915,
      916
    ],
    [
      917,
      684
    ],
    [
      638,
      637
    ],
    [
      639,
      637
    ],
    [
      640,
      638
    ],
    [
      640,
      639
    ],
    [
      641,
      632
    ],
    [
      642,
      636
    ],
    [
      642,
      641
    ],
    [
      642,
      650
    ],
    [
      643,
      642
    ],
    [
      643,
      640
    ],
    [
      647,
      782
    ],
    [
      647,
      781
    ],
    [
      647,
      660
    ],
    [
      649,
      635
    ],
    [
      649,
      643
    ],
    [
      649,
      655
    ],
    [
      655,
      657
    ],
    [
      655,
      782
    ],
    [
      651,
      653
    ],
    [
      651,
      781
    ],
    [
      651,
      692
    ],
    [
      651,
      649
    ],
    [
      651,
      652
    ],
    [
      653,
      692
    ],
    [
      653,
      674
    ],
    [
      653,
      1002
    ],
    [
      1002,
      1002
    ],
    [
      656,
      655
    ],
    [
      667,
      666
    ],
    [
      997,
      645
    ],
    [
      998,
      999
    ],
    [
      999,
      1001
    ],
    [
      999,
      1002
    ],
    [
      1001,
      1000
    ],
    [
      824,
      825
    ],
    [
      825,
      826
    ],
    [
      826,
      828
    ],
    [
      829,
      829
    ],
    [
      763,
      767
    ],
    [
      763,
      765
    ],
    [
      764,
      771
    ],
    [
      764,
      768
    ],
    [
      764,
      772
    ],
    [
      764,
      769
    ],
    [
      768,
      770
    ],
    [
      766,
      766
    ],
    [
      770,
      817
    ],
    [
      785,
      789
    ],
    [
      789,
      788
    ],
    [
      786,
      763
    ],
    [
      790,
      763
    ],
    [
      790,
      792
    ],
    [
      792,
      720
    ],
    [
      791,
      788
    ],
    [
      795,
      789
    ],
    [
      807,
      788
    ],
    [
      809,
      788
    ],
    [
      812,
      785
    ],
    [
      814,
      809
    ],
    [
      814,
      814
    ],
    [
      820,
      734
    ],
    [
      930,
      928
    ],
    [
      931,
      928
    ],
    [
      932,
      928
    ],
    [
      936,
      935
    ],
    [
      936,
      956
    ],
    [
      936,
      939
    ],
    [
      936,
      645
    ],
    [
      936,
      785
    ],
    [
      936,
      927
    ],
    [
      956,
      958
    ],
    [
      956,
      780
    ],
    [
      937,
      936
    ],
    [
      944,
      943
    ],
    [
      947,
      945
    ],
    [
      947,
      946
    ],
    [
      947,
      944
    ],
    [
      948,
      967
    ],
    [
      948,
      645
    ],
    [
      948,
      785
    ],
    [
      948,
      927
    ],
    [
      948,
      947
    ],
    [
      967,
      956
    ],
    [
      949,
      948
    ],
    [
      950,
      956
    ],
    [
      952,
      645
    ],
    [
      953,
      907
    ],
    [
      954,
      913
    ],
    [
      954,
      953
    ],
    [
      954,
      912
    ],
    [
      958,
      957
    ],
    [
      958,
      645
    ],
    [
      958,
      785
    ],
    [
      957,
      667
    ],
    [
      959,
      651
    ],
    [
      959,
      679
    ],
    [
      959,
      692
    ],
    [
      959,
      962
    ],
    [
      959,
      966
    ],
    [
      959,
      960
    ],
    [
      959,
      972
    ],
    [
      962,
      783
    ],
    [
      962,
      775
    ],
    [
      962,
      964
    ],
    [
      972,
      679
    ],
    [
      972,
      997
    ],
    [
      972,
      645
    ],
    [
      972,
      1006
    ],
    [
      972,
      1002
    ],
    [
      972,
      576
    ],
    [
      961,
      954
    ],
    [
      961,
      952
    ],
    [
      968,
      956
    ],
    [
      969,
      651
    ],
    [
      969,
      812
    ],
    [
      969,
      645
    ],
    [
      969,
      587
    ],
    [
      969,
      667
    ],
    [
      969,
      972
    ],
    [
      1006,
      1007
    ],
    [
      1006,
      645
    ],
    [
      973,
      720
    ],
    [
      973,
      714
    ],
    [
      974,
      731
    ],
    [
      974,
      730
    ],
    [
      977,
      978
    ],
    [
      977,
      690
    ],
    [
      977,
      1003
    ],
    [
      977,
      720
    ],
    [
      977,
      975
    ],
    [
      977,
      817
    ],
    [
      977,
      680
    ],
    [
      977,
      985
    ],
    [
      977,
      976
    ],
    [
      977,
      1002
    ],
    [
      977,
      576
    ],
    [
      985,
      685
    ],
    [
      985,
      683
    ],
    [
      985,
      679
    ],
    [
      985,
      1017
    ],
    [
      985,
      983
    ],
    [
      985,
      978
    ],
    [
      985,
      817
    ],
    [
      985,
      998
    ],
    [
      985,
      992
    ],
    [
      985,
      576
    ],
    [
      985,
      584
    ],
    [
      985,
      1016
    ],
    [
      985,
      990
    ],
    [
      985,
      549
    ],
    [
      985,
      707
    ],
    [
      985,
      985
    ],
    [
      978,
      817
    ],
    [
      978,
      576
    ],
    [
      979,
      576
    ],
    [
      980,
      706
    ],
    [
      980,
      993
    ],
    [
      980,
      615
    ],
    [
      980,
      687
    ],
    [
      980,
      817
    ],
    [
      980,
      722
    ],
    [
      981,
      706
    ],
    [
      981,
      722
    ],
    [
      981,
      576
    ],
    [
      982,
      730
    ],
    [
      982,
      993
    ],
    [
      982,
      687
    ],
    [
      982,
      817
    ],
    [
      982,
      623
    ],
    [
      982,
      731
    ],
    [
      983,
      584
    ],
    [
      983,
      679
    ],
    [
      983,
      720
    ],
    [
      983,
      977
    ],
    [
      983,
      990
    ],
    [
      983,
      576
    ],
    [
      990,
      991
    ],
    [
      990,
      687
    ],
    [
      990,
      817
    ],
    [
      1016,
      689
    ],
    [
      1016,
      683
    ],
    [
      1016,
      682
    ],
    [
      1016,
      686
    ],
    [
      992,
      817
    ],
    [
      986,
      576
    ],
    [
      987,
      576
    ],
    [
      988,
      584
    ],
    [
      988,
      990
    ],
    [
      988,
      576
    ],
    [
      989,
      731
    ],
    [
      989,
      730
    ],
    [
      991,
      981
    ],
    [
      991,
      679
    ],
    [
      991,
      623
    ],
    [
      991,
      987
    ],
    [
      991,
      979
    ],
    [
      991,
      615
    ],
    [
      991,
      687
    ],
    [
      991,
      817
    ],
    [
      991,
      722
    ],
    [
      991,
      733
    ],
    [
      991,
      576
    ],
    [
      991,
      988
    ],
    [
      991,
      731
    ],
    [
      991,
      706
    ],
    [
      991,
      730
    ],
    [
      991,
      705
    ],
    [
      991,
      707
    ],
    [
      598,
      607
    ],
    [
      607,
      602
    ],
    [
      607,
      1027
    ],
    [
      607,
      608
    ],
    [
      607,
      601
    ],
    [
      605,
      687
    ],
    [
      606,
      685
    ],
    [
      612,
      706
    ],
    [
      612,
      722
    ],
    [
      616,
      687
    ],
    [
      617,
      685
    ],
    [
      618,
      688
    ],
    [
      619,
      688
    ],
    [
      620,
      621
    ],
    [
      624,
      629
    ],
    [
      625,
      687
    ],
    [
      627,
      688
    ],
    [
      628,
      688
    ],
    [
      1009,
      1008
    ],
    [
      1010,
      680
    ],
    [
      1010,
      1008
    ],
    [
      1011,
      710
    ],
    [
      1011,
      1008
    ],
    [
      1012,
      1008
    ],
    [
      1013,
      1008
    ],
    [
      1014,
      1008
    ],
    [
      920,
      893
    ],
    [
      1028,
      1030
    ],
    [
      1030,
      645
    ],
    [
      1034,
      1033
    ],
    [
      1035,
      1033
    ],
    [
      1036,
      1032
    ],
    [
      1036,
      1033
    ],
    [
      1037,
      1032
    ],
    [
      1037,
      1033
    ],
    [
      1038,
      1033
    ],
    [
      1039,
      1033
    ],
    [
      1040,
      1033
    ],
    [
      1042,
      1033
    ],
    [
      1029,
      1022
    ],
    [
      1044,
      1048
    ],
    [
      1044,
      1046
    ],
    [
      1044,
      1045
    ],
    [
      1052,
      666
    ],
    [
      1052,
      645
    ],
    [
      1052,
      1051
    ],
    [
      1052,
      785
    ],
    [
      1052,
      655
    ],
    [
      1055,
      1056
    ],
    [
      1055,
      956
    ],
    [
      1056,
      668
    ],
    [
      1056,
      669
    ],
    [
      1057,
      956
    ],
    [
      1058,
      1059
    ],
    [
      1063,
      1059
    ],
    [
      1064,
      740
    ],
    [
      1064,
      741
    ],
    [
      1070,
      685
    ],
    [
      1070,
      1074
    ],
    [
      1070,
      1073
    ],
    [
      1071,
      785
    ],
    [
      1071,
      966
    ],
    [
      1071,
      645
    ],
    [
      1071,
      655
    ],
    [
      1076,
      1078
    ],
    [
      1079,
      1080
    ],
    [
      1083,
      1084
    ],
    [
      1106,
      1109
    ],
    [
      1106,
      1100
    ],
    [
      1106,
      1111
    ],
    [
      1109,
      1112
    ],
    [
      1109,
      1113
    ],
    [
      1109,
      1110
    ],
    [
      1107,
      1108
    ],
    [
      1107,
      1102
    ],
    [
      1108,
      1106
    ],
    [
      1116,
      1119
    ],
    [
      1119,
      1118
    ],
    [
      1119,
      1117
    ],
    [
      1119,
      1119
    ],
    [
      1119,
      1120
    ],
    [
      1120,
      1121
    ],
    [
      1120,
      1107
    ],
    [
      1124,
      1088
    ],
    [
      1124,
      1102
    ],
    [
      1124,
      1123
    ],
    [
      1125,
      1102
    ],
    [
      1125,
      1123
    ],
    [
      1126,
      1128
    ],
    [
      1126,
      1102
    ],
    [
      1126,
      1123
    ],
    [
      1128,
      1088
    ],
    [
      1127,
      1128
    ],
    [
      1127,
      1088
    ],
    [
      1127,
      1123
    ],
    [
      1127,
      1089
    ],
    [
      1127,
      1102
    ],
    [
      1129,
      1147
    ],
    [
      1129,
      1089
    ],
    [
      1129,
      1130
    ],
    [
      1129,
      1148
    ],
    [
      1129,
      1124
    ],
    [
      1129,
      1127
    ],
    [
      1129,
      1126
    ],
    [
      1129,
      1092
    ],
    [
      1129,
      1125
    ],
    [
      1129,
      1091
    ],
    [
      1148,
      1140
    ],
    [
      1147,
      1143
    ],
    [
      1132,
      1086
    ],
    [
      1132,
      1096
    ],
    [
      1132,
      1129
    ],
    [
      1136,
      1093
    ],
    [
      1138,
      1088
    ],
    [
      1138,
      1137
    ],
    [
      1146,
      1132
    ],
    [
      1146,
      1146
    ],
    [
      1149,
      1123
    ],
    [
      1149,
      1116
    ],
    [
      1149,
      1133
    ],
    [
      1149,
      1115
    ],
    [
      1149,
      1132
    ],
    [
      1149,
      1134
    ],
    [
      1149,
      1146
    ],
    [
      1150,
      1123
    ],
    [
      1150,
      1133
    ],
    [
      1150,
      1146
    ],
    [
      1150,
      1098
    ],
    [
      1150,
      1132
    ],
    [
      1150,
      1134
    ],
    [
      1150,
      1107
    ],
    [
      1150,
      1087
    ],
    [
      1151,
      1123
    ],
    [
      1151,
      1116
    ],
    [
      1151,
      1115
    ],
    [
      1151,
      1132
    ],
    [
      1151,
      1146
    ],
    [
      1153,
      1123
    ],
    [
      1153,
      1115
    ],
    [
      1154,
      1132
    ],
    [
      1154,
      1107
    ],
    [
      1154,
      1146
    ],
    [
      1155,
      1116
    ],
    [
      1155,
      1132
    ],
    [
      1155,
      1146
    ],
    [
      1156,
      1155
    ],
    [
      1157,
      1155
    ],
    [
      1158,
      1133
    ],
    [
      1159,
      1134
    ],
    [
      1165,
      1123
    ],
    [
      1165,
      1175
    ],
    [
      1165,
      1132
    ],
    [
      1165,
      1166
    ],
    [
      1165,
      1146
    ],
    [
      1167,
      1164
    ],
    [
      1167,
      1163
    ],
    [
      1167,
      1123
    ],
    [
      1167,
      1146
    ],
    [
      1171,
      1162
    ],
    [
      1171,
      1116
    ],
    [
      1171,
      1115
    ],
    [
      1171,
      1087
    ],
    [
      1176,
      1162
    ],
    [
      1176,
      1098
    ],
    [
      1176,
      1107
    ],
    [
      1176,
      1087
    ],
    [
      1177,
      1087
    ],
    [
      1177,
      1176
    ],
    [
      1178,
      1094
    ],
    [
      1178,
      1106
    ],
    [
      1179,
      1116
    ],
    [
      1179,
      1115
    ],
    [
      1179,
      1178
    ],
    [
      1179,
      1087
    ],
    [
      1180,
      1181
    ],
    [
      1180,
      1178
    ],
    [
      1182,
      1181
    ],
    [
      1182,
      1179
    ],
    [
      1182,
      1087
    ],
    [
      1186,
      827
    ],
    [
      1195,
      692
    ],
    [
      1198,
      1199
    ],
    [
      1199,
      689
    ],
    [
      1206,
      1213
    ],
    [
      1207,
      1212
    ],
    [
      1208,
      1212
    ],
    [
      1209,
      1211
    ],
    [
      1211,
      712
    ],
    [
      1211,
      735
    ],
    [
      1210,
      1209
    ],
    [
      1214,
      1213
    ],
    [
      1218,
      826
    ],
    [
      1219,
      827
    ],
    [
      1221,
      1226
    ],
    [
      1226,
      1222
    ],
    [
      1222,
      689
    ],
    [
      1224,
      1227
    ],
    [
      1230,
      1231
    ],
    [
      1232,
      1235
    ],
    [
      1232,
      1236
    ],
    [
      1235,
      1233
    ],
    [
      1236,
      1233
    ],
    [
      1233,
      676
    ],
    [
      1238,
      1230
    ],
    [
      1242,
      1232
    ],
    [
      1249,
      1250
    ],
    [
      1250,
      1248
    ],
    [
      1250,
      1238
    ],
    [
      1252,
      1248
    ],
    [
      1253,
      1241
    ],
    [
      1254,
      1255
    ],
    [
      1255,
      1257
    ],
    [
      1255,
      1256
    ],
    [
      1262,
      1264
    ],
    [
      1263,
      1264
    ],
    [
      1267,
      828
    ],
    [
      1272,
      1096
    ],
    [
      1277,
      687
    ],
    [
      1281,
      692
    ],
    [
      1281,
      826
    ],
    [
      1282,
      827
    ],
    [
      1282,
      692
    ],
    [
      1282,
      1115
    ],
    [
      1284,
      689
    ],
    [
      1284,
      1116
    ],
    [
      1284,
      1290
    ],
    [
      1284,
      1287
    ],
    [
      1284,
      1276
    ],
    [
      1285,
      584
    ],
    [
      1285,
      1107
    ],
    [
      1285,
      1299
    ],
    [
      1285,
      676
    ],
    [
      1286,
      1116
    ],
    [
      1286,
      1290
    ],
    [
      1288,
      676
    ],
    [
      1291,
      685
    ],
    [
      1291,
      687
    ],
    [
      1291,
      681
    ],
    [
      1292,
      683
    ],
    [
      1293,
      1292
    ],
    [
      1294,
      1292
    ],
    [
      1306,
      826
    ],
    [
      1306,
      1307
    ],
    [
      1308,
      1307
    ],
    [
      1308,
      1314
    ],
    [
      1309,
      692
    ],
    [
      1309,
      1307
    ],
    [
      1309,
      827
    ],
    [
      1310,
      1307
    ],
    [
      1311,
      1314
    ],
    [
      1313,
      1307
    ],
    [
      1319,
      712
    ],
    [
      1319,
      1044
    ],
    [
      1319,
      735
    ],
    [
      1332,
      1324
    ],
    [
      1334,
      1337
    ],
    [
      1335,
      1322
    ],
    [
      1338,
      909
    ],
    [
      1338,
      1338
    ],
    [
      1338,
      1341
    ],
    [
      1338,
      1343
    ],
    [
      1338,
      1345
    ],
    [
      1343,
      1343
    ],
    [
      1341,
      1342
    ],
    [
      1339,
      732
    ],
    [
      1340,
      953
    ],
    [
      1340,
      913
    ],
    [
      1340,
      914
    ],
    [
      1340,
      1339
    ],
    [
      1340,
      732
    ],
    [
      1340,
      1338
    ],
    [
      1340,
      1346
    ],
    [
      1340,
      912
    ],
    [
      1340,
      909
    ],
    [
      1346,
      817
    ],
    [
      1342,
      687
    ],
    [
      1342,
      1342
    ],
    [
      1347,
      1348
    ],
    [
      1348,
      1351
    ],
    [
      1348,
      817
    ],
    [
      1348,
      1350
    ],
    [
      1348,
      732
    ],
    [
      1351,
      1326
    ],
    [
      1355,
      565
    ],
    [
      1355,
      1027
    ],
    [
      1355,
      572
    ],
    [
      1355,
      1322
    ],
    [
      1355,
      569
    ],
    [
      1358,
      1357
    ],
    [
      1361,
      712
    ],
    [
      1361,
      1357
    ],
    [
      1364,
      712
    ],
    [
      1365,
      1364
    ],
    [
      1371,
      1357
    ],
    [
      1372,
      826
    ],
    [
      1373,
      827
    ],
    [
      1374,
      712
    ],
    [
      1375,
      1363
    ],
    [
      1376,
      1375
    ],
    [
      1377,
      1379
    ],
    [
      1378,
      1375
    ],
    [
      1380,
      1379
    ],
    [
      1381,
      1379
    ],
    [
      1382,
      1358
    ],
    [
      1383,
      1358
    ],
    [
      1384,
      736
    ],
    [
      1384,
      1370
    ],
    [
      1385,
      736
    ],
    [
      1385,
      1370
    ],
    [
      1386,
      1370
    ],
    [
      1393,
      1390
    ],
    [
      1395,
      823
    ],
    [
      1397,
      692
    ],
    [
      1398,
      1392
    ],
    [
      1399,
      1390
    ],
    [
      1400,
      1399
    ],
    [
      1401,
      1399
    ],
    [
      1404,
      828
    ],
    [
      1405,
      1409
    ],
    [
      1410,
      1412
    ],
    [
      1413,
      597
    ],
    [
      1419,
      536
    ],
    [
      1421,
      1424
    ],
    [
      1421,
      1422
    ],
    [
      1422,
      1423
    ],
    [
      1422,
      1494
    ],
    [
      1423,
      1420
    ],
    [
      535,
      1421
    ],
    [
      535,
      1429
    ],
    [
      535,
      527
    ],
    [
      527,
      1492
    ],
    [
      527,
      1696
    ],
    [
      527,
      1697
    ],
    [
      527,
      1695
    ],
    [
      1425,
      1685
    ],
    [
      1426,
      1431
    ],
    [
      1426,
      530
    ],
    [
      1426,
      527
    ],
    [
      1426,
      1426
    ],
    [
      1426,
      1425
    ],
    [
      1426,
      1421
    ],
    [
      1426,
      1429
    ],
    [
      530,
      529
    ],
    [
      1431,
      1430
    ],
    [
      1431,
      1685
    ],
    [
      1431,
      527
    ],
    [
      1428,
      1512
    ],
    [
      1428,
      527
    ],
    [
      1430,
      527
    ],
    [
      533,
      1428
    ],
    [
      1436,
      1438
    ],
    [
      1436,
      1437
    ],
    [
      1437,
      1431
    ],
    [
      1437,
      1426
    ],
    [
      1437,
      1675
    ],
    [
      1437,
      1435
    ],
    [
      1438,
      1431
    ],
    [
      1438,
      1426
    ],
    [
      1438,
      540
    ],
    [
      1438,
      1675
    ],
    [
      1438,
      1435
    ],
    [
      1675,
      1669
    ],
    [
      1675,
      1678
    ],
    [
      1675,
      527
    ],
    [
      1675,
      1685
    ],
    [
      1675,
      1670
    ],
    [
      1675,
      1626
    ],
    [
      1675,
      530
    ],
    [
      1675,
      1666
    ],
    [
      1675,
      1674
    ],
    [
      1675,
      1675
    ],
    [
      1675,
      1672
    ],
    [
      1675,
      1633
    ],
    [
      1675,
      1542
    ],
    [
      1675,
      1671
    ],
    [
      1675,
      1667
    ],
    [
      1675,
      1699
    ],
    [
      1675,
      1477
    ],
    [
      540,
      1766
    ],
    [
      540,
      1767
    ],
    [
      1454,
      1459
    ],
    [
      1456,
      1458
    ],
    [
      1456,
      1492
    ],
    [
      1456,
      1457
    ],
    [
      1508,
      1605
    ],
    [
      1520,
      1748
    ],
    [
      1522,
      1456
    ],
    [
      1522,
      1486
    ],
    [
      1522,
      1483
    ],
    [
      1524,
      1522
    ],
    [
      1526,
      1762
    ],
    [
      1762,
      1761
    ],
    [
      1530,
      1633
    ],
    [
      1531,
      1529
    ],
    [
      1531,
      1543
    ],
    [
      1531,
      1629
    ],
    [
      1531,
      1633
    ],
    [
      1531,
      1530
    ],
    [
      1629,
      1632
    ],
    [
      1629,
      1630
    ],
    [
      1532,
      1531
    ],
    [
      1533,
      1637
    ],
    [
      1533,
      1545
    ],
    [
      1533,
      1599
    ],
    [
      1637,
      1515
    ],
    [
      1599,
      1610
    ],
    [
      1599,
      1572
    ],
    [
      1599,
      1606
    ],
    [
      1535,
      1710
    ],
    [
      1536,
      1710
    ],
    [
      1537,
      1540
    ],
    [
      1540,
      1713
    ],
    [
      1540,
      1714
    ],
    [
      1540,
      1541
    ],
    [
      1540,
      1711
    ],
    [
      1540,
      1710
    ],
    [
      1540,
      1709
    ],
    [
      1540,
      1712
    ],
    [
      1538,
      1540
    ],
    [
      1713,
      1716
    ],
    [
      1713,
      1712
    ],
    [
      1713,
      1715
    ],
    [
      1541,
      1704
    ],
    [
      1541,
      1714
    ],
    [
      1704,
      1702
    ],
    [
      1704,
      1703
    ],
    [
      1542,
      1471
    ],
    [
      1552,
      1552
    ],
    [
      1552,
      1783
    ],
    [
      1557,
      1784
    ],
    [
      1564,
      1785
    ],
    [
      1567,
      1570
    ],
    [
      1570,
      1560
    ],
    [
      1570,
      1556
    ],
    [
      1570,
      1551
    ],
    [
      1570,
      1567
    ],
    [
      1570,
      1563
    ],
    [
      1590,
      1570
    ],
    [
      1591,
      1569
    ],
    [
      1591,
      1564
    ],
    [
      1591,
      1557
    ],
    [
      1591,
      1552
    ],
    [
      1591,
      1548
    ],
    [
      1591,
      1592
    ],
    [
      1592,
      1569
    ],
    [
      1592,
      1553
    ],
    [
      1592,
      1564
    ],
    [
      1592,
      1557
    ],
    [
      1592,
      1561
    ],
    [
      1592,
      1558
    ],
    [
      1592,
      1552
    ],
    [
      1592,
      1548
    ],
    [
      1592,
      1565
    ],
    [
      1592,
      1568
    ],
    [
      1593,
      1610
    ],
    [
      1593,
      1585
    ],
    [
      1610,
      1575
    ],
    [
      1610,
      1574
    ],
    [
      1610,
      1591
    ],
    [
      1610,
      1590
    ],
    [
      1610,
      1609
    ],
    [
      1601,
      1610
    ],
    [
      1602,
      1610
    ],
    [
      1604,
      1636
    ],
    [
      1607,
      1467
    ],
    [
      1607,
      1600
    ],
    [
      1609,
      1607
    ],
    [
      1609,
      1505
    ],
    [
      1609,
      1608
    ],
    [
      1611,
      1636
    ],
    [
      1611,
      1610
    ],
    [
      1611,
      1617
    ],
    [
      1611,
      1620
    ],
    [
      1620,
      1638
    ],
    [
      1620,
      1607
    ],
    [
      1620,
      1617
    ],
    [
      1620,
      1619
    ],
    [
      1620,
      1618
    ],
    [
      1620,
      1591
    ],
    [
      1620,
      1590
    ],
    [
      1620,
      1592
    ],
    [
      1618,
      1508
    ],
    [
      1618,
      1613
    ],
    [
      1622,
      1611
    ],
    [
      1626,
      1627
    ],
    [
      1758,
      1759
    ],
    [
      1761,
      1758
    ],
    [
      1761,
      1760
    ],
    [
      1761,
      1757
    ],
    [
      1763,
      1761
    ],
    [
      1639,
      529
    ],
    [
      1645,
      1644
    ],
    [
      1646,
      1645
    ],
    [
      1647,
      1643
    ],
    [
      1648,
      1647
    ],
    [
      1648,
      1646
    ],
    [
      1652,
      1651
    ],
    [
      1654,
      1649
    ],
    [
      1654,
      1650
    ],
    [
      1654,
      1642
    ],
    [
      1654,
      1651
    ],
    [
      1654,
      1475
    ],
    [
      1654,
      1634
    ],
    [
      1658,
      1697
    ],
    [
      1658,
      1681
    ],
    [
      1681,
      1697
    ],
    [
      1697,
      1698
    ],
    [
      1697,
      1633
    ],
    [
      1697,
      1695
    ],
    [
      1661,
      1662
    ],
    [
      1661,
      1673
    ],
    [
      1673,
      1683
    ],
    [
      1664,
      1658
    ],
    [
      1664,
      1750
    ],
    [
      1664,
      1434
    ],
    [
      1750,
      537
    ],
    [
      1666,
      1455
    ],
    [
      1666,
      1679
    ],
    [
      1666,
      1665
    ],
    [
      1666,
      1464
    ],
    [
      1667,
      1464
    ],
    [
      1670,
      1750
    ],
    [
      1670,
      1751
    ],
    [
      1751,
      537
    ],
    [
      1671,
      1467
    ],
    [
      1672,
      1748
    ],
    [
      1672,
      1752
    ],
    [
      1672,
      1467
    ],
    [
      1672,
      1671
    ],
    [
      1672,
      1670
    ],
    [
      1672,
      1668
    ],
    [
      1672,
      1471
    ],
    [
      1672,
      1680
    ],
    [
      1672,
      1542
    ],
    [
      1674,
      1681
    ],
    [
      1674,
      527
    ],
    [
      1699,
      1492
    ],
    [
      1699,
      1695
    ],
    [
      534,
      1677
    ],
    [
      534,
      1664
    ],
    [
      534,
      527
    ],
    [
      1695,
      1633
    ],
    [
      1698,
      1492
    ],
    [
      1705,
      1707
    ],
    [
      1707,
      1706
    ],
    [
      1716,
      1720
    ],
    [
      1716,
      1719
    ],
    [
      1720,
      1743
    ],
    [
      1722,
      1731
    ],
    [
      1724,
      1742
    ],
    [
      1742,
      1743
    ],
    [
      1725,
      1742
    ],
    [
      1726,
      1724
    ],
    [
      1727,
      1728
    ],
    [
      1728,
      1743
    ],
    [
      1730,
      1743
    ],
    [
      537,
      1749
    ],
    [
      1755,
      1748
    ],
    [
      1755,
      1753
    ],
    [
      1767,
      1775
    ],
    [
      1775,
      538
    ],
    [
      1775,
      1769
    ],
    [
      1772,
      1771
    ],
    [
      1773,
      1771
    ],
    [
      1776,
      1771
    ],
    [
      1777,
      1776
    ],
    [
      1779,
      531
    ],
    [
      1782,
      1436
    ],
    [
      1805,
      1826
    ],
    [
      1826,
      1818
    ],
    [
      1806,
      1826
    ],
    [
      1807,
      1829
    ],
    [
      1809,
      1824
    ],
    [
      1809,
      1821
    ],
    [
      1821,
      1820
    ],
    [
      1815,
      1827
    ],
    [
      1815,
      1793
    ],
    [
      1827,
      1818
    ],
    [
      1816,
      1815
    ],
    [
      1823,
      1827
    ],
    [
      1828,
      1804
    ],
    [
      1838,
      1853
    ],
    [
      1839,
      1881
    ],
    [
      1839,
      1879
    ],
    [
      1879,
      1878
    ],
    [
      1881,
      1880
    ],
    [
      1840,
      1855
    ],
    [
      1840,
      1853
    ],
    [
      1840,
      1888
    ],
    [
      1840,
      1841
    ],
    [
      1841,
      1882
    ],
    [
      1841,
      1881
    ],
    [
      1855,
      1881
    ],
    [
      1882,
      1876
    ],
    [
      1842,
      1885
    ],
    [
      1842,
      1838
    ],
    [
      1842,
      1840
    ],
    [
      1842,
      1887
    ],
    [
      1842,
      1881
    ],
    [
      1842,
      1839
    ],
    [
      1885,
      1881
    ],
    [
      1887,
      1886
    ],
    [
      1887,
      1881
    ],
    [
      1844,
      1852
    ],
    [
      1852,
      1853
    ],
    [
      1845,
      1846
    ],
    [
      1846,
      1881
    ],
    [
      1846,
      1853
    ],
    [
      1846,
      1838
    ],
    [
      1849,
      1881
    ],
    [
      1849,
      1838
    ],
    [
      1850,
      1849
    ],
    [
      1851,
      1838
    ],
    [
      1854,
      1881
    ],
    [
      1863,
      1862
    ],
    [
      1868,
      1837
    ],
    [
      1868,
      1842
    ],
    [
      1886,
      1883
    ],
    [
      1886,
      1884
    ],
    [
      1886,
      1881
    ],
    [
      1871,
      1786
    ],
    [
      1871,
      1872
    ],
    [
      1871,
      1787
    ],
    [
      528,
      1893
    ],
    [
      1894,
      1895
    ],
    [
      1900,
      1907
    ],
    [
      1907,
      1908
    ],
    [
      1901,
      1901
    ],
    [
      1902,
      1902
    ],
    [
      1905,
      1904
    ],
    [
      1909,
      1896
    ],
    [
      1913,
      1921
    ],
    [
      1920,
      1898
    ],
    [
      1922,
      1921
    ],
    [
      1923,
      1921
    ],
    [
      1929,
      1483
    ],
    [
      532,
      527
    ],
    [
      1698,
      541
    ],
    [
      1894,
      541
    ],
    [
      1894,
      542
    ],
    [
      1895,
      541
    ],
    [
      1934,
      2011
    ],
    [
      1934,
      1985
    ],
    [
      1934,
      2003
    ],
    [
      1934,
      1965
    ],
    [
      1934,
      1975
    ],
    [
      1934,
      1993
    ],
    [
      1934,
      1972
    ],
    [
      1934,
      1961
    ],
    [
      1934,
      1942
    ],
    [
      1934,
      1989
    ],
    [
      1934,
      1983
    ],
    [
      1934,
      1990
    ],
    [
      1934,
      2004
    ],
    [
      1934,
      1962
    ],
    [
      1934,
      1998
    ],
    [
      1934,
      1945
    ],
    [
      1934,
      2010
    ],
    [
      1934,
      1949
    ],
    [
      1934,
      1981
    ],
    [
      1934,
      1946
    ],
    [
      1934,
      1953
    ],
    [
      1934,
      2005
    ],
    [
      1934,
      2007
    ],
    [
      1934,
      1977
    ],
    [
      1934,
      1944
    ],
    [
      1934,
      1966
    ],
    [
      1934,
      1994
    ],
    [
      1934,
      1943
    ],
    [
      1934,
      1939
    ],
    [
      1934,
      2000
    ],
    [
      1934,
      1963
    ],
    [
      1934,
      1982
    ],
    [
      1934,
      1958
    ],
    [
      1934,
      2014
    ],
    [
      1934,
      1936
    ],
    [
      1934,
      1955
    ],
    [
      1934,
      1976
    ],
    [
      1934,
      1984
    ],
    [
      1934,
      1986
    ],
    [
      1934,
      2016
    ],
    [
      1934,
      1964
    ],
    [
      1934,
      2015
    ],
    [
      1934,
      1987
    ],
    [
      1934,
      1996
    ],
    [
      1934,
      1952
    ],
    [
      1934,
      1937
    ],
    [
      1934,
      1950
    ],
    [
      1934,
      1997
    ],
    [
      1934,
      1940
    ],
    [
      1934,
      2001
    ],
    [
      1934,
      1968
    ],
    [
      1934,
      1978
    ],
    [
      1934,
      1988
    ],
    [
      1934,
      1959
    ],
    [
      1934,
      2013
    ],
    [
      1934,
      1954
    ],
    [
      1934,
      2009
    ],
    [
      1934,
      1991
    ],
    [
      1934,
      1941
    ],
    [
      1934,
      1980
    ],
    [
      1934,
      2002
    ],
    [
      1934,
      1951
    ],
    [
      1934,
      1979
    ],
    [
      1934,
      1969
    ],
    [
      1934,
      1948
    ],
    [
      1934,
      1960
    ],
    [
      1934,
      1947
    ],
    [
      1934,
      1935
    ],
    [
      1934,
      1970
    ],
    [
      1934,
      1974
    ],
    [
      1934,
      2006
    ],
    [
      1934,
      1999
    ],
    [
      1934,
      1967
    ],
    [
      1934,
      1992
    ],
    [
      1934,
      1995
    ],
    [
      1934,
      2012
    ],
    [
      1934,
      1973
    ],
    [
      1934,
      1938
    ],
    [
      1934,
      1957
    ],
    [
      1934,
      1956
    ],
    [
      1934,
      1971
    ],
    [
      1934,
      2008
    ],
    [
      2020,
      2021
    ],
    [
      2023,
      2022
    ],
    [
      2023,
      2021
    ],
    [
      2026,
      2026
    ],
    [
      2027,
      2027
    ],
    [
      2029,
      2053
    ],
    [
      2053,
      2054
    ],
    [
      2053,
      2044
    ],
    [
      2053,
      2052
    ],
    [
      2053,
      2042
    ],
    [
      2031,
      2054
    ],
    [
      2054,
      2052
    ],
    [
      2041,
      2023
    ],
    [
      2050,
      2040
    ],
    [
      2051,
      2041
    ],
    [
      2052,
      2023
    ],
    [
      2052,
      2050
    ],
    [
      2052,
      2049
    ],
    [
      2052,
      2047
    ],
    [
      2052,
      2046
    ],
    [
      2052,
      2048
    ],
    [
      2052,
      2043
    ],
    [
      2052,
      2051
    ],
    [
      2055,
      2043
    ],
    [
      541,
      2055
    ],
    [
      541,
      2053
    ],
    [
      541,
      2045
    ],
    [
      542,
      2054
    ],
    [
      542,
      2055
    ],
    [
      2058,
      541
    ],
    [
      2059,
      542
    ],
    [
      2061,
      2064
    ],
    [
      2061,
      543
    ],
    [
      2065,
      543
    ],
    [
      2066,
      2068
    ],
    [
      2070,
      2071
    ],
    [
      2071,
      2072
    ],
    [
      2071,
      2073
    ],
    [
      2074,
      2077
    ],
    [
      2074,
      2076
    ],
    [
      2076,
      2075
    ],
    [
      2078,
      2080
    ],
    [
      2080,
      2079
    ],
    [
      2081,
      2087
    ],
    [
      2081,
      2089
    ],
    [
      2088,
      2088
    ],
    [
      2089,
      2085
    ],
    [
      2089,
      2084
    ],
    [
      2089,
      2088
    ],
    [
      2089,
      2086
    ],
    [
      2089,
      2083
    ],
    [
      2089,
      2082
    ],
    [
      2090,
      2091
    ],
    [
      2090,
      2109
    ],
    [
      2091,
      2101
    ],
    [
      2091,
      2100
    ],
    [
      2091,
      2092
    ],
    [
      2091,
      2095
    ],
    [
      2091,
      2096
    ],
    [
      2091,
      2093
    ],
    [
      2092,
      2094
    ],
    [
      2101,
      2102
    ],
    [
      2101,
      2099
    ],
    [
      2095,
      2097
    ],
    [
      2096,
      2097
    ],
    [
      2093,
      2097
    ],
    [
      2093,
      2099
    ],
    [
      2093,
      2094
    ],
    [
      2102,
      2107
    ],
    [
      2102,
      2103
    ],
    [
      2102,
      2106
    ],
    [
      2102,
      2108
    ],
    [
      2102,
      2105
    ],
    [
      2102,
      2104
    ],
    [
      2104,
      2104
    ],
    [
      2106,
      2106
    ],
    [
      2107,
      2107
    ],
    [
      2108,
      2108
    ],
    [
      2105,
      2105
    ],
    [
      2109,
      2102
    ],
    [
      2110,
      2111
    ],
    [
      2111,
      2113
    ],
    [
      2111,
      2112
    ],
    [
      2113,
      2114
    ],
    [
      2115,
      2116
    ],
    [
      2116,
      2117
    ],
    [
      2117,
      2118
    ],
    [
      2123,
      2122
    ],
    [
      2123,
      2123
    ],
    [
      2124,
      2124
    ],
    [
      2124,
      2123
    ],
    [
      2125,
      2123
    ],
    [
      2126,
      2139
    ],
    [
      2128,
      2129
    ],
    [
      2128,
      2128
    ],
    [
      2129,
      2129
    ],
    [
      2129,
      2127
    ],
    [
      2129,
      2128
    ],
    [
      2133,
      2129
    ],
    [
      2133,
      2128
    ],
    [
      2134,
      2129
    ],
    [
      2135,
      2137
    ],
    [
      2137,
      2137
    ],
    [
      2136,
      2137
    ],
    [
      2138,
      2131
    ],
    [
      2138,
      2136
    ],
    [
      2138,
      2134
    ],
    [
      2138,
      2132
    ],
    [
      2138,
      2135
    ],
    [
      2138,
      2130
    ],
    [
      2138,
      2133
    ],
    [
      2139,
      2138
    ],
    [
      2140,
      2141
    ],
    [
      2141,
      2142
    ],
    [
      2142,
      2143
    ],
    [
      2143,
      2145
    ],
    [
      2143,
      2149
    ],
    [
      2143,
      2147
    ],
    [
      2143,
      2146
    ],
    [
      2143,
      2144
    ],
    [
      2143,
      2148
    ],
    [
      2145,
      2145
    ],
    [
      2147,
      2147
    ],
    [
      2148,
      2148
    ],
    [
      2149,
      2149
    ],
    [
      2146,
      2146
    ],
    [
      2155,
      2156
    ],
    [
      2156,
      2157
    ],
    [
      2158,
      2165
    ],
    [
      2163,
      2164
    ],
    [
      2164,
      2164
    ],
    [
      2165,
      2161
    ],
    [
      2165,
      2162
    ],
    [
      2165,
      2159
    ],
    [
      2165,
      2160
    ],
    [
      2166,
      2168
    ],
    [
      2166,
      2171
    ],
    [
      2166,
      2173
    ],
    [
      2169,
      2170
    ],
    [
      2176,
      2184
    ],
    [
      2177,
      2181
    ],
    [
      2177,
      2178
    ],
    [
      2181,
      2182
    ],
    [
      2178,
      2179
    ],
    [
      2179,
      2179
    ],
    [
      2179,
      2181
    ],
    [
      2180,
      2180
    ],
    [
      2184,
      2183
    ],
    [
      2184,
      2177
    ],
    [
      2185,
      2186
    ],
    [
      2186,
      2187
    ],
    [
      2186,
      2189
    ],
    [
      2186,
      2190
    ],
    [
      2186,
      2193
    ],
    [
      2186,
      2188
    ],
    [
      2189,
      2191
    ],
    [
      2190,
      2191
    ],
    [
      2187,
      2192
    ],
    [
      2191,
      2191
    ],
    [
      2072,
      309
    ],
    [
      2072,
      309
    ],
    [
      2075,
      313
    ],
    [
      2075,
      312
    ],
    [
      2075,
      309
    ],
    [
      2075,
      309
    ],
    [
      2075,
      313
    ],
    [
      2075,
      312
    ],
    [
      2081,
      327
    ],
    [
      2087,
      327
    ],
    [
      2087,
      335
    ],
    [
      2087,
      332
    ],
    [
      2087,
      327
    ],
    [
      2087,
      332
    ],
    [
      2087,
      327
    ],
    [
      2087,
      332
    ],
    [
      2087,
      327
    ],
    [
      2087,
      327
    ],
    [
      2087,
      335
    ],
    [
      2088,
      327
    ],
    [
      2088,
      335
    ],
    [
      2088,
      327
    ],
    [
      2088,
      335
    ],
    [
      2159,
      327
    ],
    [
      2159,
      335
    ],
    [
      2159,
      332
    ],
    [
      2159,
      327
    ],
    [
      2159,
      332
    ],
    [
      2159,
      327
    ],
    [
      2159,
      332
    ],
    [
      2159,
      327
    ],
    [
      2159,
      327
    ],
    [
      2159,
      335
    ],
    [
      2160,
      332
    ],
    [
      2160,
      327
    ],
    [
      2160,
      332
    ],
    [
      2160,
      327
    ],
    [
      2161,
      332
    ],
    [
      2161,
      327
    ],
    [
      2161,
      332
    ],
    [
      2161,
      327
    ],
    [
      2161,
      332
    ],
    [
      2161,
      327
    ],
    [
      2162,
      327
    ],
    [
      2162,
      335
    ],
    [
      2165,
      327
    ],
    [
      2166,
      309
    ],
    [
      2166,
      315
    ],
    [
      2166,
      313
    ],
    [
      2166,
      315
    ],
    [
      2166,
      309
    ],
    [
      2166,
      312
    ],
    [
      2166,
      312
    ],
    [
      2166,
      313
    ]
  ],
  "nodes": {
    "0": {
      "URI": "//charset-normalizer/charset_normalizer.md/",
      "metadata": {
        "LoC": 571
      }
    },
    "1": {
      "URI": "//charset-normalizer/charset_normalizer.md/MessDetectorPlugin",
      "metadata": {
        "LoC": 10
      }
    },
    "2": {
      "URI": "//charset-normalizer/charset_normalizer.md/MessDetectorPlugin.eligible()",
      "metadata": {
        "LoC": 5
      }
    },
    "3": {
      "URI": "//charset-normalizer/charset_normalizer.md/MessDetectorPlugin.feed()",
      "metadata": {
        "LoC": 6
      }
    },
    "4": {
      "URI": "//charset-normalizer/charset_normalizer.md/MessDetectorPlugin.reset()",
      "metadata": {
        "LoC": 5
      }
    },
    "5": {
      "URI": "//charset-normalizer/charset_normalizer.md/MessDetectorPlugin.ratio()",
      "metadata": {
        "LoC": 6
      }
    },
    "6": {
      "URI": "//charset-normalizer/charset_normalizer.md/TooManySymbolOrPunctuationPlugin",
      "metadata": {
        "LoC": 6
      }
    },
    "7": {
      "URI": "//charset-normalizer/charset_normalizer.md/TooManySymbolOrPunctuationPlugin.__init__()",
      "metadata": {
        "LoC": 7
      }
    },
    "8": {
      "URI": "//charset-normalizer/charset_normalizer.md/TooManySymbolOrPunctuationPlugin.eligible()",
      "metadata": {
        "LoC": 2
      }
    },
    "9": {
      "URI": "//charset-normalizer/charset_normalizer.md/TooManySymbolOrPunctuationPlugin.feed()",
      "metadata": {
        "LoC": 17
      }
    },
    "10": {
      "URI": "//charset-normalizer/charset_normalizer.md/TooManySymbolOrPunctuationPlugin.reset()",
      "metadata": {
        "LoC": 4
      }
    },
    "11": {
      "URI": "//charset-normalizer/charset_normalizer.md/TooManySymbolOrPunctuationPlugin.ratio()",
      "metadata": {
        "LoC": 9
      }
    },
    "12": {
      "URI": "//charset-normalizer/charset_normalizer.md/TooManyAccentuatedPlugin",
      "metadata": {
        "LoC": 6
      }
    },
    "13": {
      "URI": "//charset-normalizer/charset_normalizer.md/TooManyAccentuatedPlugin.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "14": {
      "URI": "//charset-normalizer/charset_normalizer.md/TooManyAccentuatedPlugin.eligible()",
      "metadata": {
        "LoC": 2
      }
    },
    "15": {
      "URI": "//charset-normalizer/charset_normalizer.md/TooManyAccentuatedPlugin.feed()",
      "metadata": {
        "LoC": 5
      }
    },
    "16": {
      "URI": "//charset-normalizer/charset_normalizer.md/TooManyAccentuatedPlugin.reset()",
      "metadata": {
        "LoC": 3
      }
    },
    "17": {
      "URI": "//charset-normalizer/charset_normalizer.md/TooManyAccentuatedPlugin.ratio()",
      "metadata": {
        "LoC": 5
      }
    },
    "18": {
      "URI": "//charset-normalizer/charset_normalizer.md/UnprintablePlugin",
      "metadata": {
        "LoC": 6
      }
    },
    "19": {
      "URI": "//charset-normalizer/charset_normalizer.md/UnprintablePlugin.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "20": {
      "URI": "//charset-normalizer/charset_normalizer.md/UnprintablePlugin.eligible()",
      "metadata": {
        "LoC": 2
      }
    },
    "21": {
      "URI": "//charset-normalizer/charset_normalizer.md/UnprintablePlugin.feed()",
      "metadata": {
        "LoC": 4
      }
    },
    "22": {
      "URI": "//charset-normalizer/charset_normalizer.md/UnprintablePlugin.reset()",
      "metadata": {
        "LoC": 2
      }
    },
    "23": {
      "URI": "//charset-normalizer/charset_normalizer.md/UnprintablePlugin.ratio()",
      "metadata": {
        "LoC": 5
      }
    },
    "24": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuspiciousDuplicateAccentPlugin",
      "metadata": {
        "LoC": 6
      }
    },
    "25": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuspiciousDuplicateAccentPlugin.__init__()",
      "metadata": {
        "LoC": 5
      }
    },
    "26": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuspiciousDuplicateAccentPlugin.eligible()",
      "metadata": {
        "LoC": 2
      }
    },
    "27": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuspiciousDuplicateAccentPlugin.feed()",
      "metadata": {
        "LoC": 13
      }
    },
    "28": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuspiciousDuplicateAccentPlugin.reset()",
      "metadata": {
        "LoC": 4
      }
    },
    "29": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuspiciousDuplicateAccentPlugin.ratio()",
      "metadata": {
        "LoC": 5
      }
    },
    "30": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuspiciousRange",
      "metadata": {
        "LoC": 6
      }
    },
    "31": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuspiciousRange.__init__()",
      "metadata": {
        "LoC": 4
      }
    },
    "32": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuspiciousRange.eligible()",
      "metadata": {
        "LoC": 2
      }
    },
    "33": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuspiciousRange.feed()",
      "metadata": {
        "LoC": 22
      }
    },
    "34": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuspiciousRange.reset()",
      "metadata": {
        "LoC": 4
      }
    },
    "35": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuspiciousRange.ratio()",
      "metadata": {
        "LoC": 12
      }
    },
    "36": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuperWeirdWordPlugin",
      "metadata": {
        "LoC": 6
      }
    },
    "37": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuperWeirdWordPlugin.__init__()",
      "metadata": {
        "LoC": 13
      }
    },
    "38": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuperWeirdWordPlugin.eligible()",
      "metadata": {
        "LoC": 2
      }
    },
    "39": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuperWeirdWordPlugin.feed()",
      "metadata": {
        "LoC": 53
      }
    },
    "40": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuperWeirdWordPlugin.reset()",
      "metadata": {
        "LoC": 9
      }
    },
    "41": {
      "URI": "//charset-normalizer/charset_normalizer.md/SuperWeirdWordPlugin.ratio()",
      "metadata": {
        "LoC": 5
      }
    },
    "42": {
      "URI": "//charset-normalizer/charset_normalizer.md/CjkInvalidStopPlugin",
      "metadata": {
        "LoC": 11
      }
    },
    "43": {
      "URI": "//charset-normalizer/charset_normalizer.md/CjkInvalidStopPlugin.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "44": {
      "URI": "//charset-normalizer/charset_normalizer.md/CjkInvalidStopPlugin.eligible()",
      "metadata": {
        "LoC": 2
      }
    },
    "45": {
      "URI": "//charset-normalizer/charset_normalizer.md/CjkInvalidStopPlugin.feed()",
      "metadata": {
        "LoC": 6
      }
    },
    "46": {
      "URI": "//charset-normalizer/charset_normalizer.md/CjkInvalidStopPlugin.reset()",
      "metadata": {
        "LoC": 3
      }
    },
    "47": {
      "URI": "//charset-normalizer/charset_normalizer.md/CjkInvalidStopPlugin.ratio()",
      "metadata": {
        "LoC": 4
      }
    },
    "48": {
      "URI": "//charset-normalizer/charset_normalizer.md/ArchaicUpperLowerPlugin",
      "metadata": {
        "LoC": 6
      }
    },
    "49": {
      "URI": "//charset-normalizer/charset_normalizer.md/ArchaicUpperLowerPlugin.__init__()",
      "metadata": {
        "LoC": 12
      }
    },
    "50": {
      "URI": "//charset-normalizer/charset_normalizer.md/ArchaicUpperLowerPlugin.eligible()",
      "metadata": {
        "LoC": 2
      }
    },
    "51": {
      "URI": "//charset-normalizer/charset_normalizer.md/ArchaicUpperLowerPlugin.feed()",
      "metadata": {
        "LoC": 41
      }
    },
    "52": {
      "URI": "//charset-normalizer/charset_normalizer.md/ArchaicUpperLowerPlugin.reset()",
      "metadata": {
        "LoC": 8
      }
    },
    "53": {
      "URI": "//charset-normalizer/charset_normalizer.md/ArchaicUpperLowerPlugin.ratio()",
      "metadata": {
        "LoC": 5
      }
    },
    "54": {
      "URI": "//charset-normalizer/charset_normalizer.md/is_suspiciously_successive_range()",
      "metadata": {
        "LoC": 68
      }
    },
    "55": {
      "URI": "//charset-normalizer/charset_normalizer.md/mess_ratio()",
      "metadata": {
        "LoC": 53
      }
    },
    "56": {
      "URI": "//charset-normalizer/charset_normalizer.constant/",
      "metadata": {
        "LoC": 495
      }
    },
    "57": {
      "URI": "//charset-normalizer/charset_normalizer.assets/",
      "metadata": {
        "LoC": 1440
      }
    },
    "58": {
      "URI": "//charset-normalizer/charset_normalizer/",
      "metadata": {
        "LoC": 45
      }
    },
    "59": {
      "URI": "//charset-normalizer/charset_normalizer.api/",
      "metadata": {
        "LoC": 554
      }
    },
    "60": {
      "URI": "//charset-normalizer/charset_normalizer.api/from_bytes()",
      "metadata": {
        "LoC": 465
      }
    },
    "61": {
      "URI": "//charset-normalizer/charset_normalizer.api/from_fp()",
      "metadata": {
        "LoC": 25
      }
    },
    "62": {
      "URI": "//charset-normalizer/charset_normalizer.api/from_path()",
      "metadata": {
        "LoC": 26
      }
    },
    "63": {
      "URI": "//charset-normalizer/charset_normalizer.cd/",
      "metadata": {
        "LoC": 390
      }
    },
    "64": {
      "URI": "//charset-normalizer/charset_normalizer.cd/encoding_unicode_range()",
      "metadata": {
        "LoC": 35
      }
    },
    "65": {
      "URI": "//charset-normalizer/charset_normalizer.cd/unicode_range_languages()",
      "metadata": {
        "LoC": 13
      }
    },
    "66": {
      "URI": "//charset-normalizer/charset_normalizer.cd/encoding_languages()",
      "metadata": {
        "LoC": 17
      }
    },
    "67": {
      "URI": "//charset-normalizer/charset_normalizer.cd/mb_encoding_languages()",
      "metadata": {
        "LoC": 18
      }
    },
    "68": {
      "URI": "//charset-normalizer/charset_normalizer.cd/get_target_features()",
      "metadata": {
        "LoC": 14
      }
    },
    "69": {
      "URI": "//charset-normalizer/charset_normalizer.cd/alphabet_languages()",
      "metadata": {
        "LoC": 33
      }
    },
    "70": {
      "URI": "//charset-normalizer/charset_normalizer.cd/characters_popularity_compare()",
      "metadata": {
        "LoC": 78
      }
    },
    "71": {
      "URI": "//charset-normalizer/charset_normalizer.cd/alpha_unicode_split()",
      "metadata": {
        "LoC": 37
      }
    },
    "72": {
      "URI": "//charset-normalizer/charset_normalizer.cd/merge_coherence_ratios()",
      "metadata": {
        "LoC": 26
      }
    },
    "73": {
      "URI": "//charset-normalizer/charset_normalizer.cd/filter_alt_coherence_matches()",
      "metadata": {
        "LoC": 25
      }
    },
    "74": {
      "URI": "//charset-normalizer/charset_normalizer.cd/coherence_ratio()",
      "metadata": {
        "LoC": 48
      }
    },
    "75": {
      "URI": "//charset-normalizer/charset_normalizer.models/",
      "metadata": {
        "LoC": 337
      }
    },
    "76": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch",
      "metadata": {
        "LoC": 41
      }
    },
    "77": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.__init__()",
      "metadata": {
        "LoC": 24
      }
    },
    "78": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.__eq__()",
      "metadata": {
        "LoC": 8
      }
    },
    "79": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.__lt__()",
      "metadata": {
        "LoC": 18
      }
    },
    "80": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.multi_byte_usage()",
      "metadata": {
        "LoC": 2
      }
    },
    "81": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.__str__()",
      "metadata": {
        "LoC": 5
      }
    },
    "82": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.__repr__()",
      "metadata": {
        "LoC": 2
      }
    },
    "83": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.add_submatch()",
      "metadata": {
        "LoC": 10
      }
    },
    "84": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.encoding()",
      "metadata": {
        "LoC": 2
      }
    },
    "85": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.encoding_aliases()",
      "metadata": {
        "LoC": 11
      }
    },
    "86": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.bom()",
      "metadata": {
        "LoC": 2
      }
    },
    "87": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.byte_order_mark()",
      "metadata": {
        "LoC": 2
      }
    },
    "88": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.languages()",
      "metadata": {
        "LoC": 6
      }
    },
    "89": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.language()",
      "metadata": {
        "LoC": 26
      }
    },
    "90": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.chaos()",
      "metadata": {
        "LoC": 2
      }
    },
    "91": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.coherence()",
      "metadata": {
        "LoC": 4
      }
    },
    "92": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.percent_chaos()",
      "metadata": {
        "LoC": 2
      }
    },
    "93": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.percent_coherence()",
      "metadata": {
        "LoC": 2
      }
    },
    "94": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.raw()",
      "metadata": {
        "LoC": 5
      }
    },
    "95": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.submatch()",
      "metadata": {
        "LoC": 2
      }
    },
    "96": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.has_submatch()",
      "metadata": {
        "LoC": 2
      }
    },
    "97": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.alphabets()",
      "metadata": {
        "LoC": 10
      }
    },
    "98": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.could_be_from_charset()",
      "metadata": {
        "LoC": 7
      }
    },
    "99": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.output()",
      "metadata": {
        "LoC": 10
      }
    },
    "100": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatch.fingerprint()",
      "metadata": {
        "LoC": 5
      }
    },
    "101": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatches",
      "metadata": {
        "LoC": 13
      }
    },
    "102": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatches.__init__()",
      "metadata": {
        "LoC": 2
      }
    },
    "103": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatches.__iter__()",
      "metadata": {
        "LoC": 2
      }
    },
    "104": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatches.__getitem__()",
      "metadata": {
        "LoC": 13
      }
    },
    "105": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatches.__len__()",
      "metadata": {
        "LoC": 2
      }
    },
    "106": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatches.__bool__()",
      "metadata": {
        "LoC": 2
      }
    },
    "107": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatches.append()",
      "metadata": {
        "LoC": 19
      }
    },
    "108": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatches.best()",
      "metadata": {
        "LoC": 7
      }
    },
    "109": {
      "URI": "//charset-normalizer/charset_normalizer.models/CharsetMatches.first()",
      "metadata": {
        "LoC": 5
      }
    },
    "110": {
      "URI": "//charset-normalizer/charset_normalizer.models/CliDetectionResult",
      "metadata": {
        "LoC": 5
      }
    },
    "111": {
      "URI": "//charset-normalizer/charset_normalizer.models/CliDetectionResult.__init__()",
      "metadata": {
        "LoC": 25
      }
    },
    "112": {
      "URI": "//charset-normalizer/charset_normalizer.models/CliDetectionResult.__dict__()",
      "metadata": {
        "LoC": 13
      }
    },
    "113": {
      "URI": "//charset-normalizer/charset_normalizer.models/CliDetectionResult.to_json()",
      "metadata": {
        "LoC": 2
      }
    },
    "114": {
      "URI": "//charset-normalizer/charset_normalizer.utils/",
      "metadata": {
        "LoC": 414
      }
    },
    "115": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_accentuated()",
      "metadata": {
        "LoC": 12
      }
    },
    "116": {
      "URI": "//charset-normalizer/charset_normalizer.utils/remove_accent()",
      "metadata": {
        "LoC": 8
      }
    },
    "117": {
      "URI": "//charset-normalizer/charset_normalizer.utils/unicode_range()",
      "metadata": {
        "LoC": 11
      }
    },
    "118": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_latin()",
      "metadata": {
        "LoC": 6
      }
    },
    "119": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_ascii()",
      "metadata": {
        "LoC": 6
      }
    },
    "120": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_punctuation()",
      "metadata": {
        "LoC": 12
      }
    },
    "121": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_symbol()",
      "metadata": {
        "LoC": 12
      }
    },
    "122": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_emoticon()",
      "metadata": {
        "LoC": 7
      }
    },
    "123": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_separator()",
      "metadata": {
        "LoC": 7
      }
    },
    "124": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_case_variable()",
      "metadata": {
        "LoC": 2
      }
    },
    "125": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_private_use_only()",
      "metadata": {
        "LoC": 4
      }
    },
    "126": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_cjk()",
      "metadata": {
        "LoC": 7
      }
    },
    "127": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_hiragana()",
      "metadata": {
        "LoC": 7
      }
    },
    "128": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_katakana()",
      "metadata": {
        "LoC": 7
      }
    },
    "129": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_hangul()",
      "metadata": {
        "LoC": 7
      }
    },
    "130": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_thai()",
      "metadata": {
        "LoC": 7
      }
    },
    "131": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_unicode_range_secondary()",
      "metadata": {
        "LoC": 2
      }
    },
    "132": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_unprintable()",
      "metadata": {
        "LoC": 6
      }
    },
    "133": {
      "URI": "//charset-normalizer/charset_normalizer.utils/any_specified_encoding()",
      "metadata": {
        "LoC": 30
      }
    },
    "134": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_multi_byte_encoding()",
      "metadata": {
        "LoC": 17
      }
    },
    "135": {
      "URI": "//charset-normalizer/charset_normalizer.utils/identify_sig_or_bom()",
      "metadata": {
        "LoC": 16
      }
    },
    "136": {
      "URI": "//charset-normalizer/charset_normalizer.utils/should_strip_sig_or_bom()",
      "metadata": {
        "LoC": 2
      }
    },
    "137": {
      "URI": "//charset-normalizer/charset_normalizer.utils/iana_name()",
      "metadata": {
        "LoC": 14
      }
    },
    "138": {
      "URI": "//charset-normalizer/charset_normalizer.utils/range_scan()",
      "metadata": {
        "LoC": 12
      }
    },
    "139": {
      "URI": "//charset-normalizer/charset_normalizer.utils/cp_similarity()",
      "metadata": {
        "LoC": 22
      }
    },
    "140": {
      "URI": "//charset-normalizer/charset_normalizer.utils/is_cp_similar()",
      "metadata": {
        "LoC": 8
      }
    },
    "141": {
      "URI": "//charset-normalizer/charset_normalizer.utils/set_logging_handler()",
      "metadata": {
        "LoC": 11
      }
    },
    "142": {
      "URI": "//charset-normalizer/charset_normalizer.utils/cut_sequence_chunks()",
      "metadata": {
        "LoC": 54
      }
    },
    "143": {
      "URI": "//charset-normalizer/charset_normalizer.legacy/",
      "metadata": {
        "LoC": 54
      }
    },
    "144": {
      "URI": "//charset-normalizer/charset_normalizer.legacy/detect()",
      "metadata": {
        "LoC": 46
      }
    },
    "145": {
      "URI": "//charset-normalizer/charset_normalizer.version/",
      "metadata": {
        "LoC": 6
      }
    },
    "146": {
      "URI": "//charset-normalizer/charset_normalizer.cli.normalizer/",
      "metadata": {
        "LoC": 296
      }
    },
    "147": {
      "URI": "//charset-normalizer/charset_normalizer.cli.normalizer/query_yes_no()",
      "metadata": {
        "LoC": 31
      }
    },
    "148": {
      "URI": "//charset-normalizer/charset_normalizer.cli.normalizer/cli_detect()",
      "metadata": {
        "LoC": 245
      }
    },
    "149": {
      "URI": "//charset-normalizer/charset_normalizer.cli/",
      "metadata": {
        "LoC": 1
      }
    },
    "150": {
      "URI": "//requests/requests.utils/",
      "metadata": {
        "LoC": 1094
      }
    },
    "151": {
      "URI": "//requests/requests.utils/proxy_bypass_registry()",
      "metadata": {
        "LoC": 35
      }
    },
    "152": {
      "URI": "//requests/requests.utils/proxy_bypass()",
      "metadata": {
        "LoC": 10
      }
    },
    "153": {
      "URI": "//requests/requests.utils/dict_to_sequence()",
      "metadata": {
        "LoC": 7
      }
    },
    "154": {
      "URI": "//requests/requests.utils/super_len()",
      "metadata": {
        "LoC": 64
      }
    },
    "155": {
      "URI": "//requests/requests.utils/get_netrc_auth()",
      "metadata": {
        "LoC": 55
      }
    },
    "156": {
      "URI": "//requests/requests.utils/guess_filename()",
      "metadata": {
        "LoC": 5
      }
    },
    "157": {
      "URI": "//requests/requests.utils/extract_zipped_paths()",
      "metadata": {
        "LoC": 35
      }
    },
    "158": {
      "URI": "//requests/requests.utils/atomic_open()",
      "metadata": {
        "LoC": 10
      }
    },
    "159": {
      "URI": "//requests/requests.utils/from_key_val_list()",
      "metadata": {
        "LoC": 25
      }
    },
    "160": {
      "URI": "//requests/requests.utils/to_key_val_list()",
      "metadata": {
        "LoC": 27
      }
    },
    "161": {
      "URI": "//requests/requests.utils/parse_list_header()",
      "metadata": {
        "LoC": 29
      }
    },
    "162": {
      "URI": "//requests/requests.utils/parse_dict_header()",
      "metadata": {
        "LoC": 32
      }
    },
    "163": {
      "URI": "//requests/requests.utils/unquote_header_value()",
      "metadata": {
        "LoC": 23
      }
    },
    "164": {
      "URI": "//requests/requests.utils/dict_from_cookiejar()",
      "metadata": {
        "LoC": 13
      }
    },
    "165": {
      "URI": "//requests/requests.utils/add_dict_to_cookiejar()",
      "metadata": {
        "LoC": 9
      }
    },
    "166": {
      "URI": "//requests/requests.utils/get_encodings_from_content()",
      "metadata": {
        "LoC": 22
      }
    },
    "167": {
      "URI": "//requests/requests.utils/_parse_content_type_header()",
      "metadata": {
        "LoC": 23
      }
    },
    "168": {
      "URI": "//requests/requests.utils/get_encoding_from_headers()",
      "metadata": {
        "LoC": 23
      }
    },
    "169": {
      "URI": "//requests/requests.utils/stream_decode_response_unicode()",
      "metadata": {
        "LoC": 15
      }
    },
    "170": {
      "URI": "//requests/requests.utils/iter_slices()",
      "metadata": {
        "LoC": 8
      }
    },
    "171": {
      "URI": "//requests/requests.utils/get_unicode_from_response()",
      "metadata": {
        "LoC": 37
      }
    },
    "172": {
      "URI": "//requests/requests.utils/unquote_unreserved()",
      "metadata": {
        "LoC": 22
      }
    },
    "173": {
      "URI": "//requests/requests.utils/requote_uri()",
      "metadata": {
        "LoC": 20
      }
    },
    "174": {
      "URI": "//requests/requests.utils/address_in_network()",
      "metadata": {
        "LoC": 13
      }
    },
    "175": {
      "URI": "//requests/requests.utils/dotted_netmask()",
      "metadata": {
        "LoC": 9
      }
    },
    "176": {
      "URI": "//requests/requests.utils/is_ipv4_address()",
      "metadata": {
        "LoC": 9
      }
    },
    "177": {
      "URI": "//requests/requests.utils/is_valid_cidr()",
      "metadata": {
        "LoC": 22
      }
    },
    "178": {
      "URI": "//requests/requests.utils/set_environ()",
      "metadata": {
        "LoC": 19
      }
    },
    "179": {
      "URI": "//requests/requests.utils/should_bypass_proxies()",
      "metadata": {
        "LoC": 56
      }
    },
    "180": {
      "URI": "//requests/requests.utils/should_bypass_proxies.get_proxy()",
      "metadata": {
        "LoC": 2
      }
    },
    "181": {
      "URI": "//requests/requests.utils/get_environ_proxies()",
      "metadata": {
        "LoC": 10
      }
    },
    "182": {
      "URI": "//requests/requests.utils/select_proxy()",
      "metadata": {
        "LoC": 24
      }
    },
    "183": {
      "URI": "//requests/requests.utils/resolve_proxies()",
      "metadata": {
        "LoC": 25
      }
    },
    "184": {
      "URI": "//requests/requests.utils/default_user_agent()",
      "metadata": {
        "LoC": 7
      }
    },
    "185": {
      "URI": "//requests/requests.utils/default_headers()",
      "metadata": {
        "LoC": 10
      }
    },
    "186": {
      "URI": "//requests/requests.utils/parse_header_links()",
      "metadata": {
        "LoC": 35
      }
    },
    "187": {
      "URI": "//requests/requests.utils/guess_json_utf()",
      "metadata": {
        "LoC": 30
      }
    },
    "188": {
      "URI": "//requests/requests.utils/prepend_scheme_if_needed()",
      "metadata": {
        "LoC": 27
      }
    },
    "189": {
      "URI": "//requests/requests.utils/get_auth_from_url()",
      "metadata": {
        "LoC": 14
      }
    },
    "190": {
      "URI": "//requests/requests.utils/check_header_validity()",
      "metadata": {
        "LoC": 9
      }
    },
    "191": {
      "URI": "//requests/requests.utils/_validate_header_part()",
      "metadata": {
        "LoC": 16
      }
    },
    "192": {
      "URI": "//requests/requests.utils/urldefragauth()",
      "metadata": {
        "LoC": 15
      }
    },
    "193": {
      "URI": "//requests/requests.utils/rewind_body()",
      "metadata": {
        "LoC": 16
      }
    },
    "194": {
      "URI": "//requests/requests.certs/",
      "metadata": {
        "LoC": 17
      }
    },
    "195": {
      "URI": "//requests/requests/",
      "metadata": {
        "LoC": 180
      }
    },
    "196": {
      "URI": "//requests/requests/check_compatibility()",
      "metadata": {
        "LoC": 29
      }
    },
    "197": {
      "URI": "//requests/requests/_check_cryptography()",
      "metadata": {
        "LoC": 12
      }
    },
    "198": {
      "URI": "//requests/requests/compat.MutableMapping.update",
      "metadata": {
        "LoC": 0
      }
    },
    "199": {
      "URI": "//requests/requests/compat.MutableMapping.__dict__",
      "metadata": {
        "LoC": 0
      }
    },
    "200": {
      "URI": "//requests/requests/compat.MutableMapping.set_policy",
      "metadata": {
        "LoC": 0
      }
    },
    "201": {
      "URI": "//requests/requests/compat.MutableMapping._policy",
      "metadata": {
        "LoC": 0
      }
    },
    "202": {
      "URI": "//requests/requests/compat.MutableMapping.decode",
      "metadata": {
        "LoC": 0
      }
    },
    "203": {
      "URI": "//requests/requests/compat.MutableMapping.len",
      "metadata": {
        "LoC": 0
      }
    },
    "204": {
      "URI": "//requests/requests/compat.MutableMapping.fileno",
      "metadata": {
        "LoC": 0
      }
    },
    "205": {
      "URI": "//requests/requests/compat.MutableMapping.tell",
      "metadata": {
        "LoC": 0
      }
    },
    "206": {
      "URI": "//requests/requests/compat.MutableMapping.seek",
      "metadata": {
        "LoC": 0
      }
    },
    "207": {
      "URI": "//requests/requests/compat.MutableMapping.items",
      "metadata": {
        "LoC": 0
      }
    },
    "208": {
      "URI": "//requests/requests/compat.MutableMapping.get",
      "metadata": {
        "LoC": 0
      }
    },
    "209": {
      "URI": "//requests/requests/compat.MutableMapping.split",
      "metadata": {
        "LoC": 0
      }
    },
    "210": {
      "URI": "//requests/requests/compat.MutableMapping.startswith",
      "metadata": {
        "LoC": 0
      }
    },
    "211": {
      "URI": "//requests/requests/compat.MutableMapping.setdefault",
      "metadata": {
        "LoC": 0
      }
    },
    "212": {
      "URI": "//requests/requests/compat.MutableMapping.upper",
      "metadata": {
        "LoC": 0
      }
    },
    "213": {
      "URI": "//requests/requests/compat.MutableMapping.encode",
      "metadata": {
        "LoC": 0
      }
    },
    "214": {
      "URI": "//requests/requests/compat.MutableMapping.extract_cookies",
      "metadata": {
        "LoC": 0
      }
    },
    "215": {
      "URI": "//requests/requests/compat.MutableMapping.add_cookie_header",
      "metadata": {
        "LoC": 0
      }
    },
    "216": {
      "URI": "//requests/requests/compat.MutableMapping.clear",
      "metadata": {
        "LoC": 0
      }
    },
    "217": {
      "URI": "//requests/requests/compat.MutableMapping.value",
      "metadata": {
        "LoC": 0
      }
    },
    "218": {
      "URI": "//requests/requests/compat.MutableMapping.pop",
      "metadata": {
        "LoC": 0
      }
    },
    "219": {
      "URI": "//requests/requests/compat.MutableMapping.lower",
      "metadata": {
        "LoC": 0
      }
    },
    "220": {
      "URI": "//requests/requests/certs.where",
      "metadata": {
        "LoC": 0
      }
    },
    "221": {
      "URI": "//requests/requests/compat.MutableMapping.decode.fileno",
      "metadata": {
        "LoC": 0
      }
    },
    "222": {
      "URI": "//requests/requests/compat.MutableMapping.decode.upper.encode.fileno",
      "metadata": {
        "LoC": 0
      }
    },
    "223": {
      "URI": "//requests/requests/compat.MutableMapping.decode.upper.fileno",
      "metadata": {
        "LoC": 0
      }
    },
    "224": {
      "URI": "//requests/requests/compat.MutableMapping.encode.fileno",
      "metadata": {
        "LoC": 0
      }
    },
    "225": {
      "URI": "//requests/requests/compat.MutableMapping.upper.decode.fileno",
      "metadata": {
        "LoC": 0
      }
    },
    "226": {
      "URI": "//requests/requests/compat.MutableMapping.decode.encode.fileno",
      "metadata": {
        "LoC": 0
      }
    },
    "227": {
      "URI": "//requests/requests/compat.MutableMapping.upper.encode.fileno",
      "metadata": {
        "LoC": 0
      }
    },
    "228": {
      "URI": "//requests/requests/compat.MutableMapping.upper.fileno",
      "metadata": {
        "LoC": 0
      }
    },
    "229": {
      "URI": "//requests/requests/compat.MutableMapping.upper.decode.encode.fileno",
      "metadata": {
        "LoC": 0
      }
    },
    "230": {
      "URI": "//requests/requests/compat.MutableMapping.decode.upper.tell",
      "metadata": {
        "LoC": 0
      }
    },
    "231": {
      "URI": "//requests/requests/compat.MutableMapping.decode.upper.encode.tell",
      "metadata": {
        "LoC": 0
      }
    },
    "232": {
      "URI": "//requests/requests/compat.MutableMapping.upper.decode.tell",
      "metadata": {
        "LoC": 0
      }
    },
    "233": {
      "URI": "//requests/requests/compat.MutableMapping.decode.encode.tell",
      "metadata": {
        "LoC": 0
      }
    },
    "234": {
      "URI": "//requests/requests/compat.MutableMapping.encode.tell",
      "metadata": {
        "LoC": 0
      }
    },
    "235": {
      "URI": "//requests/requests/compat.MutableMapping.upper.decode.encode.tell",
      "metadata": {
        "LoC": 0
      }
    },
    "236": {
      "URI": "//requests/requests/compat.MutableMapping.upper.tell",
      "metadata": {
        "LoC": 0
      }
    },
    "237": {
      "URI": "//requests/requests/compat.MutableMapping.upper.encode.tell",
      "metadata": {
        "LoC": 0
      }
    },
    "238": {
      "URI": "//requests/requests/compat.MutableMapping.decode.tell",
      "metadata": {
        "LoC": 0
      }
    },
    "239": {
      "URI": "//requests/requests/compat.MutableMapping.decode.seek",
      "metadata": {
        "LoC": 0
      }
    },
    "240": {
      "URI": "//requests/requests/compat.MutableMapping.decode.upper.encode.seek",
      "metadata": {
        "LoC": 0
      }
    },
    "241": {
      "URI": "//requests/requests/compat.MutableMapping.decode.upper.seek",
      "metadata": {
        "LoC": 0
      }
    },
    "242": {
      "URI": "//requests/requests/compat.MutableMapping.encode.seek",
      "metadata": {
        "LoC": 0
      }
    },
    "243": {
      "URI": "//requests/requests/compat.MutableMapping.upper.encode.seek",
      "metadata": {
        "LoC": 0
      }
    },
    "244": {
      "URI": "//requests/requests/compat.MutableMapping.upper.decode.encode.seek",
      "metadata": {
        "LoC": 0
      }
    },
    "245": {
      "URI": "//requests/requests/compat.MutableMapping.decode.encode.seek",
      "metadata": {
        "LoC": 0
      }
    },
    "246": {
      "URI": "//requests/requests/compat.MutableMapping.upper.decode.seek",
      "metadata": {
        "LoC": 0
      }
    },
    "247": {
      "URI": "//requests/requests/compat.MutableMapping.upper.seek",
      "metadata": {
        "LoC": 0
      }
    },
    "248": {
      "URI": "//requests/requests/compat.MutableMapping.get.split",
      "metadata": {
        "LoC": 0
      }
    },
    "249": {
      "URI": "//requests/requests/compat.MutableMapping.decode.upper.split",
      "metadata": {
        "LoC": 0
      }
    },
    "250": {
      "URI": "//requests/requests/compat.MutableMapping.upper.decode.split",
      "metadata": {
        "LoC": 0
      }
    },
    "251": {
      "URI": "//requests/requests/compat.MutableMapping.upper.split",
      "metadata": {
        "LoC": 0
      }
    },
    "252": {
      "URI": "//requests/requests/compat.MutableMapping.decode.split",
      "metadata": {
        "LoC": 0
      }
    },
    "253": {
      "URI": "//requests/requests/utils.get_environ_proxies.<dict1>.get",
      "metadata": {
        "LoC": 0
      }
    },
    "254": {
      "URI": "//requests/requests/compat.MutableMapping.get.strip",
      "metadata": {
        "LoC": 0
      }
    },
    "255": {
      "URI": "//requests/requests/compat.MutableMapping.decode.upper.startswith",
      "metadata": {
        "LoC": 0
      }
    },
    "256": {
      "URI": "//requests/requests/compat.MutableMapping.upper.startswith",
      "metadata": {
        "LoC": 0
      }
    },
    "257": {
      "URI": "//requests/requests/compat.MutableMapping.decode.startswith",
      "metadata": {
        "LoC": 0
      }
    },
    "258": {
      "URI": "//requests/requests/compat.MutableMapping.upper.decode.startswith",
      "metadata": {
        "LoC": 0
      }
    },
    "259": {
      "URI": "//requests/requests/compat.MutableMapping.__init__",
      "metadata": {
        "LoC": 0
      }
    },
    "260": {
      "URI": "//requests/requests/compat.MutableMapping.upper.lower",
      "metadata": {
        "LoC": 0
      }
    },
    "261": {
      "URI": "//requests/requests/compat.MutableMapping.decode.upper.lower",
      "metadata": {
        "LoC": 0
      }
    },
    "262": {
      "URI": "//requests/requests/compat.MutableMapping.upper.decode.lower",
      "metadata": {
        "LoC": 0
      }
    },
    "263": {
      "URI": "//requests/requests/compat.MutableMapping.decode.lower",
      "metadata": {
        "LoC": 0
      }
    },
    "264": {
      "URI": "//requests/requests/compat.MutableMapping.decode.lower.startswith",
      "metadata": {
        "LoC": 0
      }
    },
    "265": {
      "URI": "//requests/requests/compat.MutableMapping.upper.lower.startswith",
      "metadata": {
        "LoC": 0
      }
    },
    "266": {
      "URI": "//requests/requests/compat.MutableMapping.upper.decode.lower.startswith",
      "metadata": {
        "LoC": 0
      }
    },
    "267": {
      "URI": "//requests/requests/compat.MutableMapping.decode.upper.lower.startswith",
      "metadata": {
        "LoC": 0
      }
    },
    "268": {
      "URI": "//requests/requests/compat.MutableMapping.lower.startswith",
      "metadata": {
        "LoC": 0
      }
    },
    "269": {
      "URI": "//requests/requests/compat.MutableMapping.decode.upper",
      "metadata": {
        "LoC": 0
      }
    },
    "270": {
      "URI": "//requests/requests/compat.MutableMapping.decode.encode",
      "metadata": {
        "LoC": 0
      }
    },
    "271": {
      "URI": "//requests/requests/compat.MutableMapping.upper.encode",
      "metadata": {
        "LoC": 0
      }
    },
    "272": {
      "URI": "//requests/requests/compat.MutableMapping.upper.decode.encode",
      "metadata": {
        "LoC": 0
      }
    },
    "273": {
      "URI": "//requests/requests/compat.MutableMapping.decode.upper.encode",
      "metadata": {
        "LoC": 0
      }
    },
    "274": {
      "URI": "//requests/requests/compat.MutableMapping.upper.decode",
      "metadata": {
        "LoC": 0
      }
    },
    "275": {
      "URI": "//requests/requests/models.PreparedRequest.prepare_url.host.encode",
      "metadata": {
        "LoC": 0
      }
    },
    "276": {
      "URI": "//requests/requests.exceptions/",
      "metadata": {
        "LoC": 141
      }
    },
    "277": {
      "URI": "//requests/requests.exceptions/RequestException",
      "metadata": {
        "LoC": 5
      }
    },
    "278": {
      "URI": "//requests/requests.exceptions/RequestException.__init__()",
      "metadata": {
        "LoC": 8
      }
    },
    "279": {
      "URI": "//requests/requests.exceptions/InvalidJSONError",
      "metadata": {
        "LoC": 2
      }
    },
    "280": {
      "URI": "//requests/requests.exceptions/JSONDecodeError",
      "metadata": {
        "LoC": 3
      }
    },
    "281": {
      "URI": "//requests/requests.exceptions/JSONDecodeError.__init__()",
      "metadata": {
        "LoC": 9
      }
    },
    "282": {
      "URI": "//requests/requests.exceptions/HTTPError",
      "metadata": {
        "LoC": 2
      }
    },
    "283": {
      "URI": "//requests/requests.exceptions/ConnectionError",
      "metadata": {
        "LoC": 2
      }
    },
    "284": {
      "URI": "//requests/requests.exceptions/ProxyError",
      "metadata": {
        "LoC": 2
      }
    },
    "285": {
      "URI": "//requests/requests.exceptions/SSLError",
      "metadata": {
        "LoC": 2
      }
    },
    "286": {
      "URI": "//requests/requests.exceptions/Timeout",
      "metadata": {
        "LoC": 2
      }
    },
    "287": {
      "URI": "//requests/requests.exceptions/ConnectTimeout",
      "metadata": {
        "LoC": 2
      }
    },
    "288": {
      "URI": "//requests/requests.exceptions/ReadTimeout",
      "metadata": {
        "LoC": 2
      }
    },
    "289": {
      "URI": "//requests/requests.exceptions/URLRequired",
      "metadata": {
        "LoC": 2
      }
    },
    "290": {
      "URI": "//requests/requests.exceptions/TooManyRedirects",
      "metadata": {
        "LoC": 2
      }
    },
    "291": {
      "URI": "//requests/requests.exceptions/MissingSchema",
      "metadata": {
        "LoC": 2
      }
    },
    "292": {
      "URI": "//requests/requests.exceptions/InvalidSchema",
      "metadata": {
        "LoC": 2
      }
    },
    "293": {
      "URI": "//requests/requests.exceptions/InvalidURL",
      "metadata": {
        "LoC": 2
      }
    },
    "294": {
      "URI": "//requests/requests.exceptions/InvalidHeader",
      "metadata": {
        "LoC": 2
      }
    },
    "295": {
      "URI": "//requests/requests.exceptions/InvalidProxyURL",
      "metadata": {
        "LoC": 2
      }
    },
    "296": {
      "URI": "//requests/requests.exceptions/ChunkedEncodingError",
      "metadata": {
        "LoC": 2
      }
    },
    "297": {
      "URI": "//requests/requests.exceptions/ContentDecodingError",
      "metadata": {
        "LoC": 2
      }
    },
    "298": {
      "URI": "//requests/requests.exceptions/StreamConsumedError",
      "metadata": {
        "LoC": 2
      }
    },
    "299": {
      "URI": "//requests/requests.exceptions/RetryError",
      "metadata": {
        "LoC": 2
      }
    },
    "300": {
      "URI": "//requests/requests.exceptions/UnrewindableBodyError",
      "metadata": {
        "LoC": 2
      }
    },
    "301": {
      "URI": "//requests/requests.exceptions/RequestsWarning",
      "metadata": {
        "LoC": 2
      }
    },
    "302": {
      "URI": "//requests/requests.exceptions/FileModeWarning",
      "metadata": {
        "LoC": 2
      }
    },
    "303": {
      "URI": "//requests/requests.exceptions/RequestsDependencyWarning",
      "metadata": {
        "LoC": 2
      }
    },
    "304": {
      "URI": "//requests/requests.compat/",
      "metadata": {
        "LoC": 79
      }
    },
    "305": {
      "URI": "//requests/requests.packages/",
      "metadata": {
        "LoC": 28
      }
    },
    "306": {
      "URI": "//requests/requests.__version__/",
      "metadata": {
        "LoC": 14
      }
    },
    "307": {
      "URI": "//requests/requests.api/",
      "metadata": {
        "LoC": 157
      }
    },
    "308": {
      "URI": "//requests/requests.api/request()",
      "metadata": {
        "LoC": 46
      }
    },
    "309": {
      "URI": "//requests/requests.api/get()",
      "metadata": {
        "LoC": 12
      }
    },
    "310": {
      "URI": "//requests/requests.api/options()",
      "metadata": {
        "LoC": 10
      }
    },
    "311": {
      "URI": "//requests/requests.api/head()",
      "metadata": {
        "LoC": 13
      }
    },
    "312": {
      "URI": "//requests/requests.api/post()",
      "metadata": {
        "LoC": 13
      }
    },
    "313": {
      "URI": "//requests/requests.api/put()",
      "metadata": {
        "LoC": 13
      }
    },
    "314": {
      "URI": "//requests/requests.api/patch()",
      "metadata": {
        "LoC": 13
      }
    },
    "315": {
      "URI": "//requests/requests.api/delete()",
      "metadata": {
        "LoC": 10
      }
    },
    "316": {
      "URI": "//requests/requests.sessions/",
      "metadata": {
        "LoC": 833
      }
    },
    "317": {
      "URI": "//requests/requests.sessions/merge_setting()",
      "metadata": {
        "LoC": 28
      }
    },
    "318": {
      "URI": "//requests/requests.sessions/merge_hooks()",
      "metadata": {
        "LoC": 13
      }
    },
    "319": {
      "URI": "//requests/requests.sessions/SessionRedirectMixin",
      "metadata": {
        "LoC": 6
      }
    },
    "320": {
      "URI": "//requests/requests.sessions/SessionRedirectMixin.get_redirect_target()",
      "metadata": {
        "LoC": 19
      }
    },
    "321": {
      "URI": "//requests/requests.sessions/SessionRedirectMixin.should_strip_auth()",
      "metadata": {
        "LoC": 31
      }
    },
    "322": {
      "URI": "//requests/requests.sessions/SessionRedirectMixin.resolve_redirects()",
      "metadata": {
        "LoC": 123
      }
    },
    "323": {
      "URI": "//requests/requests.sessions/SessionRedirectMixin.rebuild_auth()",
      "metadata": {
        "LoC": 19
      }
    },
    "324": {
      "URI": "//requests/requests.sessions/SessionRedirectMixin.rebuild_proxies()",
      "metadata": {
        "LoC": 30
      }
    },
    "325": {
      "URI": "//requests/requests.sessions/SessionRedirectMixin.rebuild_method()",
      "metadata": {
        "LoC": 21
      }
    },
    "326": {
      "URI": "//requests/requests.sessions/Session",
      "metadata": {
        "LoC": 52
      }
    },
    "327": {
      "URI": "//requests/requests.sessions/Session.__init__()",
      "metadata": {
        "LoC": 61
      }
    },
    "328": {
      "URI": "//requests/requests.sessions/Session.__enter__()",
      "metadata": {
        "LoC": 2
      }
    },
    "329": {
      "URI": "//requests/requests.sessions/Session.__exit__()",
      "metadata": {
        "LoC": 2
      }
    },
    "330": {
      "URI": "//requests/requests.sessions/Session.prepare_request()",
      "metadata": {
        "LoC": 42
      }
    },
    "331": {
      "URI": "//requests/requests.sessions/Session.request()",
      "metadata": {
        "LoC": 90
      }
    },
    "332": {
      "URI": "//requests/requests.sessions/Session.get()",
      "metadata": {
        "LoC": 10
      }
    },
    "333": {
      "URI": "//requests/requests.sessions/Session.options()",
      "metadata": {
        "LoC": 10
      }
    },
    "334": {
      "URI": "//requests/requests.sessions/Session.head()",
      "metadata": {
        "LoC": 10
      }
    },
    "335": {
      "URI": "//requests/requests.sessions/Session.post()",
      "metadata": {
        "LoC": 12
      }
    },
    "336": {
      "URI": "//requests/requests.sessions/Session.put()",
      "metadata": {
        "LoC": 11
      }
    },
    "337": {
      "URI": "//requests/requests.sessions/Session.patch()",
      "metadata": {
        "LoC": 11
      }
    },
    "338": {
      "URI": "//requests/requests.sessions/Session.delete()",
      "metadata": {
        "LoC": 9
      }
    },
    "339": {
      "URI": "//requests/requests.sessions/Session.send()",
      "metadata": {
        "LoC": 77
      }
    },
    "340": {
      "URI": "//requests/requests.sessions/Session.merge_environment_settings()",
      "metadata": {
        "LoC": 30
      }
    },
    "341": {
      "URI": "//requests/requests.sessions/Session.get_adapter()",
      "metadata": {
        "LoC": 13
      }
    },
    "342": {
      "URI": "//requests/requests.sessions/Session.close()",
      "metadata": {
        "LoC": 4
      }
    },
    "343": {
      "URI": "//requests/requests.sessions/Session.mount()",
      "metadata": {
        "LoC": 10
      }
    },
    "344": {
      "URI": "//requests/requests.sessions/Session.__getstate__()",
      "metadata": {
        "LoC": 3
      }
    },
    "345": {
      "URI": "//requests/requests.sessions/Session.__setstate__()",
      "metadata": {
        "LoC": 3
      }
    },
    "346": {
      "URI": "//requests/requests.sessions/session()",
      "metadata": {
        "LoC": 13
      }
    },
    "347": {
      "URI": "//requests/requests._internal_utils/",
      "metadata": {
        "LoC": 50
      }
    },
    "348": {
      "URI": "//requests/requests._internal_utils/to_native_string()",
      "metadata": {
        "LoC": 11
      }
    },
    "349": {
      "URI": "//requests/requests._internal_utils/unicode_is_ascii()",
      "metadata": {
        "LoC": 13
      }
    },
    "350": {
      "URI": "//requests/requests.adapters/",
      "metadata": {
        "LoC": 538
      }
    },
    "351": {
      "URI": "//requests/requests.adapters/SOCKSProxyManager()",
      "metadata": {
        "LoC": 2
      }
    },
    "352": {
      "URI": "//requests/requests.adapters/BaseAdapter",
      "metadata": {
        "LoC": 5
      }
    },
    "353": {
      "URI": "//requests/requests.adapters/BaseAdapter.__init__()",
      "metadata": {
        "LoC": 2
      }
    },
    "354": {
      "URI": "//requests/requests.adapters/BaseAdapter.send()",
      "metadata": {
        "LoC": 18
      }
    },
    "355": {
      "URI": "//requests/requests.adapters/BaseAdapter.close()",
      "metadata": {
        "LoC": 3
      }
    },
    "356": {
      "URI": "//requests/requests.adapters/HTTPAdapter",
      "metadata": {
        "LoC": 50
      }
    },
    "357": {
      "URI": "//requests/requests.adapters/HTTPAdapter.__init__()",
      "metadata": {
        "LoC": 21
      }
    },
    "358": {
      "URI": "//requests/requests.adapters/HTTPAdapter.__getstate__()",
      "metadata": {
        "LoC": 2
      }
    },
    "359": {
      "URI": "//requests/requests.adapters/HTTPAdapter.__setstate__()",
      "metadata": {
        "LoC": 11
      }
    },
    "360": {
      "URI": "//requests/requests.adapters/HTTPAdapter.init_poolmanager()",
      "metadata": {
        "LoC": 24
      }
    },
    "361": {
      "URI": "//requests/requests.adapters/HTTPAdapter.proxy_manager_for()",
      "metadata": {
        "LoC": 37
      }
    },
    "362": {
      "URI": "//requests/requests.adapters/HTTPAdapter.cert_verify()",
      "metadata": {
        "LoC": 55
      }
    },
    "363": {
      "URI": "//requests/requests.adapters/HTTPAdapter.build_response()",
      "metadata": {
        "LoC": 36
      }
    },
    "364": {
      "URI": "//requests/requests.adapters/HTTPAdapter.get_connection()",
      "metadata": {
        "LoC": 28
      }
    },
    "365": {
      "URI": "//requests/requests.adapters/HTTPAdapter.close()",
      "metadata": {
        "LoC": 9
      }
    },
    "366": {
      "URI": "//requests/requests.adapters/HTTPAdapter.request_url()",
      "metadata": {
        "LoC": 28
      }
    },
    "367": {
      "URI": "//requests/requests.adapters/HTTPAdapter.add_headers()",
      "metadata": {
        "LoC": 13
      }
    },
    "368": {
      "URI": "//requests/requests.adapters/HTTPAdapter.proxy_headers()",
      "metadata": {
        "LoC": 20
      }
    },
    "369": {
      "URI": "//requests/requests.adapters/HTTPAdapter.send()",
      "metadata": {
        "LoC": 105
      }
    },
    "370": {
      "URI": "//requests/requests.auth/",
      "metadata": {
        "LoC": 315
      }
    },
    "371": {
      "URI": "//requests/requests.auth/_basic_auth_str()",
      "metadata": {
        "LoC": 42
      }
    },
    "372": {
      "URI": "//requests/requests.auth/AuthBase",
      "metadata": {
        "LoC": 3
      }
    },
    "373": {
      "URI": "//requests/requests.auth/AuthBase.__call__()",
      "metadata": {
        "LoC": 2
      }
    },
    "374": {
      "URI": "//requests/requests.auth/HTTPBasicAuth",
      "metadata": {
        "LoC": 8
      }
    },
    "375": {
      "URI": "//requests/requests.auth/HTTPBasicAuth.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "376": {
      "URI": "//requests/requests.auth/HTTPBasicAuth.__eq__()",
      "metadata": {
        "LoC": 5
      }
    },
    "377": {
      "URI": "//requests/requests.auth/HTTPBasicAuth.__ne__()",
      "metadata": {
        "LoC": 2
      }
    },
    "378": {
      "URI": "//requests/requests.auth/HTTPBasicAuth.__call__()",
      "metadata": {
        "LoC": 3
      }
    },
    "379": {
      "URI": "//requests/requests.auth/HTTPProxyAuth",
      "metadata": {
        "LoC": 3
      }
    },
    "380": {
      "URI": "//requests/requests.auth/HTTPProxyAuth.__call__()",
      "metadata": {
        "LoC": 3
      }
    },
    "381": {
      "URI": "//requests/requests.auth/HTTPDigestAuth",
      "metadata": {
        "LoC": 12
      }
    },
    "382": {
      "URI": "//requests/requests.auth/HTTPDigestAuth.__init__()",
      "metadata": {
        "LoC": 5
      }
    },
    "383": {
      "URI": "//requests/requests.auth/HTTPDigestAuth.init_per_thread_state()",
      "metadata": {
        "LoC": 9
      }
    },
    "384": {
      "URI": "//requests/requests.auth/HTTPDigestAuth.build_digest_header()",
      "metadata": {
        "LoC": 92
      }
    },
    "385": {
      "URI": "//requests/requests.auth/HTTPDigestAuth.build_digest_header.md5_utf8()",
      "metadata": {
        "LoC": 4
      }
    },
    "386": {
      "URI": "//requests/requests.auth/HTTPDigestAuth.build_digest_header.sha_utf8()",
      "metadata": {
        "LoC": 4
      }
    },
    "387": {
      "URI": "//requests/requests.auth/HTTPDigestAuth.build_digest_header.sha256_utf8()",
      "metadata": {
        "LoC": 4
      }
    },
    "388": {
      "URI": "//requests/requests.auth/HTTPDigestAuth.build_digest_header.sha512_utf8()",
      "metadata": {
        "LoC": 4
      }
    },
    "389": {
      "URI": "//requests/requests.auth/HTTPDigestAuth.build_digest_header.<lambda1>()",
      "metadata": {
        "LoC": 1
      }
    },
    "390": {
      "URI": "//requests/requests.auth/HTTPDigestAuth.handle_redirect()",
      "metadata": {
        "LoC": 4
      }
    },
    "391": {
      "URI": "//requests/requests.auth/HTTPDigestAuth.handle_401()",
      "metadata": {
        "LoC": 44
      }
    },
    "392": {
      "URI": "//requests/requests.auth/HTTPDigestAuth.__call__()",
      "metadata": {
        "LoC": 19
      }
    },
    "393": {
      "URI": "//requests/requests.auth/HTTPDigestAuth.__eq__()",
      "metadata": {
        "LoC": 5
      }
    },
    "394": {
      "URI": "//requests/requests.auth/HTTPDigestAuth.__ne__()",
      "metadata": {
        "LoC": 2
      }
    },
    "395": {
      "URI": "//requests/requests.cookies/",
      "metadata": {
        "LoC": 561
      }
    },
    "396": {
      "URI": "//requests/requests.cookies/MockRequest",
      "metadata": {
        "LoC": 31
      }
    },
    "397": {
      "URI": "//requests/requests.cookies/MockRequest.__init__()",
      "metadata": {
        "LoC": 4
      }
    },
    "398": {
      "URI": "//requests/requests.cookies/MockRequest.get_type()",
      "metadata": {
        "LoC": 2
      }
    },
    "399": {
      "URI": "//requests/requests.cookies/MockRequest.get_host()",
      "metadata": {
        "LoC": 2
      }
    },
    "400": {
      "URI": "//requests/requests.cookies/MockRequest.get_origin_req_host()",
      "metadata": {
        "LoC": 2
      }
    },
    "401": {
      "URI": "//requests/requests.cookies/MockRequest.get_full_url()",
      "metadata": {
        "LoC": 17
      }
    },
    "402": {
      "URI": "//requests/requests.cookies/MockRequest.is_unverifiable()",
      "metadata": {
        "LoC": 2
      }
    },
    "403": {
      "URI": "//requests/requests.cookies/MockRequest.has_header()",
      "metadata": {
        "LoC": 2
      }
    },
    "404": {
      "URI": "//requests/requests.cookies/MockRequest.get_header()",
      "metadata": {
        "LoC": 2
      }
    },
    "405": {
      "URI": "//requests/requests.cookies/MockRequest.add_header()",
      "metadata": {
        "LoC": 4
      }
    },
    "406": {
      "URI": "//requests/requests.cookies/MockRequest.add_unredirected_header()",
      "metadata": {
        "LoC": 2
      }
    },
    "407": {
      "URI": "//requests/requests.cookies/MockRequest.get_new_headers()",
      "metadata": {
        "LoC": 2
      }
    },
    "408": {
      "URI": "//requests/requests.cookies/MockRequest.unverifiable()",
      "metadata": {
        "LoC": 2
      }
    },
    "409": {
      "URI": "//requests/requests.cookies/MockRequest.origin_req_host()",
      "metadata": {
        "LoC": 2
      }
    },
    "410": {
      "URI": "//requests/requests.cookies/MockRequest.host()",
      "metadata": {
        "LoC": 2
      }
    },
    "411": {
      "URI": "//requests/requests.cookies/MockResponse",
      "metadata": {
        "LoC": 9
      }
    },
    "412": {
      "URI": "//requests/requests.cookies/MockResponse.__init__()",
      "metadata": {
        "LoC": 6
      }
    },
    "413": {
      "URI": "//requests/requests.cookies/MockResponse.info()",
      "metadata": {
        "LoC": 2
      }
    },
    "414": {
      "URI": "//requests/requests.cookies/MockResponse.getheaders()",
      "metadata": {
        "LoC": 2
      }
    },
    "415": {
      "URI": "//requests/requests.cookies/extract_cookies_to_jar()",
      "metadata": {
        "LoC": 14
      }
    },
    "416": {
      "URI": "//requests/requests.cookies/get_cookie_header()",
      "metadata": {
        "LoC": 9
      }
    },
    "417": {
      "URI": "//requests/requests.cookies/remove_cookie_by_name()",
      "metadata": {
        "LoC": 17
      }
    },
    "418": {
      "URI": "//requests/requests.cookies/CookieConflictError",
      "metadata": {
        "LoC": 2
      }
    },
    "419": {
      "URI": "//requests/requests.cookies/RequestsCookieJar",
      "metadata": {
        "LoC": 41
      }
    },
    "420": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.get()",
      "metadata": {
        "LoC": 11
      }
    },
    "421": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.set()",
      "metadata": {
        "LoC": 18
      }
    },
    "422": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.iterkeys()",
      "metadata": {
        "LoC": 8
      }
    },
    "423": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.keys()",
      "metadata": {
        "LoC": 7
      }
    },
    "424": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.itervalues()",
      "metadata": {
        "LoC": 8
      }
    },
    "425": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.values()",
      "metadata": {
        "LoC": 7
      }
    },
    "426": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.iteritems()",
      "metadata": {
        "LoC": 8
      }
    },
    "427": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.items()",
      "metadata": {
        "LoC": 8
      }
    },
    "428": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.list_domains()",
      "metadata": {
        "LoC": 7
      }
    },
    "429": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.list_paths()",
      "metadata": {
        "LoC": 7
      }
    },
    "430": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.multiple_domains()",
      "metadata": {
        "LoC": 12
      }
    },
    "431": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.get_dict()",
      "metadata": {
        "LoC": 14
      }
    },
    "432": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.__contains__()",
      "metadata": {
        "LoC": 5
      }
    },
    "433": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.__getitem__()",
      "metadata": {
        "LoC": 8
      }
    },
    "434": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.__setitem__()",
      "metadata": {
        "LoC": 6
      }
    },
    "435": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.__delitem__()",
      "metadata": {
        "LoC": 5
      }
    },
    "436": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.set_cookie()",
      "metadata": {
        "LoC": 8
      }
    },
    "437": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.update()",
      "metadata": {
        "LoC": 7
      }
    },
    "438": {
      "URI": "//requests/requests.cookies/RequestsCookieJar._find()",
      "metadata": {
        "LoC": 19
      }
    },
    "439": {
      "URI": "//requests/requests.cookies/RequestsCookieJar._find_no_duplicates()",
      "metadata": {
        "LoC": 28
      }
    },
    "440": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.__getstate__()",
      "metadata": {
        "LoC": 6
      }
    },
    "441": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.__setstate__()",
      "metadata": {
        "LoC": 5
      }
    },
    "442": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.copy()",
      "metadata": {
        "LoC": 6
      }
    },
    "443": {
      "URI": "//requests/requests.cookies/RequestsCookieJar.get_policy()",
      "metadata": {
        "LoC": 3
      }
    },
    "444": {
      "URI": "//requests/requests.cookies/_copy_cookie_jar()",
      "metadata": {
        "LoC": 13
      }
    },
    "445": {
      "URI": "//requests/requests.cookies/create_cookie()",
      "metadata": {
        "LoC": 35
      }
    },
    "446": {
      "URI": "//requests/requests.cookies/morsel_to_cookie()",
      "metadata": {
        "LoC": 26
      }
    },
    "447": {
      "URI": "//requests/requests.cookies/cookiejar_from_dict()",
      "metadata": {
        "LoC": 19
      }
    },
    "448": {
      "URI": "//requests/requests.cookies/merge_cookies()",
      "metadata": {
        "LoC": 20
      }
    },
    "449": {
      "URI": "//requests/requests.models/",
      "metadata": {
        "LoC": 1034
      }
    },
    "450": {
      "URI": "//requests/requests.models/RequestEncodingMixin",
      "metadata": {
        "LoC": 6
      }
    },
    "451": {
      "URI": "//requests/requests.models/RequestEncodingMixin.path_url()",
      "metadata": {
        "LoC": 19
      }
    },
    "452": {
      "URI": "//requests/requests.models/RequestEncodingMixin._encode_params()",
      "metadata": {
        "LoC": 28
      }
    },
    "453": {
      "URI": "//requests/requests.models/RequestEncodingMixin._encode_files()",
      "metadata": {
        "LoC": 67
      }
    },
    "454": {
      "URI": "//requests/requests.models/RequestHooksMixin",
      "metadata": {
        "LoC": 2
      }
    },
    "455": {
      "URI": "//requests/requests.models/RequestHooksMixin.register_hook()",
      "metadata": {
        "LoC": 10
      }
    },
    "456": {
      "URI": "//requests/requests.models/RequestHooksMixin.deregister_hook()",
      "metadata": {
        "LoC": 10
      }
    },
    "457": {
      "URI": "//requests/requests.models/Request",
      "metadata": {
        "LoC": 30
      }
    },
    "458": {
      "URI": "//requests/requests.models/Request.__init__()",
      "metadata": {
        "LoC": 34
      }
    },
    "459": {
      "URI": "//requests/requests.models/Request.__repr__()",
      "metadata": {
        "LoC": 2
      }
    },
    "460": {
      "URI": "//requests/requests.models/Request.prepare()",
      "metadata": {
        "LoC": 16
      }
    },
    "461": {
      "URI": "//requests/requests.models/PreparedRequest",
      "metadata": {
        "LoC": 34
      }
    },
    "462": {
      "URI": "//requests/requests.models/PreparedRequest.__init__()",
      "metadata": {
        "LoC": 16
      }
    },
    "463": {
      "URI": "//requests/requests.models/PreparedRequest.prepare()",
      "metadata": {
        "LoC": 27
      }
    },
    "464": {
      "URI": "//requests/requests.models/PreparedRequest.__repr__()",
      "metadata": {
        "LoC": 2
      }
    },
    "465": {
      "URI": "//requests/requests.models/PreparedRequest.copy()",
      "metadata": {
        "LoC": 10
      }
    },
    "466": {
      "URI": "//requests/requests.models/PreparedRequest.prepare_method()",
      "metadata": {
        "LoC": 5
      }
    },
    "467": {
      "URI": "//requests/requests.models/PreparedRequest._get_idna_encoded_host()",
      "metadata": {
        "LoC": 8
      }
    },
    "468": {
      "URI": "//requests/requests.models/PreparedRequest.prepare_url()",
      "metadata": {
        "LoC": 73
      }
    },
    "469": {
      "URI": "//requests/requests.models/PreparedRequest.prepare_headers()",
      "metadata": {
        "LoC": 10
      }
    },
    "470": {
      "URI": "//requests/requests.models/PreparedRequest.prepare_body()",
      "metadata": {
        "LoC": 77
      }
    },
    "471": {
      "URI": "//requests/requests.models/PreparedRequest.prepare_content_length()",
      "metadata": {
        "LoC": 15
      }
    },
    "472": {
      "URI": "//requests/requests.models/PreparedRequest.prepare_auth()",
      "metadata": {
        "LoC": 21
      }
    },
    "473": {
      "URI": "//requests/requests.models/PreparedRequest.prepare_cookies()",
      "metadata": {
        "LoC": 19
      }
    },
    "474": {
      "URI": "//requests/requests.models/PreparedRequest.prepare_hooks()",
      "metadata": {
        "LoC": 8
      }
    },
    "475": {
      "URI": "//requests/requests.models/Response",
      "metadata": {
        "LoC": 48
      }
    },
    "476": {
      "URI": "//requests/requests.models/Response.__init__()",
      "metadata": {
        "LoC": 46
      }
    },
    "477": {
      "URI": "//requests/requests.models/Response.__enter__()",
      "metadata": {
        "LoC": 2
      }
    },
    "478": {
      "URI": "//requests/requests.models/Response.__exit__()",
      "metadata": {
        "LoC": 2
      }
    },
    "479": {
      "URI": "//requests/requests.models/Response.__getstate__()",
      "metadata": {
        "LoC": 7
      }
    },
    "480": {
      "URI": "//requests/requests.models/Response.__setstate__()",
      "metadata": {
        "LoC": 7
      }
    },
    "481": {
      "URI": "//requests/requests.models/Response.__repr__()",
      "metadata": {
        "LoC": 2
      }
    },
    "482": {
      "URI": "//requests/requests.models/Response.__bool__()",
      "metadata": {
        "LoC": 9
      }
    },
    "483": {
      "URI": "//requests/requests.models/Response.__nonzero__()",
      "metadata": {
        "LoC": 9
      }
    },
    "484": {
      "URI": "//requests/requests.models/Response.__iter__()",
      "metadata": {
        "LoC": 3
      }
    },
    "485": {
      "URI": "//requests/requests.models/Response.ok()",
      "metadata": {
        "LoC": 13
      }
    },
    "486": {
      "URI": "//requests/requests.models/Response.is_redirect()",
      "metadata": {
        "LoC": 5
      }
    },
    "487": {
      "URI": "//requests/requests.models/Response.is_permanent_redirect()",
      "metadata": {
        "LoC": 5
      }
    },
    "488": {
      "URI": "//requests/requests.models/Response.next()",
      "metadata": {
        "LoC": 3
      }
    },
    "489": {
      "URI": "//requests/requests.models/Response.apparent_encoding()",
      "metadata": {
        "LoC": 3
      }
    },
    "490": {
      "URI": "//requests/requests.models/Response.iter_content()",
      "metadata": {
        "LoC": 35
      }
    },
    "491": {
      "URI": "//requests/requests.models/Response.iter_content.generate()",
      "metadata": {
        "LoC": 22
      }
    },
    "492": {
      "URI": "//requests/requests.models/Response.iter_lines()",
      "metadata": {
        "LoC": 33
      }
    },
    "493": {
      "URI": "//requests/requests.models/Response.content()",
      "metadata": {
        "LoC": 17
      }
    },
    "494": {
      "URI": "//requests/requests.models/Response.text()",
      "metadata": {
        "LoC": 36
      }
    },
    "495": {
      "URI": "//requests/requests.models/Response.json()",
      "metadata": {
        "LoC": 32
      }
    },
    "496": {
      "URI": "//requests/requests.models/Response.links()",
      "metadata": {
        "LoC": 15
      }
    },
    "497": {
      "URI": "//requests/requests.models/Response.raise_for_status()",
      "metadata": {
        "LoC": 28
      }
    },
    "498": {
      "URI": "//requests/requests.models/Response.close()",
      "metadata": {
        "LoC": 12
      }
    },
    "499": {
      "URI": "//requests/requests.hooks/",
      "metadata": {
        "LoC": 33
      }
    },
    "500": {
      "URI": "//requests/requests.hooks/default_hooks()",
      "metadata": {
        "LoC": 2
      }
    },
    "501": {
      "URI": "//requests/requests.hooks/dispatch_hook()",
      "metadata": {
        "LoC": 12
      }
    },
    "502": {
      "URI": "//requests/requests.status_codes/",
      "metadata": {
        "LoC": 128
      }
    },
    "503": {
      "URI": "//requests/requests.status_codes/_init()",
      "metadata": {
        "LoC": 13
      }
    },
    "504": {
      "URI": "//requests/requests.status_codes/_init.doc()",
      "metadata": {
        "LoC": 3
      }
    },
    "505": {
      "URI": "//requests/requests.structures/",
      "metadata": {
        "LoC": 99
      }
    },
    "506": {
      "URI": "//requests/requests.structures/CaseInsensitiveDict",
      "metadata": {
        "LoC": 37
      }
    },
    "507": {
      "URI": "//requests/requests.structures/CaseInsensitiveDict.__init__()",
      "metadata": {
        "LoC": 5
      }
    },
    "508": {
      "URI": "//requests/requests.structures/CaseInsensitiveDict.__setitem__()",
      "metadata": {
        "LoC": 4
      }
    },
    "509": {
      "URI": "//requests/requests.structures/CaseInsensitiveDict.__getitem__()",
      "metadata": {
        "LoC": 2
      }
    },
    "510": {
      "URI": "//requests/requests.structures/CaseInsensitiveDict.__delitem__()",
      "metadata": {
        "LoC": 2
      }
    },
    "511": {
      "URI": "//requests/requests.structures/CaseInsensitiveDict.__iter__()",
      "metadata": {
        "LoC": 2
      }
    },
    "512": {
      "URI": "//requests/requests.structures/CaseInsensitiveDict.__len__()",
      "metadata": {
        "LoC": 2
      }
    },
    "513": {
      "URI": "//requests/requests.structures/CaseInsensitiveDict.lower_items()",
      "metadata": {
        "LoC": 3
      }
    },
    "514": {
      "URI": "//requests/requests.structures/CaseInsensitiveDict.__eq__()",
      "metadata": {
        "LoC": 7
      }
    },
    "515": {
      "URI": "//requests/requests.structures/CaseInsensitiveDict.copy()",
      "metadata": {
        "LoC": 2
      }
    },
    "516": {
      "URI": "//requests/requests.structures/CaseInsensitiveDict.__repr__()",
      "metadata": {
        "LoC": 2
      }
    },
    "517": {
      "URI": "//requests/requests.structures/LookupDict",
      "metadata": {
        "LoC": 6
      }
    },
    "518": {
      "URI": "//requests/requests.structures/LookupDict.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "519": {
      "URI": "//requests/requests.structures/LookupDict.__repr__()",
      "metadata": {
        "LoC": 2
      }
    },
    "520": {
      "URI": "//requests/requests.structures/LookupDict.__getitem__()",
      "metadata": {
        "LoC": 4
      }
    },
    "521": {
      "URI": "//requests/requests.structures/LookupDict.get()",
      "metadata": {
        "LoC": 2
      }
    },
    "522": {
      "URI": "//requests/requests.help/",
      "metadata": {
        "LoC": 134
      }
    },
    "523": {
      "URI": "//requests/requests.help/_implementation()",
      "metadata": {
        "LoC": 33
      }
    },
    "524": {
      "URI": "//requests/requests.help/info()",
      "metadata": {
        "LoC": 55
      }
    },
    "525": {
      "URI": "//requests/requests.help/main()",
      "metadata": {
        "LoC": 3
      }
    },
    "526": {
      "URI": "//urllib3/urllib3.util.request/make_headers()",
      "metadata": {
        "LoC": 77
      }
    },
    "527": {
      "URI": "//urllib3/urllib3.util.url/parse_url()",
      "metadata": {
        "LoC": 102
      }
    },
    "528": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/inject_into_urllib3()",
      "metadata": {
        "LoC": 9
      }
    },
    "529": {
      "URI": "//urllib3/urllib3.util.retry/Retry.__init__()",
      "metadata": {
        "LoC": 44
      }
    },
    "530": {
      "URI": "//urllib3/urllib3.util.retry/Retry.from_int()",
      "metadata": {
        "LoC": 17
      }
    },
    "531": {
      "URI": "//urllib3/urllib3.poolmanager/PoolManager.__init__()",
      "metadata": {
        "LoC": 16
      }
    },
    "532": {
      "URI": "//urllib3/urllib3.contrib.socks/SOCKSProxyManager.__init__()",
      "metadata": {
        "LoC": 45
      }
    },
    "533": {
      "URI": "//urllib3/urllib3.poolmanager/proxy_from_url()",
      "metadata": {
        "LoC": 2
      }
    },
    "534": {
      "URI": "//urllib3/urllib3.connectionpool/connection_from_url()",
      "metadata": {
        "LoC": 27
      }
    },
    "535": {
      "URI": "//urllib3/urllib3.poolmanager/PoolManager.connection_from_url()",
      "metadata": {
        "LoC": 16
      }
    },
    "536": {
      "URI": "//urllib3/urllib3.poolmanager/PoolManager.clear()",
      "metadata": {
        "LoC": 8
      }
    },
    "537": {
      "URI": "//urllib3/urllib3.util.timeout/Timeout.__init__()",
      "metadata": {
        "LoC": 10
      }
    },
    "538": {
      "URI": "//urllib3/urllib3.fields/RequestField.__init__()",
      "metadata": {
        "LoC": 27
      }
    },
    "539": {
      "URI": "//urllib3/urllib3.fields/RequestField.make_multipart()",
      "metadata": {
        "LoC": 32
      }
    },
    "540": {
      "URI": "//urllib3/urllib3.filepost/encode_multipart_formdata()",
      "metadata": {
        "LoC": 39
      }
    },
    "541": {
      "URI": "//idna/idna.core/encode()",
      "metadata": {
        "LoC": 31
      }
    },
    "542": {
      "URI": "//idna/idna.core/decode()",
      "metadata": {
        "LoC": 28
      }
    },
    "543": {
      "URI": "//certifi/certifi.core/where()",
      "metadata": {
        "LoC": 23
      }
    },
    "544": {
      "URI": "//nose/nose.suite/",
      "metadata": {
        "LoC": 610
      }
    },
    "545": {
      "URI": "//nose/nose.suite/StringException",
      "metadata": {
        "LoC": 2
      }
    },
    "546": {
      "URI": "//nose/nose.suite/_strclass()",
      "metadata": {
        "LoC": 2
      }
    },
    "547": {
      "URI": "//nose/nose.suite/MixedContextError",
      "metadata": {
        "LoC": 5
      }
    },
    "548": {
      "URI": "//nose/nose.suite/LazySuite",
      "metadata": {
        "LoC": 17
      }
    },
    "549": {
      "URI": "//nose/nose.suite/LazySuite.__init__()",
      "metadata": {
        "LoC": 5
      }
    },
    "550": {
      "URI": "//nose/nose.suite/LazySuite.__iter__()",
      "metadata": {
        "LoC": 2
      }
    },
    "551": {
      "URI": "//nose/nose.suite/LazySuite.__repr__()",
      "metadata": {
        "LoC": 3
      }
    },
    "552": {
      "URI": "//nose/nose.suite/LazySuite.__hash__()",
      "metadata": {
        "LoC": 2
      }
    },
    "553": {
      "URI": "//nose/nose.suite/LazySuite.addTest()",
      "metadata": {
        "LoC": 2
      }
    },
    "554": {
      "URI": "//nose/nose.suite/LazySuite.run()",
      "metadata": {
        "LoC": 6
      }
    },
    "555": {
      "URI": "//nose/nose.suite/LazySuite.__bool__()",
      "metadata": {
        "LoC": 14
      }
    },
    "556": {
      "URI": "//nose/nose.suite/LazySuite._get_tests()",
      "metadata": {
        "LoC": 8
      }
    },
    "557": {
      "URI": "//nose/nose.suite/LazySuite._set_tests()",
      "metadata": {
        "LoC": 13
      }
    },
    "558": {
      "URI": "//nose/nose.suite/ContextSuite",
      "metadata": {
        "LoC": 46
      }
    },
    "559": {
      "URI": "//nose/nose.suite/ContextSuite.__init__()",
      "metadata": {
        "LoC": 13
      }
    },
    "560": {
      "URI": "//nose/nose.suite/ContextSuite.__repr__()",
      "metadata": {
        "LoC": 4
      }
    },
    "561": {
      "URI": "//nose/nose.suite/ContextSuite.id()",
      "metadata": {
        "LoC": 5
      }
    },
    "562": {
      "URI": "//nose/nose.suite/ContextSuite.__hash__()",
      "metadata": {
        "LoC": 2
      }
    },
    "563": {
      "URI": "//nose/nose.suite/ContextSuite.__call__()",
      "metadata": {
        "LoC": 2
      }
    },
    "564": {
      "URI": "//nose/nose.suite/ContextSuite.exc_info()",
      "metadata": {
        "LoC": 4
      }
    },
    "565": {
      "URI": "//nose/nose.suite/ContextSuite._exc_info()",
      "metadata": {
        "LoC": 12
      }
    },
    "566": {
      "URI": "//nose/nose.suite/ContextSuite.run()",
      "metadata": {
        "LoC": 37
      }
    },
    "567": {
      "URI": "//nose/nose.suite/ContextSuite.hasFixtures()",
      "metadata": {
        "LoC": 15
      }
    },
    "568": {
      "URI": "//nose/nose.suite/ContextSuite.implementsAnyFixture()",
      "metadata": {
        "LoC": 16
      }
    },
    "569": {
      "URI": "//nose/nose.suite/ContextSuite.setUp()",
      "metadata": {
        "LoC": 31
      }
    },
    "570": {
      "URI": "//nose/nose.suite/ContextSuite.setupContext()",
      "metadata": {
        "LoC": 16
      }
    },
    "571": {
      "URI": "//nose/nose.suite/ContextSuite.shortDescription()",
      "metadata": {
        "LoC": 4
      }
    },
    "572": {
      "URI": "//nose/nose.suite/ContextSuite.tearDown()",
      "metadata": {
        "LoC": 32
      }
    },
    "573": {
      "URI": "//nose/nose.suite/ContextSuite.teardownContext()",
      "metadata": {
        "LoC": 14
      }
    },
    "574": {
      "URI": "//nose/nose.suite/ContextSuite._get_wrapped_tests()",
      "metadata": {
        "LoC": 8
      }
    },
    "575": {
      "URI": "//nose/nose.suite/ContextSuiteFactory",
      "metadata": {
        "LoC": 14
      }
    },
    "576": {
      "URI": "//nose/nose.suite/ContextSuiteFactory.__init__()",
      "metadata": {
        "LoC": 15
      }
    },
    "577": {
      "URI": "//nose/nose.suite/ContextSuiteFactory.__call__()",
      "metadata": {
        "LoC": 19
      }
    },
    "578": {
      "URI": "//nose/nose.suite/ContextSuiteFactory.ancestry()",
      "metadata": {
        "LoC": 26
      }
    },
    "579": {
      "URI": "//nose/nose.suite/ContextSuiteFactory.findContext()",
      "metadata": {
        "LoC": 16
      }
    },
    "580": {
      "URI": "//nose/nose.suite/ContextSuiteFactory.makeSuite()",
      "metadata": {
        "LoC": 14
      }
    },
    "581": {
      "URI": "//nose/nose.suite/ContextSuiteFactory.mixedSuites()",
      "metadata": {
        "LoC": 49
      }
    },
    "582": {
      "URI": "//nose/nose.suite/ContextSuiteFactory.wrapTests()",
      "metadata": {
        "LoC": 17
      }
    },
    "583": {
      "URI": "//nose/nose.suite/ContextList",
      "metadata": {
        "LoC": 6
      }
    },
    "584": {
      "URI": "//nose/nose.suite/ContextList.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "585": {
      "URI": "//nose/nose.suite/ContextList.__iter__()",
      "metadata": {
        "LoC": 2
      }
    },
    "586": {
      "URI": "//nose/nose.suite/FinalizingSuiteWrapper",
      "metadata": {
        "LoC": 10
      }
    },
    "587": {
      "URI": "//nose/nose.suite/FinalizingSuiteWrapper.__init__()",
      "metadata": {
        "LoC": 4
      }
    },
    "588": {
      "URI": "//nose/nose.suite/FinalizingSuiteWrapper.__call__()",
      "metadata": {
        "LoC": 2
      }
    },
    "589": {
      "URI": "//nose/nose.suite/FinalizingSuiteWrapper.__iter__()",
      "metadata": {
        "LoC": 2
      }
    },
    "590": {
      "URI": "//nose/nose.suite/FinalizingSuiteWrapper.run()",
      "metadata": {
        "LoC": 5
      }
    },
    "591": {
      "URI": "//nose/nose.suite/TestDir",
      "metadata": {
        "LoC": 1
      }
    },
    "592": {
      "URI": "//nose/nose.suite/TestDir.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "593": {
      "URI": "//nose/nose.suite/TestModule",
      "metadata": {
        "LoC": 1
      }
    },
    "594": {
      "URI": "//nose/nose.suite/TestModule.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "595": {
      "URI": "//nose/nose.case/",
      "metadata": {
        "LoC": 398
      }
    },
    "596": {
      "URI": "//nose/nose.case/Test",
      "metadata": {
        "LoC": 22
      }
    },
    "597": {
      "URI": "//nose/nose.case/Test.__init__()",
      "metadata": {
        "LoC": 16
      }
    },
    "598": {
      "URI": "//nose/nose.case/Test.__call__()",
      "metadata": {
        "LoC": 2
      }
    },
    "599": {
      "URI": "//nose/nose.case/Test.__str__()",
      "metadata": {
        "LoC": 5
      }
    },
    "600": {
      "URI": "//nose/nose.case/Test.__repr__()",
      "metadata": {
        "LoC": 2
      }
    },
    "601": {
      "URI": "//nose/nose.case/Test.afterTest()",
      "metadata": {
        "LoC": 9
      }
    },
    "602": {
      "URI": "//nose/nose.case/Test.beforeTest()",
      "metadata": {
        "LoC": 9
      }
    },
    "603": {
      "URI": "//nose/nose.case/Test.exc_info()",
      "metadata": {
        "LoC": 5
      }
    },
    "604": {
      "URI": "//nose/nose.case/Test.id()",
      "metadata": {
        "LoC": 4
      }
    },
    "605": {
      "URI": "//nose/nose.case/Test.address()",
      "metadata": {
        "LoC": 10
      }
    },
    "606": {
      "URI": "//nose/nose.case/Test._context()",
      "metadata": {
        "LoC": 14
      }
    },
    "607": {
      "URI": "//nose/nose.case/Test.run()",
      "metadata": {
        "LoC": 26
      }
    },
    "608": {
      "URI": "//nose/nose.case/Test.runTest()",
      "metadata": {
        "LoC": 10
      }
    },
    "609": {
      "URI": "//nose/nose.case/Test.shortDescription()",
      "metadata": {
        "LoC": 33
      }
    },
    "610": {
      "URI": "//nose/nose.case/TestBase",
      "metadata": {
        "LoC": 7
      }
    },
    "611": {
      "URI": "//nose/nose.case/TestBase.id()",
      "metadata": {
        "LoC": 2
      }
    },
    "612": {
      "URI": "//nose/nose.case/TestBase.runTest()",
      "metadata": {
        "LoC": 2
      }
    },
    "613": {
      "URI": "//nose/nose.case/TestBase.shortDescription()",
      "metadata": {
        "LoC": 8
      }
    },
    "614": {
      "URI": "//nose/nose.case/FunctionTestCase",
      "metadata": {
        "LoC": 17
      }
    },
    "615": {
      "URI": "//nose/nose.case/FunctionTestCase.__init__()",
      "metadata": {
        "LoC": 27
      }
    },
    "616": {
      "URI": "//nose/nose.case/FunctionTestCase.address()",
      "metadata": {
        "LoC": 9
      }
    },
    "617": {
      "URI": "//nose/nose.case/FunctionTestCase._context()",
      "metadata": {
        "LoC": 2
      }
    },
    "618": {
      "URI": "//nose/nose.case/FunctionTestCase.setUp()",
      "metadata": {
        "LoC": 8
      }
    },
    "619": {
      "URI": "//nose/nose.case/FunctionTestCase.tearDown()",
      "metadata": {
        "LoC": 8
      }
    },
    "620": {
      "URI": "//nose/nose.case/FunctionTestCase.__str__()",
      "metadata": {
        "LoC": 13
      }
    },
    "621": {
      "URI": "//nose/nose.case/FunctionTestCase._descriptors()",
      "metadata": {
        "LoC": 12
      }
    },
    "622": {
      "URI": "//nose/nose.case/MethodTestCase",
      "metadata": {
        "LoC": 17
      }
    },
    "623": {
      "URI": "//nose/nose.case/MethodTestCase.__init__()",
      "metadata": {
        "LoC": 35
      }
    },
    "624": {
      "URI": "//nose/nose.case/MethodTestCase.__str__()",
      "metadata": {
        "LoC": 12
      }
    },
    "625": {
      "URI": "//nose/nose.case/MethodTestCase.address()",
      "metadata": {
        "LoC": 9
      }
    },
    "626": {
      "URI": "//nose/nose.case/MethodTestCase._context()",
      "metadata": {
        "LoC": 2
      }
    },
    "627": {
      "URI": "//nose/nose.case/MethodTestCase.setUp()",
      "metadata": {
        "LoC": 2
      }
    },
    "628": {
      "URI": "//nose/nose.case/MethodTestCase.tearDown()",
      "metadata": {
        "LoC": 2
      }
    },
    "629": {
      "URI": "//nose/nose.case/MethodTestCase._descriptors()",
      "metadata": {
        "LoC": 12
      }
    },
    "630": {
      "URI": "//nose/nose.config/",
      "metadata": {
        "LoC": 661
      }
    },
    "631": {
      "URI": "//nose/nose.config/NoSuchOptionError",
      "metadata": {
        "LoC": 1
      }
    },
    "632": {
      "URI": "//nose/nose.config/NoSuchOptionError.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "633": {
      "URI": "//nose/nose.config/ConfigError",
      "metadata": {
        "LoC": 2
      }
    },
    "634": {
      "URI": "//nose/nose.config/ConfiguredDefaultsOptionParser",
      "metadata": {
        "LoC": 11
      }
    },
    "635": {
      "URI": "//nose/nose.config/ConfiguredDefaultsOptionParser.__init__()",
      "metadata": {
        "LoC": 8
      }
    },
    "636": {
      "URI": "//nose/nose.config/ConfiguredDefaultsOptionParser.__init__.<lambda1>()",
      "metadata": {
        "LoC": 1
      }
    },
    "637": {
      "URI": "//nose/nose.config/ConfiguredDefaultsOptionParser._configTuples()",
      "metadata": {
        "LoC": 6
      }
    },
    "638": {
      "URI": "//nose/nose.config/ConfiguredDefaultsOptionParser._readFromFilenames()",
      "metadata": {
        "LoC": 11
      }
    },
    "639": {
      "URI": "//nose/nose.config/ConfiguredDefaultsOptionParser._readFromFileObject()",
      "metadata": {
        "LoC": 12
      }
    },
    "640": {
      "URI": "//nose/nose.config/ConfiguredDefaultsOptionParser._readConfiguration()",
      "metadata": {
        "LoC": 14
      }
    },
    "641": {
      "URI": "//nose/nose.config/ConfiguredDefaultsOptionParser._processConfigValue()",
      "metadata": {
        "LoC": 7
      }
    },
    "642": {
      "URI": "//nose/nose.config/ConfiguredDefaultsOptionParser._applyConfigurationToValues()",
      "metadata": {
        "LoC": 16
      }
    },
    "643": {
      "URI": "//nose/nose.config/ConfiguredDefaultsOptionParser.parseArgsAndConfigFiles()",
      "metadata": {
        "LoC": 12
      }
    },
    "644": {
      "URI": "//nose/nose.config/Config",
      "metadata": {
        "LoC": 54
      }
    },
    "645": {
      "URI": "//nose/nose.config/Config.__init__()",
      "metadata": {
        "LoC": 42
      }
    },
    "646": {
      "URI": "//nose/nose.config/Config.__getstate__()",
      "metadata": {
        "LoC": 10
      }
    },
    "647": {
      "URI": "//nose/nose.config/Config.__setstate__()",
      "metadata": {
        "LoC": 11
      }
    },
    "648": {
      "URI": "//nose/nose.config/Config.__repr__()",
      "metadata": {
        "LoC": 9
      }
    },
    "649": {
      "URI": "//nose/nose.config/Config._parseArgs()",
      "metadata": {
        "LoC": 4
      }
    },
    "650": {
      "URI": "//nose/nose.config/Config._parseArgs.warn_sometimes()",
      "metadata": {
        "LoC": 9
      }
    },
    "651": {
      "URI": "//nose/nose.config/Config.configure()",
      "metadata": {
        "LoC": 77
      }
    },
    "652": {
      "URI": "//nose/nose.config/Config.configureLogging()",
      "metadata": {
        "LoC": 58
      }
    },
    "653": {
      "URI": "//nose/nose.config/Config.configureWhere()",
      "metadata": {
        "LoC": 30
      }
    },
    "654": {
      "URI": "//nose/nose.config/Config.default()",
      "metadata": {
        "LoC": 4
      }
    },
    "655": {
      "URI": "//nose/nose.config/Config.getParser()",
      "metadata": {
        "LoC": 151
      }
    },
    "656": {
      "URI": "//nose/nose.config/Config.help()",
      "metadata": {
        "LoC": 4
      }
    },
    "657": {
      "URI": "//nose/nose.config/Config.pluginOpts()",
      "metadata": {
        "LoC": 2
      }
    },
    "658": {
      "URI": "//nose/nose.config/Config.reset()",
      "metadata": {
        "LoC": 2
      }
    },
    "659": {
      "URI": "//nose/nose.config/Config.todict()",
      "metadata": {
        "LoC": 2
      }
    },
    "660": {
      "URI": "//nose/nose.config/Config.update()",
      "metadata": {
        "LoC": 2
      }
    },
    "661": {
      "URI": "//nose/nose.config/NoOptions",
      "metadata": {
        "LoC": 6
      }
    },
    "662": {
      "URI": "//nose/nose.config/NoOptions.__getstate__()",
      "metadata": {
        "LoC": 2
      }
    },
    "663": {
      "URI": "//nose/nose.config/NoOptions.__setstate__()",
      "metadata": {
        "LoC": 2
      }
    },
    "664": {
      "URI": "//nose/nose.config/NoOptions.__getnewargs__()",
      "metadata": {
        "LoC": 2
      }
    },
    "665": {
      "URI": "//nose/nose.config/NoOptions.__bool__()",
      "metadata": {
        "LoC": 2
      }
    },
    "666": {
      "URI": "//nose/nose.config/user_config_files()",
      "metadata": {
        "LoC": 5
      }
    },
    "667": {
      "URI": "//nose/nose.config/all_config_files()",
      "metadata": {
        "LoC": 8
      }
    },
    "668": {
      "URI": "//nose/nose.config/flag()",
      "metadata": {
        "LoC": 10
      }
    },
    "669": {
      "URI": "//nose/nose.config/_bool()",
      "metadata": {
        "LoC": 2
      }
    },
    "670": {
      "URI": "//nose/nose.util/",
      "metadata": {
        "LoC": 668
      }
    },
    "671": {
      "URI": "//nose/nose.util/ls_tree()",
      "metadata": {
        "LoC": 8
      }
    },
    "672": {
      "URI": "//nose/nose.util/_ls_tree_lines()",
      "metadata": {
        "LoC": 28
      }
    },
    "673": {
      "URI": "//nose/nose.util/_ls_tree_lines.ls_entry()",
      "metadata": {
        "LoC": 12
      }
    },
    "674": {
      "URI": "//nose/nose.util/absdir()",
      "metadata": {
        "LoC": 10
      }
    },
    "675": {
      "URI": "//nose/nose.util/absfile()",
      "metadata": {
        "LoC": 31
      }
    },
    "676": {
      "URI": "//nose/nose.util/anyp()",
      "metadata": {
        "LoC": 5
      }
    },
    "677": {
      "URI": "//nose/nose.util/file_like()",
      "metadata": {
        "LoC": 9
      }
    },
    "678": {
      "URI": "//nose/nose.util/func_lineno()",
      "metadata": {
        "LoC": 11
      }
    },
    "679": {
      "URI": "//nose/nose.util/isclass()",
      "metadata": {
        "LoC": 6
      }
    },
    "680": {
      "URI": "//nose/nose.util/ispackage()",
      "metadata": {
        "LoC": 25
      }
    },
    "681": {
      "URI": "//nose/nose.util/isproperty()",
      "metadata": {
        "LoC": 17
      }
    },
    "682": {
      "URI": "//nose/nose.util/getfilename()",
      "metadata": {
        "LoC": 14
      }
    },
    "683": {
      "URI": "//nose/nose.util/getpackage()",
      "metadata": {
        "LoC": 47
      }
    },
    "684": {
      "URI": "//nose/nose.util/ln()",
      "metadata": {
        "LoC": 13
      }
    },
    "685": {
      "URI": "//nose/nose.util/resolve_name()",
      "metadata": {
        "LoC": 27
      }
    },
    "686": {
      "URI": "//nose/nose.util/split_test_name()",
      "metadata": {
        "LoC": 60
      }
    },
    "687": {
      "URI": "//nose/nose.util/test_address()",
      "metadata": {
        "LoC": 49
      }
    },
    "688": {
      "URI": "//nose/nose.util/try_run()",
      "metadata": {
        "LoC": 31
      }
    },
    "689": {
      "URI": "//nose/nose.util/src()",
      "metadata": {
        "LoC": 13
      }
    },
    "690": {
      "URI": "//nose/nose.util/regex_last_key()",
      "metadata": {
        "LoC": 14
      }
    },
    "691": {
      "URI": "//nose/nose.util/regex_last_key.k()",
      "metadata": {
        "LoC": 4
      }
    },
    "692": {
      "URI": "//nose/nose.util/tolist()",
      "metadata": {
        "LoC": 25
      }
    },
    "693": {
      "URI": "//nose/nose.util/odict",
      "metadata": {
        "LoC": 15
      }
    },
    "694": {
      "URI": "//nose/nose.util/odict.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "695": {
      "URI": "//nose/nose.util/odict.__delitem__()",
      "metadata": {
        "LoC": 3
      }
    },
    "696": {
      "URI": "//nose/nose.util/odict.__setitem__()",
      "metadata": {
        "LoC": 4
      }
    },
    "697": {
      "URI": "//nose/nose.util/odict.__str__()",
      "metadata": {
        "LoC": 2
      }
    },
    "698": {
      "URI": "//nose/nose.util/odict.clear()",
      "metadata": {
        "LoC": 3
      }
    },
    "699": {
      "URI": "//nose/nose.util/odict.copy()",
      "metadata": {
        "LoC": 4
      }
    },
    "700": {
      "URI": "//nose/nose.util/odict.items()",
      "metadata": {
        "LoC": 2
      }
    },
    "701": {
      "URI": "//nose/nose.util/odict.keys()",
      "metadata": {
        "LoC": 2
      }
    },
    "702": {
      "URI": "//nose/nose.util/odict.setdefault()",
      "metadata": {
        "LoC": 5
      }
    },
    "703": {
      "URI": "//nose/nose.util/odict.update()",
      "metadata": {
        "LoC": 5
      }
    },
    "704": {
      "URI": "//nose/nose.util/odict.values()",
      "metadata": {
        "LoC": 2
      }
    },
    "705": {
      "URI": "//nose/nose.util/transplant_func()",
      "metadata": {
        "LoC": 34
      }
    },
    "706": {
      "URI": "//nose/nose.util/transplant_func.newfunc()",
      "metadata": {
        "LoC": 3
      }
    },
    "707": {
      "URI": "//nose/nose.util/transplant_class()",
      "metadata": {
        "LoC": 18
      }
    },
    "708": {
      "URI": "//nose/nose.util/transplant_class.C",
      "metadata": {
        "LoC": 2
      }
    },
    "709": {
      "URI": "//nose/nose.util/safe_str()",
      "metadata": {
        "LoC": 8
      }
    },
    "710": {
      "URI": "//nose/nose.util/is_executable()",
      "metadata": {
        "LoC": 5
      }
    },
    "711": {
      "URI": "//nose/nose.pyversion/",
      "metadata": {
        "LoC": 215
      }
    },
    "712": {
      "URI": "//nose/nose.pyversion/force_unicode()",
      "metadata": {
        "LoC": 7
      }
    },
    "713": {
      "URI": "//nose/nose.pyversion/make_instancemethod()",
      "metadata": {
        "LoC": 3
      }
    },
    "714": {
      "URI": "//nose/nose.pyversion/cmp_to_key()",
      "metadata": {
        "LoC": 3
      }
    },
    "715": {
      "URI": "//nose/nose.pyversion/cmp_to_key.Key",
      "metadata": {
        "LoC": 1
      }
    },
    "716": {
      "URI": "//nose/nose.pyversion/cmp_to_key.Key.__init__()",
      "metadata": {
        "LoC": 2
      }
    },
    "717": {
      "URI": "//nose/nose.pyversion/cmp_to_key.Key.__lt__()",
      "metadata": {
        "LoC": 2
      }
    },
    "718": {
      "URI": "//nose/nose.pyversion/cmp_to_key.Key.__gt__()",
      "metadata": {
        "LoC": 2
      }
    },
    "719": {
      "URI": "//nose/nose.pyversion/cmp_to_key.Key.__eq__()",
      "metadata": {
        "LoC": 2
      }
    },
    "720": {
      "URI": "//nose/nose.pyversion/sort_list()",
      "metadata": {
        "LoC": 5
      }
    },
    "721": {
      "URI": "//nose/nose.pyversion/UnboundMethod",
      "metadata": {
        "LoC": 5
      }
    },
    "722": {
      "URI": "//nose/nose.pyversion/UnboundMethod.__init__()",
      "metadata": {
        "LoC": 9
      }
    },
    "723": {
      "URI": "//nose/nose.pyversion/UnboundMethod.address()",
      "metadata": {
        "LoC": 9
      }
    },
    "724": {
      "URI": "//nose/nose.pyversion/UnboundMethod.__call__()",
      "metadata": {
        "LoC": 2
      }
    },
    "725": {
      "URI": "//nose/nose.pyversion/UnboundMethod.__getattr__()",
      "metadata": {
        "LoC": 2
      }
    },
    "726": {
      "URI": "//nose/nose.pyversion/UnboundMethod.__repr__()",
      "metadata": {
        "LoC": 3
      }
    },
    "727": {
      "URI": "//nose/nose.pyversion/UnboundSelf",
      "metadata": {
        "LoC": 4
      }
    },
    "728": {
      "URI": "//nose/nose.pyversion/UnboundSelf.__init__()",
      "metadata": {
        "LoC": 2
      }
    },
    "729": {
      "URI": "//nose/nose.pyversion/UnboundSelf.__getattribute__()",
      "metadata": {
        "LoC": 5
      }
    },
    "730": {
      "URI": "//nose/nose.pyversion/unbound_method()",
      "metadata": {
        "LoC": 6
      }
    },
    "731": {
      "URI": "//nose/nose.pyversion/ismethod()",
      "metadata": {
        "LoC": 2
      }
    },
    "732": {
      "URI": "//nose/nose.pyversion/bytes_()",
      "metadata": {
        "LoC": 4
      }
    },
    "733": {
      "URI": "//nose/nose.pyversion/isgenerator()",
      "metadata": {
        "LoC": 4
      }
    },
    "734": {
      "URI": "//nose/nose.pyversion/is_base_exception()",
      "metadata": {
        "LoC": 2
      }
    },
    "735": {
      "URI": "//nose/nose.pyversion/exc_to_unicode()",
      "metadata": {
        "LoC": 17
      }
    },
    "736": {
      "URI": "//nose/nose.pyversion/format_exception()",
      "metadata": {
        "LoC": 17
      }
    },
    "737": {
      "URI": "//nose/nose.tools/",
      "metadata": {
        "LoC": 15
      }
    },
    "738": {
      "URI": "//nose/nose.tools.nontrivial/",
      "metadata": {
        "LoC": 151
      }
    },
    "739": {
      "URI": "//nose/nose.tools.nontrivial/TimeExpired",
      "metadata": {
        "LoC": 2
      }
    },
    "740": {
      "URI": "//nose/nose.tools.nontrivial/make_decorator()",
      "metadata": {
        "LoC": 7
      }
    },
    "741": {
      "URI": "//nose/nose.tools.nontrivial/make_decorator.decorate()",
      "metadata": {
        "LoC": 16
      }
    },
    "742": {
      "URI": "//nose/nose.tools.nontrivial/raises()",
      "metadata": {
        "LoC": 18
      }
    },
    "743": {
      "URI": "//nose/nose.tools.nontrivial/raises.decorate()",
      "metadata": {
        "LoC": 4
      }
    },
    "744": {
      "URI": "//nose/nose.tools.nontrivial/raises.decorate.newfunc()",
      "metadata": {
        "LoC": 10
      }
    },
    "745": {
      "URI": "//nose/nose.tools.nontrivial/set_trace()",
      "metadata": {
        "LoC": 10
      }
    },
    "746": {
      "URI": "//nose/nose.tools.nontrivial/timed()",
      "metadata": {
        "LoC": 10
      }
    },
    "747": {
      "URI": "//nose/nose.tools.nontrivial/timed.decorate()",
      "metadata": {
        "LoC": 3
      }
    },
    "748": {
      "URI": "//nose/nose.tools.nontrivial/timed.decorate.newfunc()",
      "metadata": {
        "LoC": 7
      }
    },
    "749": {
      "URI": "//nose/nose.tools.nontrivial/with_setup()",
      "metadata": {
        "LoC": 11
      }
    },
    "750": {
      "URI": "//nose/nose.tools.nontrivial/with_setup.decorate()",
      "metadata": {
        "LoC": 14
      }
    },
    "751": {
      "URI": "//nose/nose.tools.nontrivial/with_setup.decorate._s()",
      "metadata": {
        "LoC": 3
      }
    },
    "752": {
      "URI": "//nose/nose.tools.nontrivial/with_setup.decorate._t()",
      "metadata": {
        "LoC": 3
      }
    },
    "753": {
      "URI": "//nose/nose.tools.nontrivial/istest()",
      "metadata": {
        "LoC": 5
      }
    },
    "754": {
      "URI": "//nose/nose.tools.nontrivial/nottest()",
      "metadata": {
        "LoC": 5
      }
    },
    "755": {
      "URI": "//nose/nose.tools.trivial/",
      "metadata": {
        "LoC": 54
      }
    },
    "756": {
      "URI": "//nose/nose.tools.trivial/ok_()",
      "metadata": {
        "LoC": 5
      }
    },
    "757": {
      "URI": "//nose/nose.tools.trivial/eq_()",
      "metadata": {
        "LoC": 5
      }
    },
    "758": {
      "URI": "//nose/nose.tools.trivial/pep8()",
      "metadata": {
        "LoC": 2
      }
    },
    "759": {
      "URI": "//nose/nose.tools.trivial/Dummy",
      "metadata": {
        "LoC": 1
      }
    },
    "760": {
      "URI": "//nose/nose.tools.trivial/Dummy.nop()",
      "metadata": {
        "LoC": 2
      }
    },
    "761": {
      "URI": "//nose/nose.plugins.manager/",
      "metadata": {
        "LoC": 460
      }
    },
    "762": {
      "URI": "//nose/nose.plugins.manager/PluginProxy",
      "metadata": {
        "LoC": 16
      }
    },
    "763": {
      "URI": "//nose/nose.plugins.manager/PluginProxy.__init__()",
      "metadata": {
        "LoC": 10
      }
    },
    "764": {
      "URI": "//nose/nose.plugins.manager/PluginProxy.__call__()",
      "metadata": {
        "LoC": 2
      }
    },
    "765": {
      "URI": "//nose/nose.plugins.manager/PluginProxy.addPlugin()",
      "metadata": {
        "LoC": 10
      }
    },
    "766": {
      "URI": "//nose/nose.plugins.manager/PluginProxy.addPlugin.<lambda1>()",
      "metadata": {
        "LoC": 1
      }
    },
    "767": {
      "URI": "//nose/nose.plugins.manager/PluginProxy.makeCall()",
      "metadata": {
        "LoC": 15
      }
    },
    "768": {
      "URI": "//nose/nose.plugins.manager/PluginProxy.makeCall.<lambda1>()",
      "metadata": {
        "LoC": 1
      }
    },
    "769": {
      "URI": "//nose/nose.plugins.manager/PluginProxy.chain()",
      "metadata": {
        "LoC": 15
      }
    },
    "770": {
      "URI": "//nose/nose.plugins.manager/PluginProxy.generate()",
      "metadata": {
        "LoC": 16
      }
    },
    "771": {
      "URI": "//nose/nose.plugins.manager/PluginProxy.simple()",
      "metadata": {
        "LoC": 7
      }
    },
    "772": {
      "URI": "//nose/nose.plugins.manager/PluginProxy._loadTestsFromNames()",
      "metadata": {
        "LoC": 14
      }
    },
    "773": {
      "URI": "//nose/nose.plugins.manager/NoPlugins",
      "metadata": {
        "LoC": 12
      }
    },
    "774": {
      "URI": "//nose/nose.plugins.manager/NoPlugins.__init__()",
      "metadata": {
        "LoC": 2
      }
    },
    "775": {
      "URI": "//nose/nose.plugins.manager/NoPlugins.__iter__()",
      "metadata": {
        "LoC": 2
      }
    },
    "776": {
      "URI": "//nose/nose.plugins.manager/NoPlugins._doNothing()",
      "metadata": {
        "LoC": 2
      }
    },
    "777": {
      "URI": "//nose/nose.plugins.manager/NoPlugins._emptyIterator()",
      "metadata": {
        "LoC": 2
      }
    },
    "778": {
      "URI": "//nose/nose.plugins.manager/NoPlugins.__getattr__()",
      "metadata": {
        "LoC": 6
      }
    },
    "779": {
      "URI": "//nose/nose.plugins.manager/NoPlugins.addPlugin()",
      "metadata": {
        "LoC": 2
      }
    },
    "780": {
      "URI": "//nose/nose.plugins.manager/NoPlugins.addPlugins()",
      "metadata": {
        "LoC": 2
      }
    },
    "781": {
      "URI": "//nose/nose.plugins.manager/NoPlugins.configure()",
      "metadata": {
        "LoC": 2
      }
    },
    "782": {
      "URI": "//nose/nose.plugins.manager/NoPlugins.loadPlugins()",
      "metadata": {
        "LoC": 2
      }
    },
    "783": {
      "URI": "//nose/nose.plugins.manager/NoPlugins.sort()",
      "metadata": {
        "LoC": 2
      }
    },
    "784": {
      "URI": "//nose/nose.plugins.manager/PluginManager",
      "metadata": {
        "LoC": 26
      }
    },
    "785": {
      "URI": "//nose/nose.plugins.manager/PluginManager.__init__()",
      "metadata": {
        "LoC": 8
      }
    },
    "786": {
      "URI": "//nose/nose.plugins.manager/PluginManager.__getattr__()",
      "metadata": {
        "LoC": 7
      }
    },
    "787": {
      "URI": "//nose/nose.plugins.manager/PluginManager.__iter__()",
      "metadata": {
        "LoC": 2
      }
    },
    "788": {
      "URI": "//nose/nose.plugins.manager/PluginManager.addPlugin()",
      "metadata": {
        "LoC": 7
      }
    },
    "789": {
      "URI": "//nose/nose.plugins.manager/PluginManager.addPlugins()",
      "metadata": {
        "LoC": 8
      }
    },
    "790": {
      "URI": "//nose/nose.plugins.manager/PluginManager.configure()",
      "metadata": {
        "LoC": 13
      }
    },
    "791": {
      "URI": "//nose/nose.plugins.manager/PluginManager.loadPlugins()",
      "metadata": {
        "LoC": 3
      }
    },
    "792": {
      "URI": "//nose/nose.plugins.manager/PluginManager.sort()",
      "metadata": {
        "LoC": 1
      }
    },
    "793": {
      "URI": "//nose/nose.plugins.manager/PluginManager.sort.<lambda1>()",
      "metadata": {
        "LoC": 1
      }
    },
    "794": {
      "URI": "//nose/nose.plugins.manager/PluginManager._get_plugins()",
      "metadata": {
        "LoC": 2
      }
    },
    "795": {
      "URI": "//nose/nose.plugins.manager/PluginManager._set_plugins()",
      "metadata": {
        "LoC": 3
      }
    },
    "796": {
      "URI": "//nose/nose.plugins.manager/ZeroNinePlugin",
      "metadata": {
        "LoC": 11
      }
    },
    "797": {
      "URI": "//nose/nose.plugins.manager/ZeroNinePlugin.__init__()",
      "metadata": {
        "LoC": 2
      }
    },
    "798": {
      "URI": "//nose/nose.plugins.manager/ZeroNinePlugin.options()",
      "metadata": {
        "LoC": 2
      }
    },
    "799": {
      "URI": "//nose/nose.plugins.manager/ZeroNinePlugin.addError()",
      "metadata": {
        "LoC": 17
      }
    },
    "800": {
      "URI": "//nose/nose.plugins.manager/ZeroNinePlugin.loadTestsFromFile()",
      "metadata": {
        "LoC": 3
      }
    },
    "801": {
      "URI": "//nose/nose.plugins.manager/ZeroNinePlugin.addFailure()",
      "metadata": {
        "LoC": 7
      }
    },
    "802": {
      "URI": "//nose/nose.plugins.manager/ZeroNinePlugin.addSuccess()",
      "metadata": {
        "LoC": 5
      }
    },
    "803": {
      "URI": "//nose/nose.plugins.manager/ZeroNinePlugin.startTest()",
      "metadata": {
        "LoC": 4
      }
    },
    "804": {
      "URI": "//nose/nose.plugins.manager/ZeroNinePlugin.stopTest()",
      "metadata": {
        "LoC": 4
      }
    },
    "805": {
      "URI": "//nose/nose.plugins.manager/ZeroNinePlugin.__getattr__()",
      "metadata": {
        "LoC": 2
      }
    },
    "806": {
      "URI": "//nose/nose.plugins.manager/EntryPointPluginManager",
      "metadata": {
        "LoC": 7
      }
    },
    "807": {
      "URI": "//nose/nose.plugins.manager/EntryPointPluginManager.loadPlugins()",
      "metadata": {
        "LoC": 28
      }
    },
    "808": {
      "URI": "//nose/nose.plugins.manager/BuiltinPluginManager",
      "metadata": {
        "LoC": 4
      }
    },
    "809": {
      "URI": "//nose/nose.plugins.manager/BuiltinPluginManager.loadPlugins()",
      "metadata": {
        "LoC": 7
      }
    },
    "810": {
      "URI": "//nose/nose.plugins.manager/DefaultPluginManager",
      "metadata": {
        "LoC": 2
      }
    },
    "811": {
      "URI": "//nose/nose.plugins.manager/RestrictedPluginManager",
      "metadata": {
        "LoC": 8
      }
    },
    "812": {
      "URI": "//nose/nose.plugins.manager/RestrictedPluginManager.__init__()",
      "metadata": {
        "LoC": 6
      }
    },
    "813": {
      "URI": "//nose/nose.plugins.manager/RestrictedPluginManager.excludedOption()",
      "metadata": {
        "LoC": 7
      }
    },
    "814": {
      "URI": "//nose/nose.plugins.manager/RestrictedPluginManager.loadPlugins()",
      "metadata": {
        "LoC": 14
      }
    },
    "815": {
      "URI": "//nose/nose.failure/",
      "metadata": {
        "LoC": 42
      }
    },
    "816": {
      "URI": "//nose/nose.failure/Failure",
      "metadata": {
        "LoC": 12
      }
    },
    "817": {
      "URI": "//nose/nose.failure/Failure.__init__()",
      "metadata": {
        "LoC": 7
      }
    },
    "818": {
      "URI": "//nose/nose.failure/Failure.__str__()",
      "metadata": {
        "LoC": 3
      }
    },
    "819": {
      "URI": "//nose/nose.failure/Failure.address()",
      "metadata": {
        "LoC": 2
      }
    },
    "820": {
      "URI": "//nose/nose.failure/Failure.runTest()",
      "metadata": {
        "LoC": 7
      }
    },
    "821": {
      "URI": "//nose/nose.plugins.base/",
      "metadata": {
        "LoC": 725
      }
    },
    "822": {
      "URI": "//nose/nose.plugins.base/Plugin",
      "metadata": {
        "LoC": 33
      }
    },
    "823": {
      "URI": "//nose/nose.plugins.base/Plugin.__init__()",
      "metadata": {
        "LoC": 5
      }
    },
    "824": {
      "URI": "//nose/nose.plugins.base/Plugin.addOptions()",
      "metadata": {
        "LoC": 14
      }
    },
    "825": {
      "URI": "//nose/nose.plugins.base/Plugin.add_options()",
      "metadata": {
        "LoC": 21
      }
    },
    "826": {
      "URI": "//nose/nose.plugins.base/Plugin.options()",
      "metadata": {
        "LoC": 15
      }
    },
    "827": {
      "URI": "//nose/nose.plugins.base/Plugin.configure()",
      "metadata": {
        "LoC": 11
      }
    },
    "828": {
      "URI": "//nose/nose.plugins.base/Plugin.help()",
      "metadata": {
        "LoC": 8
      }
    },
    "829": {
      "URI": "//nose/nose.plugins.base/Plugin.tolist()",
      "metadata": {
        "LoC": 4
      }
    },
    "830": {
      "URI": "//nose/nose.plugins.base/IPluginInterface",
      "metadata": {
        "LoC": 117
      }
    },
    "831": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.__new__()",
      "metadata": {
        "LoC": 2
      }
    },
    "832": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.addOptions()",
      "metadata": {
        "LoC": 11
      }
    },
    "833": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.addDeprecated()",
      "metadata": {
        "LoC": 8
      }
    },
    "834": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.addError()",
      "metadata": {
        "LoC": 11
      }
    },
    "835": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.addFailure()",
      "metadata": {
        "LoC": 10
      }
    },
    "836": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.addSkip()",
      "metadata": {
        "LoC": 7
      }
    },
    "837": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.addSuccess()",
      "metadata": {
        "LoC": 8
      }
    },
    "838": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.afterContext()",
      "metadata": {
        "LoC": 6
      }
    },
    "839": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.afterDirectory()",
      "metadata": {
        "LoC": 8
      }
    },
    "840": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.afterImport()",
      "metadata": {
        "LoC": 10
      }
    },
    "841": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.afterTest()",
      "metadata": {
        "LoC": 8
      }
    },
    "842": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.beforeContext()",
      "metadata": {
        "LoC": 15
      }
    },
    "843": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.beforeDirectory()",
      "metadata": {
        "LoC": 6
      }
    },
    "844": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.beforeImport()",
      "metadata": {
        "LoC": 2
      }
    },
    "845": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.beforeTest()",
      "metadata": {
        "LoC": 7
      }
    },
    "846": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.begin()",
      "metadata": {
        "LoC": 5
      }
    },
    "847": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.configure()",
      "metadata": {
        "LoC": 10
      }
    },
    "848": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.finalize()",
      "metadata": {
        "LoC": 15
      }
    },
    "849": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.describeTest()",
      "metadata": {
        "LoC": 9
      }
    },
    "850": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.formatError()",
      "metadata": {
        "LoC": 11
      }
    },
    "851": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.formatFailure()",
      "metadata": {
        "LoC": 11
      }
    },
    "852": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.handleError()",
      "metadata": {
        "LoC": 10
      }
    },
    "853": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.handleFailure()",
      "metadata": {
        "LoC": 10
      }
    },
    "854": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.loadTestsFromDir()",
      "metadata": {
        "LoC": 10
      }
    },
    "855": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.loadTestsFromModule()",
      "metadata": {
        "LoC": 18
      }
    },
    "856": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.loadTestsFromName()",
      "metadata": {
        "LoC": 16
      }
    },
    "857": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.loadTestsFromNames()",
      "metadata": {
        "LoC": 11
      }
    },
    "858": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.loadTestsFromFile()",
      "metadata": {
        "LoC": 13
      }
    },
    "859": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.loadTestsFromPath()",
      "metadata": {
        "LoC": 5
      }
    },
    "860": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.loadTestsFromTestCase()",
      "metadata": {
        "LoC": 9
      }
    },
    "861": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.loadTestsFromTestClass()",
      "metadata": {
        "LoC": 9
      }
    },
    "862": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.makeTest()",
      "metadata": {
        "LoC": 11
      }
    },
    "863": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.options()",
      "metadata": {
        "LoC": 12
      }
    },
    "864": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.prepareTest()",
      "metadata": {
        "LoC": 15
      }
    },
    "865": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.prepareTestCase()",
      "metadata": {
        "LoC": 17
      }
    },
    "866": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.prepareTestLoader()",
      "metadata": {
        "LoC": 10
      }
    },
    "867": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.prepareTestResult()",
      "metadata": {
        "LoC": 18
      }
    },
    "868": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.prepareTestRunner()",
      "metadata": {
        "LoC": 9
      }
    },
    "869": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.report()",
      "metadata": {
        "LoC": 9
      }
    },
    "870": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.setOutputStream()",
      "metadata": {
        "LoC": 2
      }
    },
    "871": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.startContext()",
      "metadata": {
        "LoC": 9
      }
    },
    "872": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.startTest()",
      "metadata": {
        "LoC": 8
      }
    },
    "873": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.stopContext()",
      "metadata": {
        "LoC": 8
      }
    },
    "874": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.stopTest()",
      "metadata": {
        "LoC": 8
      }
    },
    "875": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.testName()",
      "metadata": {
        "LoC": 7
      }
    },
    "876": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.wantClass()",
      "metadata": {
        "LoC": 8
      }
    },
    "877": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.wantDirectory()",
      "metadata": {
        "LoC": 7
      }
    },
    "878": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.wantFile()",
      "metadata": {
        "LoC": 9
      }
    },
    "879": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.wantFunction()",
      "metadata": {
        "LoC": 7
      }
    },
    "880": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.wantMethod()",
      "metadata": {
        "LoC": 8
      }
    },
    "881": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.wantModule()",
      "metadata": {
        "LoC": 9
      }
    },
    "882": {
      "URI": "//nose/nose.plugins.base/IPluginInterface.wantModuleTests()",
      "metadata": {
        "LoC": 6
      }
    },
    "883": {
      "URI": "//nose/nose.exc/",
      "metadata": {
        "LoC": 9
      }
    },
    "884": {
      "URI": "//nose/nose.plugins.skip/",
      "metadata": {
        "LoC": 63
      }
    },
    "885": {
      "URI": "//nose/nose.plugins.skip/SkipTest",
      "metadata": {
        "LoC": 4
      }
    },
    "886": {
      "URI": "//nose/nose.plugins.skip/Skip",
      "metadata": {
        "LoC": 15
      }
    },
    "887": {
      "URI": "//nose/nose.plugins.skip/Skip.options()",
      "metadata": {
        "LoC": 8
      }
    },
    "888": {
      "URI": "//nose/nose.plugins.skip/Skip.configure()",
      "metadata": {
        "LoC": 10
      }
    },
    "889": {
      "URI": "//nose/nose.plugins.errorclass/",
      "metadata": {
        "LoC": 210
      }
    },
    "890": {
      "URI": "//nose/nose.plugins.errorclass/MetaErrorClass",
      "metadata": {
        "LoC": 4
      }
    },
    "891": {
      "URI": "//nose/nose.plugins.errorclass/MetaErrorClass.__init__()",
      "metadata": {
        "LoC": 10
      }
    },
    "892": {
      "URI": "//nose/nose.plugins.errorclass/ErrorClass",
      "metadata": {
        "LoC": 2
      }
    },
    "893": {
      "URI": "//nose/nose.plugins.errorclass/ErrorClass.__init__()",
      "metadata": {
        "LoC": 8
      }
    },
    "894": {
      "URI": "//nose/nose.plugins.errorclass/ErrorClass.__iter__()",
      "metadata": {
        "LoC": 2
      }
    },
    "895": {
      "URI": "//nose/nose.plugins.errorclass/ErrorClassPlugin",
      "metadata": {
        "LoC": 10
      }
    },
    "896": {
      "URI": "//nose/nose.plugins.errorclass/ErrorClassPlugin.addError()",
      "metadata": {
        "LoC": 7
      }
    },
    "897": {
      "URI": "//nose/nose.plugins.errorclass/ErrorClassPlugin.prepareTestResult()",
      "metadata": {
        "LoC": 8
      }
    },
    "898": {
      "URI": "//nose/nose.plugins.errorclass/ErrorClassPlugin.patchResult()",
      "metadata": {
        "LoC": 13
      }
    },
    "899": {
      "URI": "//nose/nose.plugins.errorclass/add_error_patch()",
      "metadata": {
        "LoC": 6
      }
    },
    "900": {
      "URI": "//nose/nose.plugins.errorclass/print_errors_patch()",
      "metadata": {
        "LoC": 5
      }
    },
    "901": {
      "URI": "//nose/nose.plugins.errorclass/print_label_patch()",
      "metadata": {
        "LoC": 5
      }
    },
    "902": {
      "URI": "//nose/nose.plugins.errorclass/wassuccessful_patch()",
      "metadata": {
        "LoC": 6
      }
    },
    "903": {
      "URI": "//nose/nose.plugins.errorclass/add_skip_patch()",
      "metadata": {
        "LoC": 5
      }
    },
    "904": {
      "URI": "//nose/nose.result/",
      "metadata": {
        "LoC": 200
      }
    },
    "905": {
      "URI": "//nose/nose.result/_exception_detail()",
      "metadata": {
        "LoC": 6
      }
    },
    "906": {
      "URI": "//nose/nose.result/TextTestResult",
      "metadata": {
        "LoC": 15
      }
    },
    "907": {
      "URI": "//nose/nose.result/TextTestResult.__init__()",
      "metadata": {
        "LoC": 9
      }
    },
    "908": {
      "URI": "//nose/nose.result/TextTestResult.addSkip()",
      "metadata": {
        "LoC": 7
      }
    },
    "909": {
      "URI": "//nose/nose.result/TextTestResult.addError()",
      "metadata": {
        "LoC": 24
      }
    },
    "910": {
      "URI": "//nose/nose.result/TextTestResult.getDescription()",
      "metadata": {
        "LoC": 5
      }
    },
    "911": {
      "URI": "//nose/nose.result/TextTestResult.printLabel()",
      "metadata": {
        "LoC": 13
      }
    },
    "912": {
      "URI": "//nose/nose.result/TextTestResult.printErrors()",
      "metadata": {
        "LoC": 11
      }
    },
    "913": {
      "URI": "//nose/nose.result/TextTestResult.printSummary()",
      "metadata": {
        "LoC": 40
      }
    },
    "914": {
      "URI": "//nose/nose.result/TextTestResult.wasSuccessful()",
      "metadata": {
        "LoC": 14
      }
    },
    "915": {
      "URI": "//nose/nose.result/TextTestResult._addError()",
      "metadata": {
        "LoC": 11
      }
    },
    "916": {
      "URI": "//nose/nose.result/TextTestResult._exc_info_to_string()",
      "metadata": {
        "LoC": 11
      }
    },
    "917": {
      "URI": "//nose/nose.result/ln()",
      "metadata": {
        "LoC": 6
      }
    },
    "918": {
      "URI": "//nose/nose.plugins.deprecated/",
      "metadata": {
        "LoC": 45
      }
    },
    "919": {
      "URI": "//nose/nose.plugins.deprecated/DeprecatedTest",
      "metadata": {
        "LoC": 4
      }
    },
    "920": {
      "URI": "//nose/nose.plugins.deprecated/Deprecated",
      "metadata": {
        "LoC": 12
      }
    },
    "921": {
      "URI": "//nose/nose.plugins.deprecated/Deprecated.options()",
      "metadata": {
        "LoC": 7
      }
    },
    "922": {
      "URI": "//nose/nose.plugins.deprecated/Deprecated.configure()",
      "metadata": {
        "LoC": 9
      }
    },
    "923": {
      "URI": "//nose/nose.plugins.builtin/",
      "metadata": {
        "LoC": 34
      }
    },
    "924": {
      "URI": "//nose/nose.plugins/",
      "metadata": {
        "LoC": 190
      }
    },
    "925": {
      "URI": "//nose/nose.plugins.plugintest/",
      "metadata": {
        "LoC": 417
      }
    },
    "926": {
      "URI": "//nose/nose.plugins.plugintest/MultiProcessFile",
      "metadata": {
        "LoC": 17
      }
    },
    "927": {
      "URI": "//nose/nose.plugins.plugintest/MultiProcessFile.__init__()",
      "metadata": {
        "LoC": 7
      }
    },
    "928": {
      "URI": "//nose/nose.plugins.plugintest/MultiProcessFile.buffer()",
      "metadata": {
        "LoC": 20
      }
    },
    "929": {
      "URI": "//nose/nose.plugins.plugintest/MultiProcessFile.write()",
      "metadata": {
        "LoC": 6
      }
    },
    "930": {
      "URI": "//nose/nose.plugins.plugintest/MultiProcessFile.__iter__()",
      "metadata": {
        "LoC": 4
      }
    },
    "931": {
      "URI": "//nose/nose.plugins.plugintest/MultiProcessFile.seek()",
      "metadata": {
        "LoC": 3
      }
    },
    "932": {
      "URI": "//nose/nose.plugins.plugintest/MultiProcessFile.getvalue()",
      "metadata": {
        "LoC": 3
      }
    },
    "933": {
      "URI": "//nose/nose.plugins.plugintest/MultiProcessFile.__getattr__()",
      "metadata": {
        "LoC": 2
      }
    },
    "934": {
      "URI": "//nose/nose.plugins.plugintest/PluginTester",
      "metadata": {
        "LoC": 44
      }
    },
    "935": {
      "URI": "//nose/nose.plugins.plugintest/PluginTester.makeSuite()",
      "metadata": {
        "LoC": 19
      }
    },
    "936": {
      "URI": "//nose/nose.plugins.plugintest/PluginTester._execPlugin()",
      "metadata": {
        "LoC": 20
      }
    },
    "937": {
      "URI": "//nose/nose.plugins.plugintest/PluginTester.setUp()",
      "metadata": {
        "LoC": 11
      }
    },
    "938": {
      "URI": "//nose/nose.plugins.plugintest/AccessDecorator",
      "metadata": {
        "LoC": 3
      }
    },
    "939": {
      "URI": "//nose/nose.plugins.plugintest/AccessDecorator.__init__()",
      "metadata": {
        "LoC": 5
      }
    },
    "940": {
      "URI": "//nose/nose.plugins.plugintest/AccessDecorator.__contains__()",
      "metadata": {
        "LoC": 2
      }
    },
    "941": {
      "URI": "//nose/nose.plugins.plugintest/AccessDecorator.__iter__()",
      "metadata": {
        "LoC": 2
      }
    },
    "942": {
      "URI": "//nose/nose.plugins.plugintest/AccessDecorator.__str__()",
      "metadata": {
        "LoC": 2
      }
    },
    "943": {
      "URI": "//nose/nose.plugins.plugintest/blankline_separated_blocks()",
      "metadata": {
        "LoC": 11
      }
    },
    "944": {
      "URI": "//nose/nose.plugins.plugintest/remove_stack_traces()",
      "metadata": {
        "LoC": 20
      }
    },
    "945": {
      "URI": "//nose/nose.plugins.plugintest/simplify_warnings()",
      "metadata": {
        "LoC": 9
      }
    },
    "946": {
      "URI": "//nose/nose.plugins.plugintest/remove_timings()",
      "metadata": {
        "LoC": 3
      }
    },
    "947": {
      "URI": "//nose/nose.plugins.plugintest/munge_nose_output_for_doctest()",
      "metadata": {
        "LoC": 6
      }
    },
    "948": {
      "URI": "//nose/nose.plugins.plugintest/run()",
      "metadata": {
        "LoC": 58
      }
    },
    "949": {
      "URI": "//nose/nose.plugins.plugintest/run_buffered()",
      "metadata": {
        "LoC": 3
      }
    },
    "950": {
      "URI": "//nose/nose.core/",
      "metadata": {
        "LoC": 341
      }
    },
    "951": {
      "URI": "//nose/nose.core/TextTestRunner",
      "metadata": {
        "LoC": 8
      }
    },
    "952": {
      "URI": "//nose/nose.core/TextTestRunner.__init__()",
      "metadata": {
        "LoC": 6
      }
    },
    "953": {
      "URI": "//nose/nose.core/TextTestRunner._makeResult()",
      "metadata": {
        "LoC": 5
      }
    },
    "954": {
      "URI": "//nose/nose.core/TextTestRunner.run()",
      "metadata": {
        "LoC": 24
      }
    },
    "955": {
      "URI": "//nose/nose.core/TestProgram",
      "metadata": {
        "LoC": 38
      }
    },
    "956": {
      "URI": "//nose/nose.core/TestProgram.__init__()",
      "metadata": {
        "LoC": 20
      }
    },
    "957": {
      "URI": "//nose/nose.core/TestProgram.getAllConfigFiles()",
      "metadata": {
        "LoC": 6
      }
    },
    "958": {
      "URI": "//nose/nose.core/TestProgram.makeConfig()",
      "metadata": {
        "LoC": 11
      }
    },
    "959": {
      "URI": "//nose/nose.core/TestProgram.parseArgs()",
      "metadata": {
        "LoC": 38
      }
    },
    "960": {
      "URI": "//nose/nose.core/TestProgram.createTests()",
      "metadata": {
        "LoC": 13
      }
    },
    "961": {
      "URI": "//nose/nose.core/TestProgram.runTests()",
      "metadata": {
        "LoC": 17
      }
    },
    "962": {
      "URI": "//nose/nose.core/TestProgram.showPlugins()",
      "metadata": {
        "LoC": 29
      }
    },
    "963": {
      "URI": "//nose/nose.core/TestProgram.showPlugins.DummyParser",
      "metadata": {
        "LoC": 1
      }
    },
    "964": {
      "URI": "//nose/nose.core/TestProgram.showPlugins.DummyParser.__init__()",
      "metadata": {
        "LoC": 2
      }
    },
    "965": {
      "URI": "//nose/nose.core/TestProgram.showPlugins.DummyParser.add_option()",
      "metadata": {
        "LoC": 2
      }
    },
    "966": {
      "URI": "//nose/nose.core/TestProgram.usage()",
      "metadata": {
        "LoC": 17
      }
    },
    "967": {
      "URI": "//nose/nose.core/run()",
      "metadata": {
        "LoC": 31
      }
    },
    "968": {
      "URI": "//nose/nose.core/runmodule()",
      "metadata": {
        "LoC": 6
      }
    },
    "969": {
      "URI": "//nose/nose.core/collector()",
      "metadata": {
        "LoC": 25
      }
    },
    "970": {
      "URI": "//nose/nose.loader/",
      "metadata": {
        "LoC": 623
      }
    },
    "971": {
      "URI": "//nose/nose.loader/TestLoader",
      "metadata": {
        "LoC": 31
      }
    },
    "972": {
      "URI": "//nose/nose.loader/TestLoader.__init__()",
      "metadata": {
        "LoC": 41
      }
    },
    "973": {
      "URI": "//nose/nose.loader/TestLoader.getTestCaseNames()",
      "metadata": {
        "LoC": 16
      }
    },
    "974": {
      "URI": "//nose/nose.loader/TestLoader.getTestCaseNames.wanted()",
      "metadata": {
        "LoC": 7
      }
    },
    "975": {
      "URI": "//nose/nose.loader/TestLoader._haveVisited()",
      "metadata": {
        "LoC": 7
      }
    },
    "976": {
      "URI": "//nose/nose.loader/TestLoader._addVisitedPath()",
      "metadata": {
        "LoC": 3
      }
    },
    "977": {
      "URI": "//nose/nose.loader/TestLoader.loadTestsFromDir()",
      "metadata": {
        "LoC": 76
      }
    },
    "978": {
      "URI": "//nose/nose.loader/TestLoader.loadTestsFromFile()",
      "metadata": {
        "LoC": 27
      }
    },
    "979": {
      "URI": "//nose/nose.loader/TestLoader.loadTestsFromGenerator()",
      "metadata": {
        "LoC": 8
      }
    },
    "980": {
      "URI": "//nose/nose.loader/TestLoader.loadTestsFromGenerator.generate()",
      "metadata": {
        "LoC": 13
      }
    },
    "981": {
      "URI": "//nose/nose.loader/TestLoader.loadTestsFromGeneratorMethod()",
      "metadata": {
        "LoC": 19
      }
    },
    "982": {
      "URI": "//nose/nose.loader/TestLoader.loadTestsFromGeneratorMethod.generate()",
      "metadata": {
        "LoC": 24
      }
    },
    "983": {
      "URI": "//nose/nose.loader/TestLoader.loadTestsFromModule()",
      "metadata": {
        "LoC": 50
      }
    },
    "984": {
      "URI": "//nose/nose.loader/TestLoader.loadTestsFromModule.<lambda1>()",
      "metadata": {
        "LoC": 1
      }
    },
    "985": {
      "URI": "//nose/nose.loader/TestLoader.loadTestsFromName()",
      "metadata": {
        "LoC": 107
      }
    },
    "986": {
      "URI": "//nose/nose.loader/TestLoader.loadTestsFromNames()",
      "metadata": {
        "LoC": 13
      }
    },
    "987": {
      "URI": "//nose/nose.loader/TestLoader.loadTestsFromTestCase()",
      "metadata": {
        "LoC": 16
      }
    },
    "988": {
      "URI": "//nose/nose.loader/TestLoader.loadTestsFromTestClass()",
      "metadata": {
        "LoC": 13
      }
    },
    "989": {
      "URI": "//nose/nose.loader/TestLoader.loadTestsFromTestClass.wanted()",
      "metadata": {
        "LoC": 7
      }
    },
    "990": {
      "URI": "//nose/nose.loader/TestLoader.makeTest()",
      "metadata": {
        "LoC": 14
      }
    },
    "991": {
      "URI": "//nose/nose.loader/TestLoader._makeTest()",
      "metadata": {
        "LoC": 58
      }
    },
    "992": {
      "URI": "//nose/nose.loader/TestLoader.resolve()",
      "metadata": {
        "LoC": 11
      }
    },
    "993": {
      "URI": "//nose/nose.loader/TestLoader.parseGeneratedTest()",
      "metadata": {
        "LoC": 14
      }
    },
    "994": {
      "URI": "//nose/nose.importer/",
      "metadata": {
        "LoC": 167
      }
    },
    "995": {
      "URI": "//nose/nose.importer/_samefile()",
      "metadata": {
        "LoC": 3
      }
    },
    "996": {
      "URI": "//nose/nose.importer/Importer",
      "metadata": {
        "LoC": 9
      }
    },
    "997": {
      "URI": "//nose/nose.importer/Importer.__init__()",
      "metadata": {
        "LoC": 4
      }
    },
    "998": {
      "URI": "//nose/nose.importer/Importer.importFromPath()",
      "metadata": {
        "LoC": 14
      }
    },
    "999": {
      "URI": "//nose/nose.importer/Importer.importFromDir()",
      "metadata": {
        "LoC": 56
      }
    },
    "1000": {
      "URI": "//nose/nose.importer/Importer._dirname_if_file()",
      "metadata": {
        "LoC": 8
      }
    },
    "1001": {
      "URI": "//nose/nose.importer/Importer.sameModule()",
      "metadata": {
        "LoC": 19
      }
    },
    "1002": {
      "URI": "//nose/nose.importer/add_path()",
      "metadata": {
        "LoC": 26
      }
    },
    "1003": {
      "URI": "//nose/nose.importer/remove_path()",
      "metadata": {
        "LoC": 4
      }
    },
    "1004": {
      "URI": "//nose/nose.selector/",
      "metadata": {
        "LoC": 247
      }
    },
    "1005": {
      "URI": "//nose/nose.selector/Selector",
      "metadata": {
        "LoC": 14
      }
    },
    "1006": {
      "URI": "//nose/nose.selector/Selector.__init__()",
      "metadata": {
        "LoC": 4
      }
    },
    "1007": {
      "URI": "//nose/nose.selector/Selector.configure()",
      "metadata": {
        "LoC": 7
      }
    },
    "1008": {
      "URI": "//nose/nose.selector/Selector.matches()",
      "metadata": {
        "LoC": 11
      }
    },
    "1009": {
      "URI": "//nose/nose.selector/Selector.wantClass()",
      "metadata": {
        "LoC": 20
      }
    },
    "1010": {
      "URI": "//nose/nose.selector/Selector.wantDirectory()",
      "metadata": {
        "LoC": 21
      }
    },
    "1011": {
      "URI": "//nose/nose.selector/Selector.wantFile()",
      "metadata": {
        "LoC": 29
      }
    },
    "1012": {
      "URI": "//nose/nose.selector/Selector.wantFunction()",
      "metadata": {
        "LoC": 21
      }
    },
    "1013": {
      "URI": "//nose/nose.selector/Selector.wantMethod()",
      "metadata": {
        "LoC": 21
      }
    },
    "1014": {
      "URI": "//nose/nose.selector/Selector.wantModule()",
      "metadata": {
        "LoC": 17
      }
    },
    "1015": {
      "URI": "//nose/nose.selector/TestAddress",
      "metadata": {
        "LoC": 22
      }
    },
    "1016": {
      "URI": "//nose/nose.selector/TestAddress.__init__()",
      "metadata": {
        "LoC": 21
      }
    },
    "1017": {
      "URI": "//nose/nose.selector/TestAddress.totuple()",
      "metadata": {
        "LoC": 2
      }
    },
    "1018": {
      "URI": "//nose/nose.selector/TestAddress.__str__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1019": {
      "URI": "//nose/nose.selector/TestAddress.__repr__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1020": {
      "URI": "//nose/nose/",
      "metadata": {
        "LoC": 15
      }
    },
    "1021": {
      "URI": "//nose/nose.proxy/",
      "metadata": {
        "LoC": 188
      }
    },
    "1022": {
      "URI": "//nose/nose.proxy/proxied_attribute()",
      "metadata": {
        "LoC": 5
      }
    },
    "1023": {
      "URI": "//nose/nose.proxy/proxied_attribute.fget()",
      "metadata": {
        "LoC": 2
      }
    },
    "1024": {
      "URI": "//nose/nose.proxy/proxied_attribute.fset()",
      "metadata": {
        "LoC": 2
      }
    },
    "1025": {
      "URI": "//nose/nose.proxy/proxied_attribute.fdel()",
      "metadata": {
        "LoC": 2
      }
    },
    "1026": {
      "URI": "//nose/nose.proxy/ResultProxyFactory",
      "metadata": {
        "LoC": 5
      }
    },
    "1027": {
      "URI": "//nose/nose.proxy/ResultProxyFactory.__init__()",
      "metadata": {
        "LoC": 6
      }
    },
    "1028": {
      "URI": "//nose/nose.proxy/ResultProxyFactory.__call__()",
      "metadata": {
        "LoC": 16
      }
    },
    "1029": {
      "URI": "//nose/nose.proxy/ResultProxy",
      "metadata": {
        "LoC": 32
      }
    },
    "1030": {
      "URI": "//nose/nose.proxy/ResultProxy.__init__()",
      "metadata": {
        "LoC": 7
      }
    },
    "1031": {
      "URI": "//nose/nose.proxy/ResultProxy.__repr__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1032": {
      "URI": "//nose/nose.proxy/ResultProxy._prepareErr()",
      "metadata": {
        "LoC": 9
      }
    },
    "1033": {
      "URI": "//nose/nose.proxy/ResultProxy.assertMyTest()",
      "metadata": {
        "LoC": 10
      }
    },
    "1034": {
      "URI": "//nose/nose.proxy/ResultProxy.afterTest()",
      "metadata": {
        "LoC": 5
      }
    },
    "1035": {
      "URI": "//nose/nose.proxy/ResultProxy.beforeTest()",
      "metadata": {
        "LoC": 5
      }
    },
    "1036": {
      "URI": "//nose/nose.proxy/ResultProxy.addError()",
      "metadata": {
        "LoC": 14
      }
    },
    "1037": {
      "URI": "//nose/nose.proxy/ResultProxy.addFailure()",
      "metadata": {
        "LoC": 14
      }
    },
    "1038": {
      "URI": "//nose/nose.proxy/ResultProxy.addSkip()",
      "metadata": {
        "LoC": 10
      }
    },
    "1039": {
      "URI": "//nose/nose.proxy/ResultProxy.addSuccess()",
      "metadata": {
        "LoC": 4
      }
    },
    "1040": {
      "URI": "//nose/nose.proxy/ResultProxy.startTest()",
      "metadata": {
        "LoC": 4
      }
    },
    "1041": {
      "URI": "//nose/nose.proxy/ResultProxy.stop()",
      "metadata": {
        "LoC": 2
      }
    },
    "1042": {
      "URI": "//nose/nose.proxy/ResultProxy.stopTest()",
      "metadata": {
        "LoC": 4
      }
    },
    "1043": {
      "URI": "//nose/nose.inspector/",
      "metadata": {
        "LoC": 208
      }
    },
    "1044": {
      "URI": "//nose/nose.inspector/inspect_traceback()",
      "metadata": {
        "LoC": 45
      }
    },
    "1045": {
      "URI": "//nose/nose.inspector/tbsource()",
      "metadata": {
        "LoC": 42
      }
    },
    "1046": {
      "URI": "//nose/nose.inspector/find_inspectable_lines()",
      "metadata": {
        "LoC": 38
      }
    },
    "1047": {
      "URI": "//nose/nose.inspector/Expander",
      "metadata": {
        "LoC": 5
      }
    },
    "1048": {
      "URI": "//nose/nose.inspector/Expander.__init__()",
      "metadata": {
        "LoC": 5
      }
    },
    "1049": {
      "URI": "//nose/nose.inspector/Expander.__call__()",
      "metadata": {
        "LoC": 49
      }
    },
    "1050": {
      "URI": "//nose/nose.commands/",
      "metadata": {
        "LoC": 172
      }
    },
    "1051": {
      "URI": "//nose/nose.commands/get_user_options()",
      "metadata": {
        "LoC": 14
      }
    },
    "1052": {
      "URI": "//nose/nose.commands/nosetests",
      "metadata": {
        "LoC": 10
      }
    },
    "1053": {
      "URI": "//nose/nose.commands/nosetests.initialize_options()",
      "metadata": {
        "LoC": 12
      }
    },
    "1054": {
      "URI": "//nose/nose.commands/nosetests.finalize_options()",
      "metadata": {
        "LoC": 3
      }
    },
    "1055": {
      "URI": "//nose/nose.commands/nosetests.run()",
      "metadata": {
        "LoC": 46
      }
    },
    "1056": {
      "URI": "//nose/nose.commands/nosetests.cfgToArg()",
      "metadata": {
        "LoC": 13
      }
    },
    "1057": {
      "URI": "//nose/nose.__main__/",
      "metadata": {
        "LoC": 8
      }
    },
    "1058": {
      "URI": "//nose/nose.twistedtools/",
      "metadata": {
        "LoC": 173
      }
    },
    "1059": {
      "URI": "//nose/nose.twistedtools/threaded_reactor()",
      "metadata": {
        "LoC": 17
      }
    },
    "1060": {
      "URI": "//nose/nose.twistedtools/threaded_reactor.<lambda1>()",
      "metadata": {
        "LoC": 2
      }
    },
    "1061": {
      "URI": "//nose/nose.twistedtools/stop_reactor()",
      "metadata": {
        "LoC": 15
      }
    },
    "1062": {
      "URI": "//nose/nose.twistedtools/stop_reactor.stop_reactor()",
      "metadata": {
        "LoC": 3
      }
    },
    "1063": {
      "URI": "//nose/nose.twistedtools/deferred()",
      "metadata": {
        "LoC": 50
      }
    },
    "1064": {
      "URI": "//nose/nose.twistedtools/deferred.decorate()",
      "metadata": {
        "LoC": 3
      }
    },
    "1065": {
      "URI": "//nose/nose.twistedtools/deferred.decorate.wrapper()",
      "metadata": {
        "LoC": 12
      }
    },
    "1066": {
      "URI": "//nose/nose.twistedtools/deferred.decorate.wrapper.callback()",
      "metadata": {
        "LoC": 2
      }
    },
    "1067": {
      "URI": "//nose/nose.twistedtools/deferred.decorate.wrapper.errback()",
      "metadata": {
        "LoC": 6
      }
    },
    "1068": {
      "URI": "//nose/nose.twistedtools/deferred.decorate.wrapper.g()",
      "metadata": {
        "LoC": 14
      }
    },
    "1069": {
      "URI": "//nose/nose.sphinx.pluginopts/",
      "metadata": {
        "LoC": 189
      }
    },
    "1070": {
      "URI": "//nose/nose.sphinx.pluginopts/autoplugin_directive()",
      "metadata": {
        "LoC": 65
      }
    },
    "1071": {
      "URI": "//nose/nose.sphinx.pluginopts/autohelp_directive()",
      "metadata": {
        "LoC": 29
      }
    },
    "1072": {
      "URI": "//nose/nose.sphinx.pluginopts/OptBucket",
      "metadata": {
        "LoC": 4
      }
    },
    "1073": {
      "URI": "//nose/nose.sphinx.pluginopts/OptBucket.__init__()",
      "metadata": {
        "LoC": 4
      }
    },
    "1074": {
      "URI": "//nose/nose.sphinx.pluginopts/OptBucket.__iter__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1075": {
      "URI": "//nose/nose.sphinx.pluginopts/OptBucket.format_help()",
      "metadata": {
        "LoC": 2
      }
    },
    "1076": {
      "URI": "//nose/nose.sphinx.pluginopts/OptBucket.add_option()",
      "metadata": {
        "LoC": 2
      }
    },
    "1077": {
      "URI": "//nose/nose.sphinx.pluginopts/Opt",
      "metadata": {
        "LoC": 3
      }
    },
    "1078": {
      "URI": "//nose/nose.sphinx.pluginopts/Opt.__init__()",
      "metadata": {
        "LoC": 6
      }
    },
    "1079": {
      "URI": "//nose/nose.sphinx.pluginopts/Opt.options()",
      "metadata": {
        "LoC": 8
      }
    },
    "1080": {
      "URI": "//nose/nose.sphinx.pluginopts/Opt.meta()",
      "metadata": {
        "LoC": 3
      }
    },
    "1081": {
      "URI": "//nose/nose.sphinx.pluginopts/setup()",
      "metadata": {
        "LoC": 5
      }
    },
    "1082": {
      "URI": "//nose/nose.sphinx/",
      "metadata": {
        "LoC": 1
      }
    },
    "1083": {
      "URI": "//nose/nose.ext.dtcompat/",
      "metadata": {
        "LoC": 2272
      }
    },
    "1084": {
      "URI": "//nose/nose.ext.dtcompat/register_optionflag()",
      "metadata": {
        "LoC": 3
      }
    },
    "1085": {
      "URI": "//nose/nose.ext.dtcompat/is_private()",
      "metadata": {
        "LoC": 13
      }
    },
    "1086": {
      "URI": "//nose/nose.ext.dtcompat/_extract_future_flags()",
      "metadata": {
        "LoC": 11
      }
    },
    "1087": {
      "URI": "//nose/nose.ext.dtcompat/_normalize_module()",
      "metadata": {
        "LoC": 18
      }
    },
    "1088": {
      "URI": "//nose/nose.ext.dtcompat/_indent()",
      "metadata": {
        "LoC": 7
      }
    },
    "1089": {
      "URI": "//nose/nose.ext.dtcompat/_exception_traceback()",
      "metadata": {
        "LoC": 10
      }
    },
    "1090": {
      "URI": "//nose/nose.ext.dtcompat/_SpoofOut",
      "metadata": {
        "LoC": 2
      }
    },
    "1091": {
      "URI": "//nose/nose.ext.dtcompat/_SpoofOut.getvalue()",
      "metadata": {
        "LoC": 12
      }
    },
    "1092": {
      "URI": "//nose/nose.ext.dtcompat/_SpoofOut.truncate()",
      "metadata": {
        "LoC": 4
      }
    },
    "1093": {
      "URI": "//nose/nose.ext.dtcompat/_ellipsis_match()",
      "metadata": {
        "LoC": 43
      }
    },
    "1094": {
      "URI": "//nose/nose.ext.dtcompat/_comment_line()",
      "metadata": {
        "LoC": 7
      }
    },
    "1095": {
      "URI": "//nose/nose.ext.dtcompat/_OutputRedirectingPdb",
      "metadata": {
        "LoC": 7
      }
    },
    "1096": {
      "URI": "//nose/nose.ext.dtcompat/_OutputRedirectingPdb.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1097": {
      "URI": "//nose/nose.ext.dtcompat/_OutputRedirectingPdb.trace_dispatch()",
      "metadata": {
        "LoC": 9
      }
    },
    "1098": {
      "URI": "//nose/nose.ext.dtcompat/_module_relative_path()",
      "metadata": {
        "LoC": 23
      }
    },
    "1099": {
      "URI": "//nose/nose.ext.dtcompat/Example",
      "metadata": {
        "LoC": 35
      }
    },
    "1100": {
      "URI": "//nose/nose.ext.dtcompat/Example.__init__()",
      "metadata": {
        "LoC": 17
      }
    },
    "1101": {
      "URI": "//nose/nose.ext.dtcompat/DocTest",
      "metadata": {
        "LoC": 28
      }
    },
    "1102": {
      "URI": "//nose/nose.ext.dtcompat/DocTest.__init__()",
      "metadata": {
        "LoC": 13
      }
    },
    "1103": {
      "URI": "//nose/nose.ext.dtcompat/DocTest.__repr__()",
      "metadata": {
        "LoC": 9
      }
    },
    "1104": {
      "URI": "//nose/nose.ext.dtcompat/DocTest.__cmp__()",
      "metadata": {
        "LoC": 5
      }
    },
    "1105": {
      "URI": "//nose/nose.ext.dtcompat/DocTestParser",
      "metadata": {
        "LoC": 69
      }
    },
    "1106": {
      "URI": "//nose/nose.ext.dtcompat/DocTestParser.parse()",
      "metadata": {
        "LoC": 38
      }
    },
    "1107": {
      "URI": "//nose/nose.ext.dtcompat/DocTestParser.get_doctest()",
      "metadata": {
        "LoC": 11
      }
    },
    "1108": {
      "URI": "//nose/nose.ext.dtcompat/DocTestParser.get_examples()",
      "metadata": {
        "LoC": 13
      }
    },
    "1109": {
      "URI": "//nose/nose.ext.dtcompat/DocTestParser._parse_example()",
      "metadata": {
        "LoC": 43
      }
    },
    "1110": {
      "URI": "//nose/nose.ext.dtcompat/DocTestParser._find_options()",
      "metadata": {
        "LoC": 25
      }
    },
    "1111": {
      "URI": "//nose/nose.ext.dtcompat/DocTestParser._min_indent()",
      "metadata": {
        "LoC": 7
      }
    },
    "1112": {
      "URI": "//nose/nose.ext.dtcompat/DocTestParser._check_prompt_blank()",
      "metadata": {
        "LoC": 13
      }
    },
    "1113": {
      "URI": "//nose/nose.ext.dtcompat/DocTestParser._check_prefix()",
      "metadata": {
        "LoC": 10
      }
    },
    "1114": {
      "URI": "//nose/nose.ext.dtcompat/DocTestFinder",
      "metadata": {
        "LoC": 15
      }
    },
    "1115": {
      "URI": "//nose/nose.ext.dtcompat/DocTestFinder.__init__()",
      "metadata": {
        "LoC": 24
      }
    },
    "1116": {
      "URI": "//nose/nose.ext.dtcompat/DocTestFinder.find()",
      "metadata": {
        "LoC": 83
      }
    },
    "1117": {
      "URI": "//nose/nose.ext.dtcompat/DocTestFinder._filter()",
      "metadata": {
        "LoC": 6
      }
    },
    "1118": {
      "URI": "//nose/nose.ext.dtcompat/DocTestFinder._from_module()",
      "metadata": {
        "LoC": 20
      }
    },
    "1119": {
      "URI": "//nose/nose.ext.dtcompat/DocTestFinder._find()",
      "metadata": {
        "LoC": 68
      }
    },
    "1120": {
      "URI": "//nose/nose.ext.dtcompat/DocTestFinder._get_test()",
      "metadata": {
        "LoC": 39
      }
    },
    "1121": {
      "URI": "//nose/nose.ext.dtcompat/DocTestFinder._find_lineno()",
      "metadata": {
        "LoC": 47
      }
    },
    "1122": {
      "URI": "//nose/nose.ext.dtcompat/DocTestRunner",
      "metadata": {
        "LoC": 33
      }
    },
    "1123": {
      "URI": "//nose/nose.ext.dtcompat/DocTestRunner.__init__()",
      "metadata": {
        "LoC": 31
      }
    },
    "1124": {
      "URI": "//nose/nose.ext.dtcompat/DocTestRunner.report_start()",
      "metadata": {
        "LoC": 12
      }
    },
    "1125": {
      "URI": "//nose/nose.ext.dtcompat/DocTestRunner.report_success()",
      "metadata": {
        "LoC": 7
      }
    },
    "1126": {
      "URI": "//nose/nose.ext.dtcompat/DocTestRunner.report_failure()",
      "metadata": {
        "LoC": 6
      }
    },
    "1127": {
      "URI": "//nose/nose.ext.dtcompat/DocTestRunner.report_unexpected_exception()",
      "metadata": {
        "LoC": 6
      }
    },
    "1128": {
      "URI": "//nose/nose.ext.dtcompat/DocTestRunner._failure_header()",
      "metadata": {
        "LoC": 15
      }
    },
    "1129": {
      "URI": "//nose/nose.ext.dtcompat/DocTestRunner.__run()",
      "metadata": {
        "LoC": 119
      }
    },
    "1130": {
      "URI": "//nose/nose.ext.dtcompat/DocTestRunner.__record_outcome()",
      "metadata": {
        "LoC": 9
      }
    },
    "1131": {
      "URI": "//nose/nose.ext.dtcompat/DocTestRunner.__patched_linecache_getlines()",
      "metadata": {
        "LoC": 7
      }
    },
    "1132": {
      "URI": "//nose/nose.ext.dtcompat/DocTestRunner.run()",
      "metadata": {
        "LoC": 53
      }
    },
    "1133": {
      "URI": "//nose/nose.ext.dtcompat/DocTestRunner.summarize()",
      "metadata": {
        "LoC": 53
      }
    },
    "1134": {
      "URI": "//nose/nose.ext.dtcompat/DocTestRunner.merge()",
      "metadata": {
        "LoC": 10
      }
    },
    "1135": {
      "URI": "//nose/nose.ext.dtcompat/OutputChecker",
      "metadata": {
        "LoC": 11
      }
    },
    "1136": {
      "URI": "//nose/nose.ext.dtcompat/OutputChecker.check_output()",
      "metadata": {
        "LoC": 52
      }
    },
    "1137": {
      "URI": "//nose/nose.ext.dtcompat/OutputChecker._do_a_fancy_diff()",
      "metadata": {
        "LoC": 22
      }
    },
    "1138": {
      "URI": "//nose/nose.ext.dtcompat/OutputChecker.output_difference()",
      "metadata": {
        "LoC": 47
      }
    },
    "1139": {
      "URI": "//nose/nose.ext.dtcompat/DocTestFailure",
      "metadata": {
        "LoC": 12
      }
    },
    "1140": {
      "URI": "//nose/nose.ext.dtcompat/DocTestFailure.__init__()",
      "metadata": {
        "LoC": 4
      }
    },
    "1141": {
      "URI": "//nose/nose.ext.dtcompat/DocTestFailure.__str__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1142": {
      "URI": "//nose/nose.ext.dtcompat/UnexpectedException",
      "metadata": {
        "LoC": 12
      }
    },
    "1143": {
      "URI": "//nose/nose.ext.dtcompat/UnexpectedException.__init__()",
      "metadata": {
        "LoC": 4
      }
    },
    "1144": {
      "URI": "//nose/nose.ext.dtcompat/UnexpectedException.__str__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1145": {
      "URI": "//nose/nose.ext.dtcompat/DebugRunner",
      "metadata": {
        "LoC": 4
      }
    },
    "1146": {
      "URI": "//nose/nose.ext.dtcompat/DebugRunner.run()",
      "metadata": {
        "LoC": 5
      }
    },
    "1147": {
      "URI": "//nose/nose.ext.dtcompat/DebugRunner.report_unexpected_exception()",
      "metadata": {
        "LoC": 2
      }
    },
    "1148": {
      "URI": "//nose/nose.ext.dtcompat/DebugRunner.report_failure()",
      "metadata": {
        "LoC": 2
      }
    },
    "1149": {
      "URI": "//nose/nose.ext.dtcompat/testmod()",
      "metadata": {
        "LoC": 115
      }
    },
    "1150": {
      "URI": "//nose/nose.ext.dtcompat/testfile()",
      "metadata": {
        "LoC": 117
      }
    },
    "1151": {
      "URI": "//nose/nose.ext.dtcompat/run_docstring_examples()",
      "metadata": {
        "LoC": 22
      }
    },
    "1152": {
      "URI": "//nose/nose.ext.dtcompat/Tester",
      "metadata": {
        "LoC": 7
      }
    },
    "1153": {
      "URI": "//nose/nose.ext.dtcompat/Tester.__init__()",
      "metadata": {
        "LoC": 21
      }
    },
    "1154": {
      "URI": "//nose/nose.ext.dtcompat/Tester.runstring()",
      "metadata": {
        "LoC": 8
      }
    },
    "1155": {
      "URI": "//nose/nose.ext.dtcompat/Tester.rundoc()",
      "metadata": {
        "LoC": 8
      }
    },
    "1156": {
      "URI": "//nose/nose.ext.dtcompat/Tester.rundict()",
      "metadata": {
        "LoC": 7
      }
    },
    "1157": {
      "URI": "//nose/nose.ext.dtcompat/Tester.run__test__()",
      "metadata": {
        "LoC": 5
      }
    },
    "1158": {
      "URI": "//nose/nose.ext.dtcompat/Tester.summarize()",
      "metadata": {
        "LoC": 2
      }
    },
    "1159": {
      "URI": "//nose/nose.ext.dtcompat/Tester.merge()",
      "metadata": {
        "LoC": 2
      }
    },
    "1160": {
      "URI": "//nose/nose.ext.dtcompat/set_unittest_reportflags()",
      "metadata": {
        "LoC": 8
      }
    },
    "1161": {
      "URI": "//nose/nose.ext.dtcompat/DocTestCase",
      "metadata": {
        "LoC": 13
      }
    },
    "1162": {
      "URI": "//nose/nose.ext.dtcompat/DocTestCase.__init__()",
      "metadata": {
        "LoC": 9
      }
    },
    "1163": {
      "URI": "//nose/nose.ext.dtcompat/DocTestCase.setUp()",
      "metadata": {
        "LoC": 5
      }
    },
    "1164": {
      "URI": "//nose/nose.ext.dtcompat/DocTestCase.tearDown()",
      "metadata": {
        "LoC": 7
      }
    },
    "1165": {
      "URI": "//nose/nose.ext.dtcompat/DocTestCase.runTest()",
      "metadata": {
        "LoC": 23
      }
    },
    "1166": {
      "URI": "//nose/nose.ext.dtcompat/DocTestCase.format_failure()",
      "metadata": {
        "LoC": 10
      }
    },
    "1167": {
      "URI": "//nose/nose.ext.dtcompat/DocTestCase.debug()",
      "metadata": {
        "LoC": 6
      }
    },
    "1168": {
      "URI": "//nose/nose.ext.dtcompat/DocTestCase.id()",
      "metadata": {
        "LoC": 2
      }
    },
    "1169": {
      "URI": "//nose/nose.ext.dtcompat/DocTestCase.__repr__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1170": {
      "URI": "//nose/nose.ext.dtcompat/DocTestCase.shortDescription()",
      "metadata": {
        "LoC": 2
      }
    },
    "1171": {
      "URI": "//nose/nose.ext.dtcompat/DocTestSuite()",
      "metadata": {
        "LoC": 65
      }
    },
    "1172": {
      "URI": "//nose/nose.ext.dtcompat/DocFileCase",
      "metadata": {
        "LoC": 5
      }
    },
    "1173": {
      "URI": "//nose/nose.ext.dtcompat/DocFileCase.id()",
      "metadata": {
        "LoC": 2
      }
    },
    "1174": {
      "URI": "//nose/nose.ext.dtcompat/DocFileCase.__repr__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1175": {
      "URI": "//nose/nose.ext.dtcompat/DocFileCase.format_failure()",
      "metadata": {
        "LoC": 3
      }
    },
    "1176": {
      "URI": "//nose/nose.ext.dtcompat/DocFileTest()",
      "metadata": {
        "LoC": 21
      }
    },
    "1177": {
      "URI": "//nose/nose.ext.dtcompat/DocFileSuite()",
      "metadata": {
        "LoC": 65
      }
    },
    "1178": {
      "URI": "//nose/nose.ext.dtcompat/script_from_examples()",
      "metadata": {
        "LoC": 24
      }
    },
    "1179": {
      "URI": "//nose/nose.ext.dtcompat/testsource()",
      "metadata": {
        "LoC": 15
      }
    },
    "1180": {
      "URI": "//nose/nose.ext.dtcompat/debug_src()",
      "metadata": {
        "LoC": 4
      }
    },
    "1181": {
      "URI": "//nose/nose.ext.dtcompat/debug_script()",
      "metadata": {
        "LoC": 31
      }
    },
    "1182": {
      "URI": "//nose/nose.ext.dtcompat/debug()",
      "metadata": {
        "LoC": 10
      }
    },
    "1183": {
      "URI": "//nose/nose.ext/",
      "metadata": {
        "LoC": 3
      }
    },
    "1184": {
      "URI": "//nose/nose.plugins.isolate/",
      "metadata": {
        "LoC": 103
      }
    },
    "1185": {
      "URI": "//nose/nose.plugins.isolate/IsolationPlugin",
      "metadata": {
        "LoC": 16
      }
    },
    "1186": {
      "URI": "//nose/nose.plugins.isolate/IsolationPlugin.configure()",
      "metadata": {
        "LoC": 5
      }
    },
    "1187": {
      "URI": "//nose/nose.plugins.isolate/IsolationPlugin.beforeContext()",
      "metadata": {
        "LoC": 5
      }
    },
    "1188": {
      "URI": "//nose/nose.plugins.isolate/IsolationPlugin.afterContext()",
      "metadata": {
        "LoC": 11
      }
    },
    "1189": {
      "URI": "//nose/nose.plugins.isolate/IsolationPlugin.loadTestsFromNames()",
      "metadata": {
        "LoC": 11
      }
    },
    "1190": {
      "URI": "//nose/nose.plugins.isolate/IsolationPlugin.loadTestsFromNames.lazy()",
      "metadata": {
        "LoC": 5
      }
    },
    "1191": {
      "URI": "//nose/nose.plugins.isolate/IsolationPlugin.prepareTestLoader()",
      "metadata": {
        "LoC": 4
      }
    },
    "1192": {
      "URI": "//nose/nose.plugins.cover/",
      "metadata": {
        "LoC": 271
      }
    },
    "1193": {
      "URI": "//nose/nose.plugins.cover/Coverage",
      "metadata": {
        "LoC": 22
      }
    },
    "1194": {
      "URI": "//nose/nose.plugins.cover/Coverage.options()",
      "metadata": {
        "LoC": 57
      }
    },
    "1195": {
      "URI": "//nose/nose.plugins.cover/Coverage.configure()",
      "metadata": {
        "LoC": 64
      }
    },
    "1196": {
      "URI": "//nose/nose.plugins.cover/Coverage.beforeTest()",
      "metadata": {
        "LoC": 8
      }
    },
    "1197": {
      "URI": "//nose/nose.plugins.cover/Coverage.afterTest()",
      "metadata": {
        "LoC": 8
      }
    },
    "1198": {
      "URI": "//nose/nose.plugins.cover/Coverage.report()",
      "metadata": {
        "LoC": 51
      }
    },
    "1199": {
      "URI": "//nose/nose.plugins.cover/Coverage.wantModuleCoverage()",
      "metadata": {
        "LoC": 26
      }
    },
    "1200": {
      "URI": "//nose/nose.plugins.cover/Coverage.wantFile()",
      "metadata": {
        "LoC": 13
      }
    },
    "1201": {
      "URI": "//nose/nose.plugins.capture/",
      "metadata": {
        "LoC": 115
      }
    },
    "1202": {
      "URI": "//nose/nose.plugins.capture/Capture",
      "metadata": {
        "LoC": 28
      }
    },
    "1203": {
      "URI": "//nose/nose.plugins.capture/Capture.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1204": {
      "URI": "//nose/nose.plugins.capture/Capture.options()",
      "metadata": {
        "LoC": 7
      }
    },
    "1205": {
      "URI": "//nose/nose.plugins.capture/Capture.configure()",
      "metadata": {
        "LoC": 6
      }
    },
    "1206": {
      "URI": "//nose/nose.plugins.capture/Capture.afterTest()",
      "metadata": {
        "LoC": 5
      }
    },
    "1207": {
      "URI": "//nose/nose.plugins.capture/Capture.begin()",
      "metadata": {
        "LoC": 4
      }
    },
    "1208": {
      "URI": "//nose/nose.plugins.capture/Capture.beforeTest()",
      "metadata": {
        "LoC": 4
      }
    },
    "1209": {
      "URI": "//nose/nose.plugins.capture/Capture.formatError()",
      "metadata": {
        "LoC": 12
      }
    },
    "1210": {
      "URI": "//nose/nose.plugins.capture/Capture.formatFailure()",
      "metadata": {
        "LoC": 4
      }
    },
    "1211": {
      "URI": "//nose/nose.plugins.capture/Capture.addCaptureToErr()",
      "metadata": {
        "LoC": 5
      }
    },
    "1212": {
      "URI": "//nose/nose.plugins.capture/Capture.start()",
      "metadata": {
        "LoC": 4
      }
    },
    "1213": {
      "URI": "//nose/nose.plugins.capture/Capture.end()",
      "metadata": {
        "LoC": 3
      }
    },
    "1214": {
      "URI": "//nose/nose.plugins.capture/Capture.finalize()",
      "metadata": {
        "LoC": 5
      }
    },
    "1215": {
      "URI": "//nose/nose.plugins.capture/Capture._get_buffer()",
      "metadata": {
        "LoC": 3
      }
    },
    "1216": {
      "URI": "//nose/nose.plugins.testid/",
      "metadata": {
        "LoC": 311
      }
    },
    "1217": {
      "URI": "//nose/nose.plugins.testid/TestId",
      "metadata": {
        "LoC": 20
      }
    },
    "1218": {
      "URI": "//nose/nose.plugins.testid/TestId.options()",
      "metadata": {
        "LoC": 12
      }
    },
    "1219": {
      "URI": "//nose/nose.plugins.testid/TestId.configure()",
      "metadata": {
        "LoC": 22
      }
    },
    "1220": {
      "URI": "//nose/nose.plugins.testid/TestId.finalize()",
      "metadata": {
        "LoC": 16
      }
    },
    "1221": {
      "URI": "//nose/nose.plugins.testid/TestId.loadTestsFromNames()",
      "metadata": {
        "LoC": 71
      }
    },
    "1222": {
      "URI": "//nose/nose.plugins.testid/TestId.makeName()",
      "metadata": {
        "LoC": 10
      }
    },
    "1223": {
      "URI": "//nose/nose.plugins.testid/TestId.setOutputStream()",
      "metadata": {
        "LoC": 4
      }
    },
    "1224": {
      "URI": "//nose/nose.plugins.testid/TestId.startTest()",
      "metadata": {
        "LoC": 21
      }
    },
    "1225": {
      "URI": "//nose/nose.plugins.testid/TestId.afterTest()",
      "metadata": {
        "LoC": 11
      }
    },
    "1226": {
      "URI": "//nose/nose.plugins.testid/TestId.tr()",
      "metadata": {
        "LoC": 12
      }
    },
    "1227": {
      "URI": "//nose/nose.plugins.testid/TestId.write()",
      "metadata": {
        "LoC": 3
      }
    },
    "1228": {
      "URI": "//nose/nose.plugins.logcapture/",
      "metadata": {
        "LoC": 245
      }
    },
    "1229": {
      "URI": "//nose/nose.plugins.logcapture/FilterSet",
      "metadata": {
        "LoC": 10
      }
    },
    "1230": {
      "URI": "//nose/nose.plugins.logcapture/FilterSet.__init__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1231": {
      "URI": "//nose/nose.plugins.logcapture/FilterSet._partition()",
      "metadata": {
        "LoC": 8
      }
    },
    "1232": {
      "URI": "//nose/nose.plugins.logcapture/FilterSet.allow()",
      "metadata": {
        "LoC": 6
      }
    },
    "1233": {
      "URI": "//nose/nose.plugins.logcapture/FilterSet._any_match()",
      "metadata": {
        "LoC": 4
      }
    },
    "1234": {
      "URI": "//nose/nose.plugins.logcapture/FilterSet._any_match.record_matches_key()",
      "metadata": {
        "LoC": 2
      }
    },
    "1235": {
      "URI": "//nose/nose.plugins.logcapture/FilterSet._allow()",
      "metadata": {
        "LoC": 4
      }
    },
    "1236": {
      "URI": "//nose/nose.plugins.logcapture/FilterSet._deny()",
      "metadata": {
        "LoC": 4
      }
    },
    "1237": {
      "URI": "//nose/nose.plugins.logcapture/MyMemoryHandler",
      "metadata": {
        "LoC": 1
      }
    },
    "1238": {
      "URI": "//nose/nose.plugins.logcapture/MyMemoryHandler.__init__()",
      "metadata": {
        "LoC": 6
      }
    },
    "1239": {
      "URI": "//nose/nose.plugins.logcapture/MyMemoryHandler.emit()",
      "metadata": {
        "LoC": 2
      }
    },
    "1240": {
      "URI": "//nose/nose.plugins.logcapture/MyMemoryHandler.flush()",
      "metadata": {
        "LoC": 2
      }
    },
    "1241": {
      "URI": "//nose/nose.plugins.logcapture/MyMemoryHandler.truncate()",
      "metadata": {
        "LoC": 2
      }
    },
    "1242": {
      "URI": "//nose/nose.plugins.logcapture/MyMemoryHandler.filter()",
      "metadata": {
        "LoC": 3
      }
    },
    "1243": {
      "URI": "//nose/nose.plugins.logcapture/MyMemoryHandler.__getstate__()",
      "metadata": {
        "LoC": 4
      }
    },
    "1244": {
      "URI": "//nose/nose.plugins.logcapture/MyMemoryHandler.__setstate__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1245": {
      "URI": "//nose/nose.plugins.logcapture/LogCapture",
      "metadata": {
        "LoC": 27
      }
    },
    "1246": {
      "URI": "//nose/nose.plugins.logcapture/LogCapture.options()",
      "metadata": {
        "LoC": 45
      }
    },
    "1247": {
      "URI": "//nose/nose.plugins.logcapture/LogCapture.configure()",
      "metadata": {
        "LoC": 14
      }
    },
    "1248": {
      "URI": "//nose/nose.plugins.logcapture/LogCapture.setupLoghandler()",
      "metadata": {
        "LoC": 24
      }
    },
    "1249": {
      "URI": "//nose/nose.plugins.logcapture/LogCapture.begin()",
      "metadata": {
        "LoC": 4
      }
    },
    "1250": {
      "URI": "//nose/nose.plugins.logcapture/LogCapture.start()",
      "metadata": {
        "LoC": 4
      }
    },
    "1251": {
      "URI": "//nose/nose.plugins.logcapture/LogCapture.end()",
      "metadata": {
        "LoC": 2
      }
    },
    "1252": {
      "URI": "//nose/nose.plugins.logcapture/LogCapture.beforeTest()",
      "metadata": {
        "LoC": 4
      }
    },
    "1253": {
      "URI": "//nose/nose.plugins.logcapture/LogCapture.afterTest()",
      "metadata": {
        "LoC": 4
      }
    },
    "1254": {
      "URI": "//nose/nose.plugins.logcapture/LogCapture.formatFailure()",
      "metadata": {
        "LoC": 4
      }
    },
    "1255": {
      "URI": "//nose/nose.plugins.logcapture/LogCapture.formatError()",
      "metadata": {
        "LoC": 9
      }
    },
    "1256": {
      "URI": "//nose/nose.plugins.logcapture/LogCapture.formatLogRecords()",
      "metadata": {
        "LoC": 2
      }
    },
    "1257": {
      "URI": "//nose/nose.plugins.logcapture/LogCapture.addCaptureToErr()",
      "metadata": {
        "LoC": 4
      }
    },
    "1258": {
      "URI": "//nose/nose.plugins.debug/",
      "metadata": {
        "LoC": 67
      }
    },
    "1259": {
      "URI": "//nose/nose.plugins.debug/Pdb",
      "metadata": {
        "LoC": 13
      }
    },
    "1260": {
      "URI": "//nose/nose.plugins.debug/Pdb.options()",
      "metadata": {
        "LoC": 17
      }
    },
    "1261": {
      "URI": "//nose/nose.plugins.debug/Pdb.configure()",
      "metadata": {
        "LoC": 7
      }
    },
    "1262": {
      "URI": "//nose/nose.plugins.debug/Pdb.addError()",
      "metadata": {
        "LoC": 6
      }
    },
    "1263": {
      "URI": "//nose/nose.plugins.debug/Pdb.addFailure()",
      "metadata": {
        "LoC": 6
      }
    },
    "1264": {
      "URI": "//nose/nose.plugins.debug/Pdb.debug()",
      "metadata": {
        "LoC": 9
      }
    },
    "1265": {
      "URI": "//nose/nose.plugins.allmodules/",
      "metadata": {
        "LoC": 45
      }
    },
    "1266": {
      "URI": "//nose/nose.plugins.allmodules/AllModules",
      "metadata": {
        "LoC": 5
      }
    },
    "1267": {
      "URI": "//nose/nose.plugins.allmodules/AllModules.options()",
      "metadata": {
        "LoC": 10
      }
    },
    "1268": {
      "URI": "//nose/nose.plugins.allmodules/AllModules.wantFile()",
      "metadata": {
        "LoC": 5
      }
    },
    "1269": {
      "URI": "//nose/nose.plugins.allmodules/AllModules.wantModule()",
      "metadata": {
        "LoC": 3
      }
    },
    "1270": {
      "URI": "//nose/nose.plugins.doctests/",
      "metadata": {
        "LoC": 452
      }
    },
    "1271": {
      "URI": "//nose/nose.plugins.doctests/NoseOutputRedirectingPdb",
      "metadata": {
        "LoC": 3
      }
    },
    "1272": {
      "URI": "//nose/nose.plugins.doctests/NoseOutputRedirectingPdb.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1273": {
      "URI": "//nose/nose.plugins.doctests/NoseOutputRedirectingPdb.set_trace()",
      "metadata": {
        "LoC": 3
      }
    },
    "1274": {
      "URI": "//nose/nose.plugins.doctests/NoseOutputRedirectingPdb.set_continue()",
      "metadata": {
        "LoC": 5
      }
    },
    "1275": {
      "URI": "//nose/nose.plugins.doctests/DoctestSuite",
      "metadata": {
        "LoC": 16
      }
    },
    "1276": {
      "URI": "//nose/nose.plugins.doctests/DoctestSuite.__init__()",
      "metadata": {
        "LoC": 4
      }
    },
    "1277": {
      "URI": "//nose/nose.plugins.doctests/DoctestSuite.address()",
      "metadata": {
        "LoC": 2
      }
    },
    "1278": {
      "URI": "//nose/nose.plugins.doctests/DoctestSuite.__iter__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1279": {
      "URI": "//nose/nose.plugins.doctests/DoctestSuite.__str__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1280": {
      "URI": "//nose/nose.plugins.doctests/Doctest",
      "metadata": {
        "LoC": 14
      }
    },
    "1281": {
      "URI": "//nose/nose.plugins.doctests/Doctest.options()",
      "metadata": {
        "LoC": 42
      }
    },
    "1282": {
      "URI": "//nose/nose.plugins.doctests/Doctest.configure()",
      "metadata": {
        "LoC": 26
      }
    },
    "1283": {
      "URI": "//nose/nose.plugins.doctests/Doctest.prepareTestLoader()",
      "metadata": {
        "LoC": 7
      }
    },
    "1284": {
      "URI": "//nose/nose.plugins.doctests/Doctest.loadTestsFromModule()",
      "metadata": {
        "LoC": 32
      }
    },
    "1285": {
      "URI": "//nose/nose.plugins.doctests/Doctest.loadTestsFromFile()",
      "metadata": {
        "LoC": 49
      }
    },
    "1286": {
      "URI": "//nose/nose.plugins.doctests/Doctest.makeTest()",
      "metadata": {
        "LoC": 12
      }
    },
    "1287": {
      "URI": "//nose/nose.plugins.doctests/Doctest.matches()",
      "metadata": {
        "LoC": 13
      }
    },
    "1288": {
      "URI": "//nose/nose.plugins.doctests/Doctest.wantFile()",
      "metadata": {
        "LoC": 15
      }
    },
    "1289": {
      "URI": "//nose/nose.plugins.doctests/DocTestCase",
      "metadata": {
        "LoC": 18
      }
    },
    "1290": {
      "URI": "//nose/nose.plugins.doctests/DocTestCase.__init__()",
      "metadata": {
        "LoC": 7
      }
    },
    "1291": {
      "URI": "//nose/nose.plugins.doctests/DocTestCase.address()",
      "metadata": {
        "LoC": 17
      }
    },
    "1292": {
      "URI": "//nose/nose.plugins.doctests/DocTestCase.id()",
      "metadata": {
        "LoC": 10
      }
    },
    "1293": {
      "URI": "//nose/nose.plugins.doctests/DocTestCase.__repr__()",
      "metadata": {
        "LoC": 4
      }
    },
    "1294": {
      "URI": "//nose/nose.plugins.doctests/DocTestCase.shortDescription()",
      "metadata": {
        "LoC": 2
      }
    },
    "1295": {
      "URI": "//nose/nose.plugins.doctests/DocTestCase.setUp()",
      "metadata": {
        "LoC": 5
      }
    },
    "1296": {
      "URI": "//nose/nose.plugins.doctests/DocTestCase._displayhook()",
      "metadata": {
        "LoC": 5
      }
    },
    "1297": {
      "URI": "//nose/nose.plugins.doctests/DocTestCase.tearDown()",
      "metadata": {
        "LoC": 5
      }
    },
    "1298": {
      "URI": "//nose/nose.plugins.doctests/DocFileCase",
      "metadata": {
        "LoC": 8
      }
    },
    "1299": {
      "URI": "//nose/nose.plugins.doctests/DocFileCase.__init__()",
      "metadata": {
        "LoC": 6
      }
    },
    "1300": {
      "URI": "//nose/nose.plugins.doctests/DocFileCase.address()",
      "metadata": {
        "LoC": 2
      }
    },
    "1301": {
      "URI": "//nose/nose.plugins.doctests/DocFileCase.setUp()",
      "metadata": {
        "LoC": 5
      }
    },
    "1302": {
      "URI": "//nose/nose.plugins.doctests/DocFileCase._displayhook()",
      "metadata": {
        "LoC": 5
      }
    },
    "1303": {
      "URI": "//nose/nose.plugins.doctests/DocFileCase.tearDown()",
      "metadata": {
        "LoC": 5
      }
    },
    "1304": {
      "URI": "//nose/nose.plugins.prof/",
      "metadata": {
        "LoC": 154
      }
    },
    "1305": {
      "URI": "//nose/nose.plugins.prof/Profile",
      "metadata": {
        "LoC": 15
      }
    },
    "1306": {
      "URI": "//nose/nose.plugins.prof/Profile.options()",
      "metadata": {
        "LoC": 21
      }
    },
    "1307": {
      "URI": "//nose/nose.plugins.prof/Profile.available()",
      "metadata": {
        "LoC": 2
      }
    },
    "1308": {
      "URI": "//nose/nose.plugins.prof/Profile.begin()",
      "metadata": {
        "LoC": 7
      }
    },
    "1309": {
      "URI": "//nose/nose.plugins.prof/Profile.configure()",
      "metadata": {
        "LoC": 17
      }
    },
    "1310": {
      "URI": "//nose/nose.plugins.prof/Profile.prepareTest()",
      "metadata": {
        "LoC": 7
      }
    },
    "1311": {
      "URI": "//nose/nose.plugins.prof/Profile.prepareTest.run_and_profile()",
      "metadata": {
        "LoC": 3
      }
    },
    "1312": {
      "URI": "//nose/nose.plugins.prof/Profile.report()",
      "metadata": {
        "LoC": 29
      }
    },
    "1313": {
      "URI": "//nose/nose.plugins.prof/Profile.finalize()",
      "metadata": {
        "LoC": 23
      }
    },
    "1314": {
      "URI": "//nose/nose.plugins.prof/Profile._create_pfile()",
      "metadata": {
        "LoC": 4
      }
    },
    "1315": {
      "URI": "//nose/nose.plugins.failuredetail/",
      "metadata": {
        "LoC": 49
      }
    },
    "1316": {
      "URI": "//nose/nose.plugins.failuredetail/FailureDetail",
      "metadata": {
        "LoC": 10
      }
    },
    "1317": {
      "URI": "//nose/nose.plugins.failuredetail/FailureDetail.options()",
      "metadata": {
        "LoC": 8
      }
    },
    "1318": {
      "URI": "//nose/nose.plugins.failuredetail/FailureDetail.configure()",
      "metadata": {
        "LoC": 7
      }
    },
    "1319": {
      "URI": "//nose/nose.plugins.failuredetail/FailureDetail.formatFailure()",
      "metadata": {
        "LoC": 11
      }
    },
    "1320": {
      "URI": "//nose/nose.plugins.multiprocess/",
      "metadata": {
        "LoC": 835
      }
    },
    "1321": {
      "URI": "//nose/nose.plugins.multiprocess/TimedOutException",
      "metadata": {
        "LoC": 1
      }
    },
    "1322": {
      "URI": "//nose/nose.plugins.multiprocess/TimedOutException.__init__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1323": {
      "URI": "//nose/nose.plugins.multiprocess/TimedOutException.__str__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1324": {
      "URI": "//nose/nose.plugins.multiprocess/_import_mp()",
      "metadata": {
        "LoC": 20
      }
    },
    "1325": {
      "URI": "//nose/nose.plugins.multiprocess/TestLet",
      "metadata": {
        "LoC": 4
      }
    },
    "1326": {
      "URI": "//nose/nose.plugins.multiprocess/TestLet.__init__()",
      "metadata": {
        "LoC": 7
      }
    },
    "1327": {
      "URI": "//nose/nose.plugins.multiprocess/TestLet.id()",
      "metadata": {
        "LoC": 2
      }
    },
    "1328": {
      "URI": "//nose/nose.plugins.multiprocess/TestLet.shortDescription()",
      "metadata": {
        "LoC": 2
      }
    },
    "1329": {
      "URI": "//nose/nose.plugins.multiprocess/TestLet.__str__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1330": {
      "URI": "//nose/nose.plugins.multiprocess/MultiProcess",
      "metadata": {
        "LoC": 13
      }
    },
    "1331": {
      "URI": "//nose/nose.plugins.multiprocess/MultiProcess.options()",
      "metadata": {
        "LoC": 28
      }
    },
    "1332": {
      "URI": "//nose/nose.plugins.multiprocess/MultiProcess.configure()",
      "metadata": {
        "LoC": 40
      }
    },
    "1333": {
      "URI": "//nose/nose.plugins.multiprocess/MultiProcess.prepareTestLoader()",
      "metadata": {
        "LoC": 5
      }
    },
    "1334": {
      "URI": "//nose/nose.plugins.multiprocess/MultiProcess.prepareTestRunner()",
      "metadata": {
        "LoC": 8
      }
    },
    "1335": {
      "URI": "//nose/nose.plugins.multiprocess/signalhandler()",
      "metadata": {
        "LoC": 2
      }
    },
    "1336": {
      "URI": "//nose/nose.plugins.multiprocess/MultiProcessTestRunner",
      "metadata": {
        "LoC": 15
      }
    },
    "1337": {
      "URI": "//nose/nose.plugins.multiprocess/MultiProcessTestRunner.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1338": {
      "URI": "//nose/nose.plugins.multiprocess/MultiProcessTestRunner.collect()",
      "metadata": {
        "LoC": 39
      }
    },
    "1339": {
      "URI": "//nose/nose.plugins.multiprocess/MultiProcessTestRunner.startProcess()",
      "metadata": {
        "LoC": 21
      }
    },
    "1340": {
      "URI": "//nose/nose.plugins.multiprocess/MultiProcessTestRunner.run()",
      "metadata": {
        "LoC": 181
      }
    },
    "1341": {
      "URI": "//nose/nose.plugins.multiprocess/MultiProcessTestRunner.addtask()",
      "metadata": {
        "LoC": 14
      }
    },
    "1342": {
      "URI": "//nose/nose.plugins.multiprocess/MultiProcessTestRunner.address()",
      "metadata": {
        "LoC": 23
      }
    },
    "1343": {
      "URI": "//nose/nose.plugins.multiprocess/MultiProcessTestRunner.nextBatch()",
      "metadata": {
        "LoC": 31
      }
    },
    "1344": {
      "URI": "//nose/nose.plugins.multiprocess/MultiProcessTestRunner.checkCanSplit()",
      "metadata": {
        "LoC": 14
      }
    },
    "1345": {
      "URI": "//nose/nose.plugins.multiprocess/MultiProcessTestRunner.sharedFixtures()",
      "metadata": {
        "LoC": 5
      }
    },
    "1346": {
      "URI": "//nose/nose.plugins.multiprocess/MultiProcessTestRunner.consolidate()",
      "metadata": {
        "LoC": 21
      }
    },
    "1347": {
      "URI": "//nose/nose.plugins.multiprocess/runner()",
      "metadata": {
        "LoC": 10
      }
    },
    "1348": {
      "URI": "//nose/nose.plugins.multiprocess/__runner()",
      "metadata": {
        "LoC": 71
      }
    },
    "1349": {
      "URI": "//nose/nose.plugins.multiprocess/__runner.get()",
      "metadata": {
        "LoC": 2
      }
    },
    "1350": {
      "URI": "//nose/nose.plugins.multiprocess/__runner.makeResult()",
      "metadata": {
        "LoC": 9
      }
    },
    "1351": {
      "URI": "//nose/nose.plugins.multiprocess/__runner.batch()",
      "metadata": {
        "LoC": 13
      }
    },
    "1352": {
      "URI": "//nose/nose.plugins.multiprocess/NoSharedFixtureContextSuite",
      "metadata": {
        "LoC": 13
      }
    },
    "1353": {
      "URI": "//nose/nose.plugins.multiprocess/NoSharedFixtureContextSuite.setupContext()",
      "metadata": {
        "LoC": 4
      }
    },
    "1354": {
      "URI": "//nose/nose.plugins.multiprocess/NoSharedFixtureContextSuite.teardownContext()",
      "metadata": {
        "LoC": 4
      }
    },
    "1355": {
      "URI": "//nose/nose.plugins.multiprocess/NoSharedFixtureContextSuite.run()",
      "metadata": {
        "LoC": 60
      }
    },
    "1356": {
      "URI": "//nose/nose.plugins.xunit/",
      "metadata": {
        "LoC": 341
      }
    },
    "1357": {
      "URI": "//nose/nose.plugins.xunit/xml_safe()",
      "metadata": {
        "LoC": 3
      }
    },
    "1358": {
      "URI": "//nose/nose.plugins.xunit/escape_cdata()",
      "metadata": {
        "LoC": 3
      }
    },
    "1359": {
      "URI": "//nose/nose.plugins.xunit/id_split()",
      "metadata": {
        "LoC": 8
      }
    },
    "1360": {
      "URI": "//nose/nose.plugins.xunit/nice_classname()",
      "metadata": {
        "LoC": 22
      }
    },
    "1361": {
      "URI": "//nose/nose.plugins.xunit/exc_message()",
      "metadata": {
        "LoC": 18
      }
    },
    "1362": {
      "URI": "//nose/nose.plugins.xunit/Tee",
      "metadata": {
        "LoC": 5
      }
    },
    "1363": {
      "URI": "//nose/nose.plugins.xunit/Tee.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1364": {
      "URI": "//nose/nose.plugins.xunit/Tee.write()",
      "metadata": {
        "LoC": 4
      }
    },
    "1365": {
      "URI": "//nose/nose.plugins.xunit/Tee.writelines()",
      "metadata": {
        "LoC": 3
      }
    },
    "1366": {
      "URI": "//nose/nose.plugins.xunit/Tee.flush()",
      "metadata": {
        "LoC": 3
      }
    },
    "1367": {
      "URI": "//nose/nose.plugins.xunit/Tee.isatty()",
      "metadata": {
        "LoC": 2
      }
    },
    "1368": {
      "URI": "//nose/nose.plugins.xunit/Xunit",
      "metadata": {
        "LoC": 27
      }
    },
    "1369": {
      "URI": "//nose/nose.plugins.xunit/Xunit.__init__()",
      "metadata": {
        "LoC": 5
      }
    },
    "1370": {
      "URI": "//nose/nose.plugins.xunit/Xunit._timeTaken()",
      "metadata": {
        "LoC": 9
      }
    },
    "1371": {
      "URI": "//nose/nose.plugins.xunit/Xunit._quoteattr()",
      "metadata": {
        "LoC": 4
      }
    },
    "1372": {
      "URI": "//nose/nose.plugins.xunit/Xunit.options()",
      "metadata": {
        "LoC": 16
      }
    },
    "1373": {
      "URI": "//nose/nose.plugins.xunit/Xunit.configure()",
      "metadata": {
        "LoC": 13
      }
    },
    "1374": {
      "URI": "//nose/nose.plugins.xunit/Xunit.report()",
      "metadata": {
        "LoC": 24
      }
    },
    "1375": {
      "URI": "//nose/nose.plugins.xunit/Xunit._startCapture()",
      "metadata": {
        "LoC": 6
      }
    },
    "1376": {
      "URI": "//nose/nose.plugins.xunit/Xunit.startContext()",
      "metadata": {
        "LoC": 2
      }
    },
    "1377": {
      "URI": "//nose/nose.plugins.xunit/Xunit.stopContext()",
      "metadata": {
        "LoC": 2
      }
    },
    "1378": {
      "URI": "//nose/nose.plugins.xunit/Xunit.beforeTest()",
      "metadata": {
        "LoC": 4
      }
    },
    "1379": {
      "URI": "//nose/nose.plugins.xunit/Xunit._endCapture()",
      "metadata": {
        "LoC": 3
      }
    },
    "1380": {
      "URI": "//nose/nose.plugins.xunit/Xunit.afterTest()",
      "metadata": {
        "LoC": 4
      }
    },
    "1381": {
      "URI": "//nose/nose.plugins.xunit/Xunit.finalize()",
      "metadata": {
        "LoC": 3
      }
    },
    "1382": {
      "URI": "//nose/nose.plugins.xunit/Xunit._getCapturedStdout()",
      "metadata": {
        "LoC": 7
      }
    },
    "1383": {
      "URI": "//nose/nose.plugins.xunit/Xunit._getCapturedStderr()",
      "metadata": {
        "LoC": 7
      }
    },
    "1384": {
      "URI": "//nose/nose.plugins.xunit/Xunit.addError()",
      "metadata": {
        "LoC": 28
      }
    },
    "1385": {
      "URI": "//nose/nose.plugins.xunit/Xunit.addFailure()",
      "metadata": {
        "LoC": 20
      }
    },
    "1386": {
      "URI": "//nose/nose.plugins.xunit/Xunit.addSuccess()",
      "metadata": {
        "LoC": 14
      }
    },
    "1387": {
      "URI": "//nose/nose.plugins.attrib/",
      "metadata": {
        "LoC": 287
      }
    },
    "1388": {
      "URI": "//nose/nose.plugins.attrib/attr()",
      "metadata": {
        "LoC": 5
      }
    },
    "1389": {
      "URI": "//nose/nose.plugins.attrib/attr.wrap_ob()",
      "metadata": {
        "LoC": 6
      }
    },
    "1390": {
      "URI": "//nose/nose.plugins.attrib/get_method_attr()",
      "metadata": {
        "LoC": 12
      }
    },
    "1391": {
      "URI": "//nose/nose.plugins.attrib/ContextHelper",
      "metadata": {
        "LoC": 5
      }
    },
    "1392": {
      "URI": "//nose/nose.plugins.attrib/ContextHelper.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1393": {
      "URI": "//nose/nose.plugins.attrib/ContextHelper.__getitem__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1394": {
      "URI": "//nose/nose.plugins.attrib/AttributeSelector",
      "metadata": {
        "LoC": 11
      }
    },
    "1395": {
      "URI": "//nose/nose.plugins.attrib/AttributeSelector.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1396": {
      "URI": "//nose/nose.plugins.attrib/AttributeSelector.options()",
      "metadata": {
        "LoC": 14
      }
    },
    "1397": {
      "URI": "//nose/nose.plugins.attrib/AttributeSelector.configure()",
      "metadata": {
        "LoC": 50
      }
    },
    "1398": {
      "URI": "//nose/nose.plugins.attrib/AttributeSelector.configure.eval_in_context()",
      "metadata": {
        "LoC": 2
      }
    },
    "1399": {
      "URI": "//nose/nose.plugins.attrib/AttributeSelector.validateAttrib()",
      "metadata": {
        "LoC": 43
      }
    },
    "1400": {
      "URI": "//nose/nose.plugins.attrib/AttributeSelector.wantFunction()",
      "metadata": {
        "LoC": 4
      }
    },
    "1401": {
      "URI": "//nose/nose.plugins.attrib/AttributeSelector.wantMethod()",
      "metadata": {
        "LoC": 8
      }
    },
    "1402": {
      "URI": "//nose/nose.plugins.collect/",
      "metadata": {
        "LoC": 95
      }
    },
    "1403": {
      "URI": "//nose/nose.plugins.collect/CollectOnly",
      "metadata": {
        "LoC": 9
      }
    },
    "1404": {
      "URI": "//nose/nose.plugins.collect/CollectOnly.options()",
      "metadata": {
        "LoC": 9
      }
    },
    "1405": {
      "URI": "//nose/nose.plugins.collect/CollectOnly.prepareTestLoader()",
      "metadata": {
        "LoC": 6
      }
    },
    "1406": {
      "URI": "//nose/nose.plugins.collect/CollectOnly.prepareTestCase()",
      "metadata": {
        "LoC": 8
      }
    },
    "1407": {
      "URI": "//nose/nose.plugins.collect/CollectOnly.prepareTestCase.run()",
      "metadata": {
        "LoC": 9
      }
    },
    "1408": {
      "URI": "//nose/nose.plugins.collect/TestSuiteFactory",
      "metadata": {
        "LoC": 5
      }
    },
    "1409": {
      "URI": "//nose/nose.plugins.collect/TestSuiteFactory.__init__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1410": {
      "URI": "//nose/nose.plugins.collect/TestSuiteFactory.__call__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1411": {
      "URI": "//nose/nose.plugins.collect/TestSuite",
      "metadata": {
        "LoC": 6
      }
    },
    "1412": {
      "URI": "//nose/nose.plugins.collect/TestSuite.__init__()",
      "metadata": {
        "LoC": 7
      }
    },
    "1413": {
      "URI": "//nose/nose.plugins.collect/TestSuite.addTest()",
      "metadata": {
        "LoC": 6
      }
    },
    "1414": {
      "URI": "//urllib3/urllib3.poolmanager/",
      "metadata": {
        "LoC": 634
      }
    },
    "1415": {
      "URI": "//urllib3/urllib3.poolmanager/PoolKey",
      "metadata": {
        "LoC": 36
      }
    },
    "1416": {
      "URI": "//urllib3/urllib3.poolmanager/_default_key_normalizer()",
      "metadata": {
        "LoC": 53
      }
    },
    "1417": {
      "URI": "//urllib3/urllib3.poolmanager/PoolManager",
      "metadata": {
        "LoC": 50
      }
    },
    "1418": {
      "URI": "//urllib3/urllib3.poolmanager/PoolManager.__enter__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1419": {
      "URI": "//urllib3/urllib3.poolmanager/PoolManager.__exit__()",
      "metadata": {
        "LoC": 9
      }
    },
    "1420": {
      "URI": "//urllib3/urllib3.poolmanager/PoolManager._new_pool()",
      "metadata": {
        "LoC": 37
      }
    },
    "1421": {
      "URI": "//urllib3/urllib3.poolmanager/PoolManager.connection_from_host()",
      "metadata": {
        "LoC": 28
      }
    },
    "1422": {
      "URI": "//urllib3/urllib3.poolmanager/PoolManager.connection_from_context()",
      "metadata": {
        "LoC": 24
      }
    },
    "1423": {
      "URI": "//urllib3/urllib3.poolmanager/PoolManager.connection_from_pool_key()",
      "metadata": {
        "LoC": 25
      }
    },
    "1424": {
      "URI": "//urllib3/urllib3.poolmanager/PoolManager._merge_pool_kwargs()",
      "metadata": {
        "LoC": 21
      }
    },
    "1425": {
      "URI": "//urllib3/urllib3.poolmanager/PoolManager._proxy_requires_url_absolute_form()",
      "metadata": {
        "LoC": 11
      }
    },
    "1426": {
      "URI": "//urllib3/urllib3.poolmanager/PoolManager.urlopen()",
      "metadata": {
        "LoC": 78
      }
    },
    "1427": {
      "URI": "//urllib3/urllib3.poolmanager/ProxyManager",
      "metadata": {
        "LoC": 59
      }
    },
    "1428": {
      "URI": "//urllib3/urllib3.poolmanager/ProxyManager.__init__()",
      "metadata": {
        "LoC": 40
      }
    },
    "1429": {
      "URI": "//urllib3/urllib3.poolmanager/ProxyManager.connection_from_host()",
      "metadata": {
        "LoC": 14
      }
    },
    "1430": {
      "URI": "//urllib3/urllib3.poolmanager/ProxyManager._set_proxy_headers()",
      "metadata": {
        "LoC": 16
      }
    },
    "1431": {
      "URI": "//urllib3/urllib3.poolmanager/ProxyManager.urlopen()",
      "metadata": {
        "LoC": 13
      }
    },
    "1432": {
      "URI": "//urllib3/urllib3._request_methods/",
      "metadata": {
        "LoC": 217
      }
    },
    "1433": {
      "URI": "//urllib3/urllib3._request_methods/RequestMethods",
      "metadata": {
        "LoC": 38
      }
    },
    "1434": {
      "URI": "//urllib3/urllib3._request_methods/RequestMethods.__init__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1435": {
      "URI": "//urllib3/urllib3._request_methods/RequestMethods.urlopen()",
      "metadata": {
        "LoC": 12
      }
    },
    "1436": {
      "URI": "//urllib3/urllib3._request_methods/RequestMethods.request()",
      "metadata": {
        "LoC": 51
      }
    },
    "1437": {
      "URI": "//urllib3/urllib3._request_methods/RequestMethods.request_encode_url()",
      "metadata": {
        "LoC": 22
      }
    },
    "1438": {
      "URI": "//urllib3/urllib3._request_methods/RequestMethods.request_encode_body()",
      "metadata": {
        "LoC": 73
      }
    },
    "1439": {
      "URI": "//urllib3/urllib3._base_connection/",
      "metadata": {
        "LoC": 173
      }
    },
    "1440": {
      "URI": "//urllib3/urllib3._base_connection/ProxyConfig",
      "metadata": {
        "LoC": 5
      }
    },
    "1441": {
      "URI": "//urllib3/urllib3._base_connection/_ResponseOptions",
      "metadata": {
        "LoC": 8
      }
    },
    "1442": {
      "URI": "//urllib3/urllib3._base_connection/BaseHTTPConnection",
      "metadata": {
        "LoC": 33
      }
    },
    "1443": {
      "URI": "//urllib3/urllib3._base_connection/BaseHTTPConnection.__init__()",
      "metadata": {
        "LoC": 13
      }
    },
    "1444": {
      "URI": "//urllib3/urllib3._base_connection/BaseHTTPConnection.set_tunnel()",
      "metadata": {
        "LoC": 8
      }
    },
    "1445": {
      "URI": "//urllib3/urllib3._base_connection/BaseHTTPConnection.connect()",
      "metadata": {
        "LoC": 2
      }
    },
    "1446": {
      "URI": "//urllib3/urllib3._base_connection/BaseHTTPConnection.request()",
      "metadata": {
        "LoC": 16
      }
    },
    "1447": {
      "URI": "//urllib3/urllib3._base_connection/BaseHTTPConnection.getresponse()",
      "metadata": {
        "LoC": 2
      }
    },
    "1448": {
      "URI": "//urllib3/urllib3._base_connection/BaseHTTPConnection.close()",
      "metadata": {
        "LoC": 2
      }
    },
    "1449": {
      "URI": "//urllib3/urllib3._base_connection/BaseHTTPConnection.is_closed()",
      "metadata": {
        "LoC": 2
      }
    },
    "1450": {
      "URI": "//urllib3/urllib3._base_connection/BaseHTTPConnection.is_connected()",
      "metadata": {
        "LoC": 2
      }
    },
    "1451": {
      "URI": "//urllib3/urllib3._base_connection/BaseHTTPConnection.has_connected_to_proxy()",
      "metadata": {
        "LoC": 2
      }
    },
    "1452": {
      "URI": "//urllib3/urllib3._base_connection/BaseHTTPSConnection",
      "metadata": {
        "LoC": 25
      }
    },
    "1453": {
      "URI": "//urllib3/urllib3._base_connection/BaseHTTPSConnection.__init__()",
      "metadata": {
        "LoC": 27
      }
    },
    "1454": {
      "URI": "//urllib3/urllib3.util.connection/",
      "metadata": {
        "LoC": 137
      }
    },
    "1455": {
      "URI": "//urllib3/urllib3.util.connection/is_connection_dropped()",
      "metadata": {
        "LoC": 6
      }
    },
    "1456": {
      "URI": "//urllib3/urllib3.util.connection/create_connection()",
      "metadata": {
        "LoC": 64
      }
    },
    "1457": {
      "URI": "//urllib3/urllib3.util.connection/_set_socket_options()",
      "metadata": {
        "LoC": 8
      }
    },
    "1458": {
      "URI": "//urllib3/urllib3.util.connection/allowed_gai_family()",
      "metadata": {
        "LoC": 9
      }
    },
    "1459": {
      "URI": "//urllib3/urllib3.util.connection/_has_ipv6()",
      "metadata": {
        "LoC": 21
      }
    },
    "1460": {
      "URI": "//urllib3/urllib3.exceptions/",
      "metadata": {
        "LoC": 318
      }
    },
    "1461": {
      "URI": "//urllib3/urllib3.exceptions/HTTPError",
      "metadata": {
        "LoC": 2
      }
    },
    "1462": {
      "URI": "//urllib3/urllib3.exceptions/HTTPWarning",
      "metadata": {
        "LoC": 2
      }
    },
    "1463": {
      "URI": "//urllib3/urllib3.exceptions/PoolError",
      "metadata": {
        "LoC": 4
      }
    },
    "1464": {
      "URI": "//urllib3/urllib3.exceptions/PoolError.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1465": {
      "URI": "//urllib3/urllib3.exceptions/PoolError.__reduce__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1466": {
      "URI": "//urllib3/urllib3.exceptions/RequestError",
      "metadata": {
        "LoC": 4
      }
    },
    "1467": {
      "URI": "//urllib3/urllib3.exceptions/RequestError.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1468": {
      "URI": "//urllib3/urllib3.exceptions/RequestError.__reduce__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1469": {
      "URI": "//urllib3/urllib3.exceptions/SSLError",
      "metadata": {
        "LoC": 2
      }
    },
    "1470": {
      "URI": "//urllib3/urllib3.exceptions/ProxyError",
      "metadata": {
        "LoC": 6
      }
    },
    "1471": {
      "URI": "//urllib3/urllib3.exceptions/ProxyError.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1472": {
      "URI": "//urllib3/urllib3.exceptions/DecodeError",
      "metadata": {
        "LoC": 2
      }
    },
    "1473": {
      "URI": "//urllib3/urllib3.exceptions/ProtocolError",
      "metadata": {
        "LoC": 2
      }
    },
    "1474": {
      "URI": "//urllib3/urllib3.exceptions/MaxRetryError",
      "metadata": {
        "LoC": 11
      }
    },
    "1475": {
      "URI": "//urllib3/urllib3.exceptions/MaxRetryError.__init__()",
      "metadata": {
        "LoC": 8
      }
    },
    "1476": {
      "URI": "//urllib3/urllib3.exceptions/HostChangedError",
      "metadata": {
        "LoC": 3
      }
    },
    "1477": {
      "URI": "//urllib3/urllib3.exceptions/HostChangedError.__init__()",
      "metadata": {
        "LoC": 6
      }
    },
    "1478": {
      "URI": "//urllib3/urllib3.exceptions/TimeoutStateError",
      "metadata": {
        "LoC": 2
      }
    },
    "1479": {
      "URI": "//urllib3/urllib3.exceptions/TimeoutError",
      "metadata": {
        "LoC": 2
      }
    },
    "1480": {
      "URI": "//urllib3/urllib3.exceptions/ReadTimeoutError",
      "metadata": {
        "LoC": 2
      }
    },
    "1481": {
      "URI": "//urllib3/urllib3.exceptions/ConnectTimeoutError",
      "metadata": {
        "LoC": 2
      }
    },
    "1482": {
      "URI": "//urllib3/urllib3.exceptions/NewConnectionError",
      "metadata": {
        "LoC": 5
      }
    },
    "1483": {
      "URI": "//urllib3/urllib3.exceptions/NewConnectionError.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1484": {
      "URI": "//urllib3/urllib3.exceptions/NewConnectionError.pool()",
      "metadata": {
        "LoC": 9
      }
    },
    "1485": {
      "URI": "//urllib3/urllib3.exceptions/NameResolutionError",
      "metadata": {
        "LoC": 3
      }
    },
    "1486": {
      "URI": "//urllib3/urllib3.exceptions/NameResolutionError.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1487": {
      "URI": "//urllib3/urllib3.exceptions/EmptyPoolError",
      "metadata": {
        "LoC": 2
      }
    },
    "1488": {
      "URI": "//urllib3/urllib3.exceptions/FullPoolError",
      "metadata": {
        "LoC": 2
      }
    },
    "1489": {
      "URI": "//urllib3/urllib3.exceptions/ClosedPoolError",
      "metadata": {
        "LoC": 2
      }
    },
    "1490": {
      "URI": "//urllib3/urllib3.exceptions/LocationValueError",
      "metadata": {
        "LoC": 2
      }
    },
    "1491": {
      "URI": "//urllib3/urllib3.exceptions/LocationParseError",
      "metadata": {
        "LoC": 3
      }
    },
    "1492": {
      "URI": "//urllib3/urllib3.exceptions/LocationParseError.__init__()",
      "metadata": {
        "LoC": 5
      }
    },
    "1493": {
      "URI": "//urllib3/urllib3.exceptions/URLSchemeUnknown",
      "metadata": {
        "LoC": 3
      }
    },
    "1494": {
      "URI": "//urllib3/urllib3.exceptions/URLSchemeUnknown.__init__()",
      "metadata": {
        "LoC": 5
      }
    },
    "1495": {
      "URI": "//urllib3/urllib3.exceptions/ResponseError",
      "metadata": {
        "LoC": 5
      }
    },
    "1496": {
      "URI": "//urllib3/urllib3.exceptions/SecurityWarning",
      "metadata": {
        "LoC": 2
      }
    },
    "1497": {
      "URI": "//urllib3/urllib3.exceptions/InsecureRequestWarning",
      "metadata": {
        "LoC": 2
      }
    },
    "1498": {
      "URI": "//urllib3/urllib3.exceptions/NotOpenSSLWarning",
      "metadata": {
        "LoC": 2
      }
    },
    "1499": {
      "URI": "//urllib3/urllib3.exceptions/SystemTimeWarning",
      "metadata": {
        "LoC": 2
      }
    },
    "1500": {
      "URI": "//urllib3/urllib3.exceptions/InsecurePlatformWarning",
      "metadata": {
        "LoC": 2
      }
    },
    "1501": {
      "URI": "//urllib3/urllib3.exceptions/DependencyWarning",
      "metadata": {
        "LoC": 2
      }
    },
    "1502": {
      "URI": "//urllib3/urllib3.exceptions/ResponseNotChunked",
      "metadata": {
        "LoC": 2
      }
    },
    "1503": {
      "URI": "//urllib3/urllib3.exceptions/BodyNotHttplibCompatible",
      "metadata": {
        "LoC": 2
      }
    },
    "1504": {
      "URI": "//urllib3/urllib3.exceptions/IncompleteRead",
      "metadata": {
        "LoC": 9
      }
    },
    "1505": {
      "URI": "//urllib3/urllib3.exceptions/IncompleteRead.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1506": {
      "URI": "//urllib3/urllib3.exceptions/IncompleteRead.__repr__()",
      "metadata": {
        "LoC": 4
      }
    },
    "1507": {
      "URI": "//urllib3/urllib3.exceptions/InvalidChunkLength",
      "metadata": {
        "LoC": 4
      }
    },
    "1508": {
      "URI": "//urllib3/urllib3.exceptions/InvalidChunkLength.__init__()",
      "metadata": {
        "LoC": 5
      }
    },
    "1509": {
      "URI": "//urllib3/urllib3.exceptions/InvalidChunkLength.__repr__()",
      "metadata": {
        "LoC": 4
      }
    },
    "1510": {
      "URI": "//urllib3/urllib3.exceptions/InvalidHeader",
      "metadata": {
        "LoC": 2
      }
    },
    "1511": {
      "URI": "//urllib3/urllib3.exceptions/ProxySchemeUnknown",
      "metadata": {
        "LoC": 5
      }
    },
    "1512": {
      "URI": "//urllib3/urllib3.exceptions/ProxySchemeUnknown.__init__()",
      "metadata": {
        "LoC": 10
      }
    },
    "1513": {
      "URI": "//urllib3/urllib3.exceptions/ProxySchemeUnsupported",
      "metadata": {
        "LoC": 2
      }
    },
    "1514": {
      "URI": "//urllib3/urllib3.exceptions/HeaderParsingError",
      "metadata": {
        "LoC": 3
      }
    },
    "1515": {
      "URI": "//urllib3/urllib3.exceptions/HeaderParsingError.__init__()",
      "metadata": {
        "LoC": 5
      }
    },
    "1516": {
      "URI": "//urllib3/urllib3.exceptions/UnrewindableBodyError",
      "metadata": {
        "LoC": 2
      }
    },
    "1517": {
      "URI": "//urllib3/urllib3.connection/",
      "metadata": {
        "LoC": 899
      }
    },
    "1518": {
      "URI": "//urllib3/urllib3.connection/BaseSSLError",
      "metadata": {
        "LoC": 2
      }
    },
    "1519": {
      "URI": "//urllib3/urllib3.connection/HTTPConnection",
      "metadata": {
        "LoC": 86
      }
    },
    "1520": {
      "URI": "//urllib3/urllib3.connection/HTTPConnection.__init__()",
      "metadata": {
        "LoC": 29
      }
    },
    "1521": {
      "URI": "//urllib3/urllib3.connection/HTTPConnection.host()",
      "metadata": {
        "LoC": 17
      }
    },
    "1522": {
      "URI": "//urllib3/urllib3.connection/HTTPConnection._new_conn()",
      "metadata": {
        "LoC": 26
      }
    },
    "1523": {
      "URI": "//urllib3/urllib3.connection/HTTPConnection.set_tunnel()",
      "metadata": {
        "LoC": 13
      }
    },
    "1524": {
      "URI": "//urllib3/urllib3.connection/HTTPConnection.connect()",
      "metadata": {
        "LoC": 13
      }
    },
    "1525": {
      "URI": "//urllib3/urllib3.connection/HTTPConnection.is_closed()",
      "metadata": {
        "LoC": 2
      }
    },
    "1526": {
      "URI": "//urllib3/urllib3.connection/HTTPConnection.is_connected()",
      "metadata": {
        "LoC": 4
      }
    },
    "1527": {
      "URI": "//urllib3/urllib3.connection/HTTPConnection.has_connected_to_proxy()",
      "metadata": {
        "LoC": 2
      }
    },
    "1528": {
      "URI": "//urllib3/urllib3.connection/HTTPConnection.close()",
      "metadata": {
        "LoC": 14
      }
    },
    "1529": {
      "URI": "//urllib3/urllib3.connection/HTTPConnection.putrequest()",
      "metadata": {
        "LoC": 18
      }
    },
    "1530": {
      "URI": "//urllib3/urllib3.connection/HTTPConnection.putheader()",
      "metadata": {
        "LoC": 10
      }
    },
    "1531": {
      "URI": "//urllib3/urllib3.connection/HTTPConnection.request()",
      "metadata": {
        "LoC": 96
      }
    },
    "1532": {
      "URI": "//urllib3/urllib3.connection/HTTPConnection.request_chunked()",
      "metadata": {
        "LoC": 18
      }
    },
    "1533": {
      "URI": "//urllib3/urllib3.connection/HTTPConnection.getresponse()",
      "metadata": {
        "LoC": 54
      }
    },
    "1534": {
      "URI": "//urllib3/urllib3.connection/HTTPSConnection",
      "metadata": {
        "LoC": 20
      }
    },
    "1535": {
      "URI": "//urllib3/urllib3.connection/HTTPSConnection.__init__()",
      "metadata": {
        "LoC": 59
      }
    },
    "1536": {
      "URI": "//urllib3/urllib3.connection/HTTPSConnection.set_cert()",
      "metadata": {
        "LoC": 40
      }
    },
    "1537": {
      "URI": "//urllib3/urllib3.connection/HTTPSConnection.connect()",
      "metadata": {
        "LoC": 58
      }
    },
    "1538": {
      "URI": "//urllib3/urllib3.connection/HTTPSConnection._connect_tls_proxy()",
      "metadata": {
        "LoC": 28
      }
    },
    "1539": {
      "URI": "//urllib3/urllib3.connection/_WrappedAndVerifiedSocket",
      "metadata": {
        "LoC": 8
      }
    },
    "1540": {
      "URI": "//urllib3/urllib3.connection/_ssl_wrap_socket_and_match_hostname()",
      "metadata": {
        "LoC": 124
      }
    },
    "1541": {
      "URI": "//urllib3/urllib3.connection/_match_hostname()",
      "metadata": {
        "LoC": 24
      }
    },
    "1542": {
      "URI": "//urllib3/urllib3.connection/_wrap_proxy_error()",
      "metadata": {
        "LoC": 22
      }
    },
    "1543": {
      "URI": "//urllib3/urllib3.connection/_get_default_user_agent()",
      "metadata": {
        "LoC": 2
      }
    },
    "1544": {
      "URI": "//urllib3/urllib3.connection/DummyConnection",
      "metadata": {
        "LoC": 2
      }
    },
    "1545": {
      "URI": "//urllib3/urllib3.connection/_url_from_connection()",
      "metadata": {
        "LoC": 8
      }
    },
    "1546": {
      "URI": "//urllib3/urllib3.response/",
      "metadata": {
        "LoC": 1136
      }
    },
    "1547": {
      "URI": "//urllib3/urllib3.response/ContentDecoder",
      "metadata": {
        "LoC": 2
      }
    },
    "1548": {
      "URI": "//urllib3/urllib3.response/ContentDecoder.decompress()",
      "metadata": {
        "LoC": 2
      }
    },
    "1549": {
      "URI": "//urllib3/urllib3.response/ContentDecoder.flush()",
      "metadata": {
        "LoC": 2
      }
    },
    "1550": {
      "URI": "//urllib3/urllib3.response/DeflateDecoder",
      "metadata": {
        "LoC": 3
      }
    },
    "1551": {
      "URI": "//urllib3/urllib3.response/DeflateDecoder.__init__()",
      "metadata": {
        "LoC": 4
      }
    },
    "1552": {
      "URI": "//urllib3/urllib3.response/DeflateDecoder.decompress()",
      "metadata": {
        "LoC": 21
      }
    },
    "1553": {
      "URI": "//urllib3/urllib3.response/DeflateDecoder.flush()",
      "metadata": {
        "LoC": 2
      }
    },
    "1554": {
      "URI": "//urllib3/urllib3.response/GzipDecoderState",
      "metadata": {
        "LoC": 4
      }
    },
    "1555": {
      "URI": "//urllib3/urllib3.response/GzipDecoder",
      "metadata": {
        "LoC": 3
      }
    },
    "1556": {
      "URI": "//urllib3/urllib3.response/GzipDecoder.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1557": {
      "URI": "//urllib3/urllib3.response/GzipDecoder.decompress()",
      "metadata": {
        "LoC": 20
      }
    },
    "1558": {
      "URI": "//urllib3/urllib3.response/GzipDecoder.flush()",
      "metadata": {
        "LoC": 2
      }
    },
    "1559": {
      "URI": "//urllib3/urllib3.response/BrotliDecoder",
      "metadata": {
        "LoC": 5
      }
    },
    "1560": {
      "URI": "//urllib3/urllib3.response/BrotliDecoder.__init__()",
      "metadata": {
        "LoC": 6
      }
    },
    "1561": {
      "URI": "//urllib3/urllib3.response/BrotliDecoder.flush()",
      "metadata": {
        "LoC": 4
      }
    },
    "1562": {
      "URI": "//urllib3/urllib3.response/ZstdDecoder",
      "metadata": {
        "LoC": 3
      }
    },
    "1563": {
      "URI": "//urllib3/urllib3.response/ZstdDecoder.__init__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1564": {
      "URI": "//urllib3/urllib3.response/ZstdDecoder.decompress()",
      "metadata": {
        "LoC": 9
      }
    },
    "1565": {
      "URI": "//urllib3/urllib3.response/ZstdDecoder.flush()",
      "metadata": {
        "LoC": 5
      }
    },
    "1566": {
      "URI": "//urllib3/urllib3.response/MultiDecoder",
      "metadata": {
        "LoC": 11
      }
    },
    "1567": {
      "URI": "//urllib3/urllib3.response/MultiDecoder.__init__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1568": {
      "URI": "//urllib3/urllib3.response/MultiDecoder.flush()",
      "metadata": {
        "LoC": 2
      }
    },
    "1569": {
      "URI": "//urllib3/urllib3.response/MultiDecoder.decompress()",
      "metadata": {
        "LoC": 4
      }
    },
    "1570": {
      "URI": "//urllib3/urllib3.response/_get_decoder()",
      "metadata": {
        "LoC": 14
      }
    },
    "1571": {
      "URI": "//urllib3/urllib3.response/BytesQueueBuffer",
      "metadata": {
        "LoC": 20
      }
    },
    "1572": {
      "URI": "//urllib3/urllib3.response/BytesQueueBuffer.__init__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1573": {
      "URI": "//urllib3/urllib3.response/BytesQueueBuffer.__len__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1574": {
      "URI": "//urllib3/urllib3.response/BytesQueueBuffer.put()",
      "metadata": {
        "LoC": 3
      }
    },
    "1575": {
      "URI": "//urllib3/urllib3.response/BytesQueueBuffer.get()",
      "metadata": {
        "LoC": 29
      }
    },
    "1576": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse",
      "metadata": {
        "LoC": 53
      }
    },
    "1577": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.__init__()",
      "metadata": {
        "LoC": 31
      }
    },
    "1578": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.get_redirect_location()",
      "metadata": {
        "LoC": 11
      }
    },
    "1579": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.data()",
      "metadata": {
        "LoC": 2
      }
    },
    "1580": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.json()",
      "metadata": {
        "LoC": 12
      }
    },
    "1581": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.url()",
      "metadata": {
        "LoC": 2
      }
    },
    "1582": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.connection()",
      "metadata": {
        "LoC": 2
      }
    },
    "1583": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.retries()",
      "metadata": {
        "LoC": 2
      }
    },
    "1584": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.stream()",
      "metadata": {
        "LoC": 4
      }
    },
    "1585": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.read()",
      "metadata": {
        "LoC": 7
      }
    },
    "1586": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.read_chunked()",
      "metadata": {
        "LoC": 6
      }
    },
    "1587": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.release_conn()",
      "metadata": {
        "LoC": 2
      }
    },
    "1588": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.drain_conn()",
      "metadata": {
        "LoC": 2
      }
    },
    "1589": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.close()",
      "metadata": {
        "LoC": 2
      }
    },
    "1590": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse._init_decoder()",
      "metadata": {
        "LoC": 18
      }
    },
    "1591": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse._decode()",
      "metadata": {
        "LoC": 29
      }
    },
    "1592": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse._flush_decoder()",
      "metadata": {
        "LoC": 8
      }
    },
    "1593": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.readinto()",
      "metadata": {
        "LoC": 7
      }
    },
    "1594": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.getheaders()",
      "metadata": {
        "LoC": 8
      }
    },
    "1595": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.getheader()",
      "metadata": {
        "LoC": 8
      }
    },
    "1596": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.info()",
      "metadata": {
        "LoC": 2
      }
    },
    "1597": {
      "URI": "//urllib3/urllib3.response/BaseHTTPResponse.geturl()",
      "metadata": {
        "LoC": 2
      }
    },
    "1598": {
      "URI": "//urllib3/urllib3.response/HTTPResponse",
      "metadata": {
        "LoC": 68
      }
    },
    "1599": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.__init__()",
      "metadata": {
        "LoC": 59
      }
    },
    "1600": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.release_conn()",
      "metadata": {
        "LoC": 6
      }
    },
    "1601": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.drain_conn()",
      "metadata": {
        "LoC": 10
      }
    },
    "1602": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.data()",
      "metadata": {
        "LoC": 9
      }
    },
    "1603": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.connection()",
      "metadata": {
        "LoC": 2
      }
    },
    "1604": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.isclosed()",
      "metadata": {
        "LoC": 2
      }
    },
    "1605": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.tell()",
      "metadata": {
        "LoC": 7
      }
    },
    "1606": {
      "URI": "//urllib3/urllib3.response/HTTPResponse._init_length()",
      "metadata": {
        "LoC": 55
      }
    },
    "1607": {
      "URI": "//urllib3/urllib3.response/HTTPResponse._error_catcher()",
      "metadata": {
        "LoC": 54
      }
    },
    "1608": {
      "URI": "//urllib3/urllib3.response/HTTPResponse._fp_read()",
      "metadata": {
        "LoC": 47
      }
    },
    "1609": {
      "URI": "//urllib3/urllib3.response/HTTPResponse._raw_read()",
      "metadata": {
        "LoC": 41
      }
    },
    "1610": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.read()",
      "metadata": {
        "LoC": 74
      }
    },
    "1611": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.stream()",
      "metadata": {
        "LoC": 26
      }
    },
    "1612": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.readable()",
      "metadata": {
        "LoC": 2
      }
    },
    "1613": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.close()",
      "metadata": {
        "LoC": 9
      }
    },
    "1614": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.closed()",
      "metadata": {
        "LoC": 11
      }
    },
    "1615": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.fileno()",
      "metadata": {
        "LoC": 8
      }
    },
    "1616": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.flush()",
      "metadata": {
        "LoC": 7
      }
    },
    "1617": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.supports_chunked_reads()",
      "metadata": {
        "LoC": 8
      }
    },
    "1618": {
      "URI": "//urllib3/urllib3.response/HTTPResponse._update_chunk_length()",
      "metadata": {
        "LoC": 13
      }
    },
    "1619": {
      "URI": "//urllib3/urllib3.response/HTTPResponse._handle_chunk()",
      "metadata": {
        "LoC": 21
      }
    },
    "1620": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.read_chunked()",
      "metadata": {
        "LoC": 71
      }
    },
    "1621": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.url()",
      "metadata": {
        "LoC": 7
      }
    },
    "1622": {
      "URI": "//urllib3/urllib3.response/HTTPResponse.__iter__()",
      "metadata": {
        "LoC": 16
      }
    },
    "1623": {
      "URI": "//urllib3/urllib3.util/",
      "metadata": {
        "LoC": 44
      }
    },
    "1624": {
      "URI": "//urllib3/urllib3.util.request/",
      "metadata": {
        "LoC": 256
      }
    },
    "1625": {
      "URI": "//urllib3/urllib3.util.request/_TYPE_FAILEDTELL",
      "metadata": {
        "LoC": 2
      }
    },
    "1626": {
      "URI": "//urllib3/urllib3.util.request/set_file_position()",
      "metadata": {
        "LoC": 18
      }
    },
    "1627": {
      "URI": "//urllib3/urllib3.util.request/rewind_body()",
      "metadata": {
        "LoC": 27
      }
    },
    "1628": {
      "URI": "//urllib3/urllib3.util.request/ChunksAndContentLength",
      "metadata": {
        "LoC": 3
      }
    },
    "1629": {
      "URI": "//urllib3/urllib3.util.request/body_to_chunks()",
      "metadata": {
        "LoC": 58
      }
    },
    "1630": {
      "URI": "//urllib3/urllib3.util.request/body_to_chunks.chunk_readable()",
      "metadata": {
        "LoC": 10
      }
    },
    "1631": {
      "URI": "//urllib3/urllib3.util.util/",
      "metadata": {
        "LoC": 42
      }
    },
    "1632": {
      "URI": "//urllib3/urllib3.util.util/to_bytes()",
      "metadata": {
        "LoC": 10
      }
    },
    "1633": {
      "URI": "//urllib3/urllib3.util.util/to_str()",
      "metadata": {
        "LoC": 10
      }
    },
    "1634": {
      "URI": "//urllib3/urllib3.util.util/reraise()",
      "metadata": {
        "LoC": 12
      }
    },
    "1635": {
      "URI": "//urllib3/urllib3.util.response/",
      "metadata": {
        "LoC": 101
      }
    },
    "1636": {
      "URI": "//urllib3/urllib3.util.response/is_fp_closed()",
      "metadata": {
        "LoC": 29
      }
    },
    "1637": {
      "URI": "//urllib3/urllib3.util.response/assert_header_parsing()",
      "metadata": {
        "LoC": 49
      }
    },
    "1638": {
      "URI": "//urllib3/urllib3.util.response/is_response_to_head()",
      "metadata": {
        "LoC": 11
      }
    },
    "1639": {
      "URI": "//urllib3/urllib3.util.retry/",
      "metadata": {
        "LoC": 529
      }
    },
    "1640": {
      "URI": "//urllib3/urllib3.util.retry/RequestHistory",
      "metadata": {
        "LoC": 6
      }
    },
    "1641": {
      "URI": "//urllib3/urllib3.util.retry/Retry",
      "metadata": {
        "LoC": 176
      }
    },
    "1642": {
      "URI": "//urllib3/urllib3.util.retry/Retry.new()",
      "metadata": {
        "LoC": 22
      }
    },
    "1643": {
      "URI": "//urllib3/urllib3.util.retry/Retry.get_backoff_time()",
      "metadata": {
        "LoC": 18
      }
    },
    "1644": {
      "URI": "//urllib3/urllib3.util.retry/Retry.parse_retry_after()",
      "metadata": {
        "LoC": 16
      }
    },
    "1645": {
      "URI": "//urllib3/urllib3.util.retry/Retry.get_retry_after()",
      "metadata": {
        "LoC": 9
      }
    },
    "1646": {
      "URI": "//urllib3/urllib3.util.retry/Retry.sleep_for_retry()",
      "metadata": {
        "LoC": 7
      }
    },
    "1647": {
      "URI": "//urllib3/urllib3.util.retry/Retry._sleep_backoff()",
      "metadata": {
        "LoC": 5
      }
    },
    "1648": {
      "URI": "//urllib3/urllib3.util.retry/Retry.sleep()",
      "metadata": {
        "LoC": 15
      }
    },
    "1649": {
      "URI": "//urllib3/urllib3.util.retry/Retry._is_connection_error()",
      "metadata": {
        "LoC": 7
      }
    },
    "1650": {
      "URI": "//urllib3/urllib3.util.retry/Retry._is_read_error()",
      "metadata": {
        "LoC": 5
      }
    },
    "1651": {
      "URI": "//urllib3/urllib3.util.retry/Retry._is_method_retryable()",
      "metadata": {
        "LoC": 7
      }
    },
    "1652": {
      "URI": "//urllib3/urllib3.util.retry/Retry.is_retry()",
      "metadata": {
        "LoC": 20
      }
    },
    "1653": {
      "URI": "//urllib3/urllib3.util.retry/Retry.is_exhausted()",
      "metadata": {
        "LoC": 18
      }
    },
    "1654": {
      "URI": "//urllib3/urllib3.util.retry/Retry.increment()",
      "metadata": {
        "LoC": 96
      }
    },
    "1655": {
      "URI": "//urllib3/urllib3.util.retry/Retry.__repr__()",
      "metadata": {
        "LoC": 4
      }
    },
    "1656": {
      "URI": "//urllib3/urllib3.connectionpool/",
      "metadata": {
        "LoC": 1178
      }
    },
    "1657": {
      "URI": "//urllib3/urllib3.connectionpool/ConnectionPool",
      "metadata": {
        "LoC": 18
      }
    },
    "1658": {
      "URI": "//urllib3/urllib3.connectionpool/ConnectionPool.__init__()",
      "metadata": {
        "LoC": 12
      }
    },
    "1659": {
      "URI": "//urllib3/urllib3.connectionpool/ConnectionPool.__str__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1660": {
      "URI": "//urllib3/urllib3.connectionpool/ConnectionPool.__enter__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1661": {
      "URI": "//urllib3/urllib3.connectionpool/ConnectionPool.__exit__()",
      "metadata": {
        "LoC": 9
      }
    },
    "1662": {
      "URI": "//urllib3/urllib3.connectionpool/ConnectionPool.close()",
      "metadata": {
        "LoC": 2
      }
    },
    "1663": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPConnectionPool",
      "metadata": {
        "LoC": 70
      }
    },
    "1664": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPConnectionPool.__init__()",
      "metadata": {
        "LoC": 60
      }
    },
    "1665": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPConnectionPool._new_conn()",
      "metadata": {
        "LoC": 19
      }
    },
    "1666": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPConnectionPool._get_conn()",
      "metadata": {
        "LoC": 37
      }
    },
    "1667": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPConnectionPool._put_conn()",
      "metadata": {
        "LoC": 42
      }
    },
    "1668": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPConnectionPool._validate_conn()",
      "metadata": {
        "LoC": 2
      }
    },
    "1669": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPConnectionPool._prepare_proxy()",
      "metadata": {
        "LoC": 3
      }
    },
    "1670": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPConnectionPool._get_timeout()",
      "metadata": {
        "LoC": 11
      }
    },
    "1671": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPConnectionPool._raise_timeout()",
      "metadata": {
        "LoC": 18
      }
    },
    "1672": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPConnectionPool._make_request()",
      "metadata": {
        "LoC": 180
      }
    },
    "1673": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPConnectionPool.close()",
      "metadata": {
        "LoC": 11
      }
    },
    "1674": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPConnectionPool.is_same_host()",
      "metadata": {
        "LoC": 21
      }
    },
    "1675": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPConnectionPool.urlopen()",
      "metadata": {
        "LoC": 365
      }
    },
    "1676": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPSConnectionPool",
      "metadata": {
        "LoC": 21
      }
    },
    "1677": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPSConnectionPool.__init__()",
      "metadata": {
        "LoC": 48
      }
    },
    "1678": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPSConnectionPool._prepare_proxy()",
      "metadata": {
        "LoC": 14
      }
    },
    "1679": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPSConnectionPool._new_conn()",
      "metadata": {
        "LoC": 39
      }
    },
    "1680": {
      "URI": "//urllib3/urllib3.connectionpool/HTTPSConnectionPool._validate_conn()",
      "metadata": {
        "LoC": 19
      }
    },
    "1681": {
      "URI": "//urllib3/urllib3.connectionpool/_normalize_host()",
      "metadata": {
        "LoC": 2
      }
    },
    "1682": {
      "URI": "//urllib3/urllib3.connectionpool/_url_from_pool()",
      "metadata": {
        "LoC": 5
      }
    },
    "1683": {
      "URI": "//urllib3/urllib3.connectionpool/_close_pool_connections()",
      "metadata": {
        "LoC": 9
      }
    },
    "1684": {
      "URI": "//urllib3/urllib3.util.proxy/",
      "metadata": {
        "LoC": 43
      }
    },
    "1685": {
      "URI": "//urllib3/urllib3.util.proxy/connection_requires_http_tunnel()",
      "metadata": {
        "LoC": 33
      }
    },
    "1686": {
      "URI": "//urllib3/urllib3.util.url/",
      "metadata": {
        "LoC": 471
      }
    },
    "1687": {
      "URI": "//urllib3/urllib3.util.url/Url",
      "metadata": {
        "LoC": 31
      }
    },
    "1688": {
      "URI": "//urllib3/urllib3.util.url/Url.__new__()",
      "metadata": {
        "LoC": 15
      }
    },
    "1689": {
      "URI": "//urllib3/urllib3.util.url/Url.hostname()",
      "metadata": {
        "LoC": 3
      }
    },
    "1690": {
      "URI": "//urllib3/urllib3.util.url/Url.request_uri()",
      "metadata": {
        "LoC": 8
      }
    },
    "1691": {
      "URI": "//urllib3/urllib3.util.url/Url.authority()",
      "metadata": {
        "LoC": 14
      }
    },
    "1692": {
      "URI": "//urllib3/urllib3.util.url/Url.netloc()",
      "metadata": {
        "LoC": 12
      }
    },
    "1693": {
      "URI": "//urllib3/urllib3.util.url/Url.url()",
      "metadata": {
        "LoC": 46
      }
    },
    "1694": {
      "URI": "//urllib3/urllib3.util.url/Url.__str__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1695": {
      "URI": "//urllib3/urllib3.util.url/_encode_invalid_chars()",
      "metadata": {
        "LoC": 4
      }
    },
    "1696": {
      "URI": "//urllib3/urllib3.util.url/_remove_path_dot_segments()",
      "metadata": {
        "LoC": 28
      }
    },
    "1697": {
      "URI": "//urllib3/urllib3.util.url/_normalize_host()",
      "metadata": {
        "LoC": 2
      }
    },
    "1698": {
      "URI": "//urllib3/urllib3.util.url/_idna_encode()",
      "metadata": {
        "LoC": 17
      }
    },
    "1699": {
      "URI": "//urllib3/urllib3.util.url/_encode_target()",
      "metadata": {
        "LoC": 16
      }
    },
    "1700": {
      "URI": "//urllib3/urllib3.util.ssl_match_hostname/",
      "metadata": {
        "LoC": 159
      }
    },
    "1701": {
      "URI": "//urllib3/urllib3.util.ssl_match_hostname/CertificateError",
      "metadata": {
        "LoC": 2
      }
    },
    "1702": {
      "URI": "//urllib3/urllib3.util.ssl_match_hostname/_dnsname_match()",
      "metadata": {
        "LoC": 54
      }
    },
    "1703": {
      "URI": "//urllib3/urllib3.util.ssl_match_hostname/_ipaddress_match()",
      "metadata": {
        "LoC": 13
      }
    },
    "1704": {
      "URI": "//urllib3/urllib3.util.ssl_match_hostname/match_hostname()",
      "metadata": {
        "LoC": 65
      }
    },
    "1705": {
      "URI": "//urllib3/urllib3.util.ssl_/",
      "metadata": {
        "LoC": 510
      }
    },
    "1706": {
      "URI": "//urllib3/urllib3.util.ssl_/_is_bpo_43522_fixed()",
      "metadata": {
        "LoC": 26
      }
    },
    "1707": {
      "URI": "//urllib3/urllib3.util.ssl_/_is_has_never_check_common_name_reliable()",
      "metadata": {
        "LoC": 18
      }
    },
    "1708": {
      "URI": "//urllib3/urllib3.util.ssl_/_TYPE_PEER_CERT_RET_DICT",
      "metadata": {
        "LoC": 4
      }
    },
    "1709": {
      "URI": "//urllib3/urllib3.util.ssl_/assert_fingerprint()",
      "metadata": {
        "LoC": 27
      }
    },
    "1710": {
      "URI": "//urllib3/urllib3.util.ssl_/resolve_cert_reqs()",
      "metadata": {
        "LoC": 21
      }
    },
    "1711": {
      "URI": "//urllib3/urllib3.util.ssl_/resolve_ssl_version()",
      "metadata": {
        "LoC": 14
      }
    },
    "1712": {
      "URI": "//urllib3/urllib3.util.ssl_/create_urllib3_context()",
      "metadata": {
        "LoC": 140
      }
    },
    "1713": {
      "URI": "//urllib3/urllib3.util.ssl_/ssl_wrap_socket()",
      "metadata": {
        "LoC": 16
      }
    },
    "1714": {
      "URI": "//urllib3/urllib3.util.ssl_/is_ipaddress()",
      "metadata": {
        "LoC": 11
      }
    },
    "1715": {
      "URI": "//urllib3/urllib3.util.ssl_/_is_key_file_encrypted()",
      "metadata": {
        "LoC": 9
      }
    },
    "1716": {
      "URI": "//urllib3/urllib3.util.ssl_/_ssl_wrap_socket_impl()",
      "metadata": {
        "LoC": 17
      }
    },
    "1717": {
      "URI": "//urllib3/urllib3.util.ssltransport/",
      "metadata": {
        "LoC": 280
      }
    },
    "1718": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport",
      "metadata": {
        "LoC": 101
      }
    },
    "1719": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport._validate_ssl_context_for_tls_in_tls()",
      "metadata": {
        "LoC": 12
      }
    },
    "1720": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.__init__()",
      "metadata": {
        "LoC": 22
      }
    },
    "1721": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.__enter__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1722": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.__exit__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1723": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.fileno()",
      "metadata": {
        "LoC": 2
      }
    },
    "1724": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.read()",
      "metadata": {
        "LoC": 2
      }
    },
    "1725": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.recv()",
      "metadata": {
        "LoC": 4
      }
    },
    "1726": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.recv_into()",
      "metadata": {
        "LoC": 11
      }
    },
    "1727": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.sendall()",
      "metadata": {
        "LoC": 9
      }
    },
    "1728": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.send()",
      "metadata": {
        "LoC": 4
      }
    },
    "1729": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.makefile()",
      "metadata": {
        "LoC": 51
      }
    },
    "1730": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.unwrap()",
      "metadata": {
        "LoC": 2
      }
    },
    "1731": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.close()",
      "metadata": {
        "LoC": 2
      }
    },
    "1732": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.getpeercert()",
      "metadata": {
        "LoC": 4
      }
    },
    "1733": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.version()",
      "metadata": {
        "LoC": 2
      }
    },
    "1734": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.cipher()",
      "metadata": {
        "LoC": 2
      }
    },
    "1735": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.selected_alpn_protocol()",
      "metadata": {
        "LoC": 2
      }
    },
    "1736": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.selected_npn_protocol()",
      "metadata": {
        "LoC": 2
      }
    },
    "1737": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.shared_ciphers()",
      "metadata": {
        "LoC": 2
      }
    },
    "1738": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.compression()",
      "metadata": {
        "LoC": 2
      }
    },
    "1739": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.settimeout()",
      "metadata": {
        "LoC": 2
      }
    },
    "1740": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport.gettimeout()",
      "metadata": {
        "LoC": 2
      }
    },
    "1741": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport._decref_socketios()",
      "metadata": {
        "LoC": 2
      }
    },
    "1742": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport._wrap_ssl_read()",
      "metadata": {
        "LoC": 8
      }
    },
    "1743": {
      "URI": "//urllib3/urllib3.util.ssltransport/SSLTransport._ssl_io_loop()",
      "metadata": {
        "LoC": 2
      }
    },
    "1744": {
      "URI": "//urllib3/urllib3.util.timeout/",
      "metadata": {
        "LoC": 279
      }
    },
    "1745": {
      "URI": "//urllib3/urllib3.util.timeout/_TYPE_DEFAULT",
      "metadata": {
        "LoC": 4
      }
    },
    "1746": {
      "URI": "//urllib3/urllib3.util.timeout/Timeout",
      "metadata": {
        "LoC": 105
      }
    },
    "1747": {
      "URI": "//urllib3/urllib3.util.timeout/Timeout.__repr__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1748": {
      "URI": "//urllib3/urllib3.util.timeout/Timeout.resolve_default_timeout()",
      "metadata": {
        "LoC": 2
      }
    },
    "1749": {
      "URI": "//urllib3/urllib3.util.timeout/Timeout._validate_timeout()",
      "metadata": {
        "LoC": 40
      }
    },
    "1750": {
      "URI": "//urllib3/urllib3.util.timeout/Timeout.from_float()",
      "metadata": {
        "LoC": 14
      }
    },
    "1751": {
      "URI": "//urllib3/urllib3.util.timeout/Timeout.clone()",
      "metadata": {
        "LoC": 13
      }
    },
    "1752": {
      "URI": "//urllib3/urllib3.util.timeout/Timeout.start_connect()",
      "metadata": {
        "LoC": 10
      }
    },
    "1753": {
      "URI": "//urllib3/urllib3.util.timeout/Timeout.get_connect_duration()",
      "metadata": {
        "LoC": 13
      }
    },
    "1754": {
      "URI": "//urllib3/urllib3.util.timeout/Timeout.connect_timeout()",
      "metadata": {
        "LoC": 16
      }
    },
    "1755": {
      "URI": "//urllib3/urllib3.util.timeout/Timeout.read_timeout()",
      "metadata": {
        "LoC": 30
      }
    },
    "1756": {
      "URI": "//urllib3/urllib3.util.wait/",
      "metadata": {
        "LoC": 124
      }
    },
    "1757": {
      "URI": "//urllib3/urllib3.util.wait/select_wait_for_socket()",
      "metadata": {
        "LoC": 22
      }
    },
    "1758": {
      "URI": "//urllib3/urllib3.util.wait/poll_wait_for_socket()",
      "metadata": {
        "LoC": 19
      }
    },
    "1759": {
      "URI": "//urllib3/urllib3.util.wait/poll_wait_for_socket.do_poll()",
      "metadata": {
        "LoC": 4
      }
    },
    "1760": {
      "URI": "//urllib3/urllib3.util.wait/_have_working_poll()",
      "metadata": {
        "LoC": 11
      }
    },
    "1761": {
      "URI": "//urllib3/urllib3.util.wait/wait_for_socket()",
      "metadata": {
        "LoC": 16
      }
    },
    "1762": {
      "URI": "//urllib3/urllib3.util.wait/wait_for_read()",
      "metadata": {
        "LoC": 5
      }
    },
    "1763": {
      "URI": "//urllib3/urllib3.util.wait/wait_for_write()",
      "metadata": {
        "LoC": 5
      }
    },
    "1764": {
      "URI": "//urllib3/urllib3._version/",
      "metadata": {
        "LoC": 4
      }
    },
    "1765": {
      "URI": "//urllib3/urllib3.filepost/",
      "metadata": {
        "LoC": 89
      }
    },
    "1766": {
      "URI": "//urllib3/urllib3.filepost/choose_boundary()",
      "metadata": {
        "LoC": 5
      }
    },
    "1767": {
      "URI": "//urllib3/urllib3.filepost/iter_field_objects()",
      "metadata": {
        "LoC": 20
      }
    },
    "1768": {
      "URI": "//urllib3/urllib3.fields/",
      "metadata": {
        "LoC": 345
      }
    },
    "1769": {
      "URI": "//urllib3/urllib3.fields/guess_content_type()",
      "metadata": {
        "LoC": 14
      }
    },
    "1770": {
      "URI": "//urllib3/urllib3.fields/format_header_param_rfc2231()",
      "metadata": {
        "LoC": 46
      }
    },
    "1771": {
      "URI": "//urllib3/urllib3.fields/format_multipart_header_param()",
      "metadata": {
        "LoC": 36
      }
    },
    "1772": {
      "URI": "//urllib3/urllib3.fields/format_header_param_html5()",
      "metadata": {
        "LoC": 16
      }
    },
    "1773": {
      "URI": "//urllib3/urllib3.fields/format_header_param()",
      "metadata": {
        "LoC": 16
      }
    },
    "1774": {
      "URI": "//urllib3/urllib3.fields/RequestField",
      "metadata": {
        "LoC": 24
      }
    },
    "1775": {
      "URI": "//urllib3/urllib3.fields/RequestField.from_tuples()",
      "metadata": {
        "LoC": 47
      }
    },
    "1776": {
      "URI": "//urllib3/urllib3.fields/RequestField._render_part()",
      "metadata": {
        "LoC": 15
      }
    },
    "1777": {
      "URI": "//urllib3/urllib3.fields/RequestField._render_parts()",
      "metadata": {
        "LoC": 30
      }
    },
    "1778": {
      "URI": "//urllib3/urllib3.fields/RequestField.render_headers()",
      "metadata": {
        "LoC": 18
      }
    },
    "1779": {
      "URI": "//urllib3/urllib3/",
      "metadata": {
        "LoC": 165
      }
    },
    "1780": {
      "URI": "//urllib3/urllib3/add_stderr_logger()",
      "metadata": {
        "LoC": 18
      }
    },
    "1781": {
      "URI": "//urllib3/urllib3/disable_warnings()",
      "metadata": {
        "LoC": 5
      }
    },
    "1782": {
      "URI": "//urllib3/urllib3/request()",
      "metadata": {
        "LoC": 33
      }
    },
    "1783": {
      "URI": "//urllib3/urllib3/response.DeflateDecoder._obj.decompress",
      "metadata": {
        "LoC": 0
      }
    },
    "1784": {
      "URI": "//urllib3/urllib3/response.GzipDecoder._obj.decompress",
      "metadata": {
        "LoC": 0
      }
    },
    "1785": {
      "URI": "//urllib3/urllib3/response.ZstdDecoder._obj.decompress",
      "metadata": {
        "LoC": 0
      }
    },
    "1786": {
      "URI": "//urllib3/urllib3/contrib._securetransport.bindings.c_void_p.in_dll",
      "metadata": {
        "LoC": 0
      }
    },
    "1787": {
      "URI": "//urllib3/urllib3/contrib._securetransport.bindings.c_byte.in_dll",
      "metadata": {
        "LoC": 0
      }
    },
    "1788": {
      "URI": "//urllib3/urllib3._collections/",
      "metadata": {
        "LoC": 434
      }
    },
    "1789": {
      "URI": "//urllib3/urllib3._collections/HasGettableStringKeys",
      "metadata": {
        "LoC": 2
      }
    },
    "1790": {
      "URI": "//urllib3/urllib3._collections/HasGettableStringKeys.keys()",
      "metadata": {
        "LoC": 2
      }
    },
    "1791": {
      "URI": "//urllib3/urllib3._collections/HasGettableStringKeys.__getitem__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1792": {
      "URI": "//urllib3/urllib3._collections/_Sentinel",
      "metadata": {
        "LoC": 2
      }
    },
    "1793": {
      "URI": "//urllib3/urllib3._collections/ensure_can_construct_http_header_dict()",
      "metadata": {
        "LoC": 18
      }
    },
    "1794": {
      "URI": "//urllib3/urllib3._collections/RecentlyUsedContainer",
      "metadata": {
        "LoC": 27
      }
    },
    "1795": {
      "URI": "//urllib3/urllib3._collections/RecentlyUsedContainer.__init__()",
      "metadata": {
        "LoC": 10
      }
    },
    "1796": {
      "URI": "//urllib3/urllib3._collections/RecentlyUsedContainer.__getitem__()",
      "metadata": {
        "LoC": 6
      }
    },
    "1797": {
      "URI": "//urllib3/urllib3._collections/RecentlyUsedContainer.__setitem__()",
      "metadata": {
        "LoC": 24
      }
    },
    "1798": {
      "URI": "//urllib3/urllib3._collections/RecentlyUsedContainer.__delitem__()",
      "metadata": {
        "LoC": 6
      }
    },
    "1799": {
      "URI": "//urllib3/urllib3._collections/RecentlyUsedContainer.__len__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1800": {
      "URI": "//urllib3/urllib3._collections/RecentlyUsedContainer.__iter__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1801": {
      "URI": "//urllib3/urllib3._collections/RecentlyUsedContainer.clear()",
      "metadata": {
        "LoC": 9
      }
    },
    "1802": {
      "URI": "//urllib3/urllib3._collections/RecentlyUsedContainer.keys()",
      "metadata": {
        "LoC": 3
      }
    },
    "1803": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDictItemView",
      "metadata": {
        "LoC": 34
      }
    },
    "1804": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDictItemView.__init__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1805": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDictItemView.__len__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1806": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDictItemView.__iter__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1807": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDictItemView.__contains__()",
      "metadata": {
        "LoC": 6
      }
    },
    "1808": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict",
      "metadata": {
        "LoC": 88
      }
    },
    "1809": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.__init__()",
      "metadata": {
        "LoC": 10
      }
    },
    "1810": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.__setitem__()",
      "metadata": {
        "LoC": 5
      }
    },
    "1811": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.__getitem__()",
      "metadata": {
        "LoC": 3
      }
    },
    "1812": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.__delitem__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1813": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.__contains__()",
      "metadata": {
        "LoC": 4
      }
    },
    "1814": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.setdefault()",
      "metadata": {
        "LoC": 2
      }
    },
    "1815": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.__eq__()",
      "metadata": {
        "LoC": 9
      }
    },
    "1816": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.__ne__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1817": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.__len__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1818": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.__iter__()",
      "metadata": {
        "LoC": 4
      }
    },
    "1819": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.discard()",
      "metadata": {
        "LoC": 5
      }
    },
    "1820": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.add()",
      "metadata": {
        "LoC": 34
      }
    },
    "1821": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.extend()",
      "metadata": {
        "LoC": 32
      }
    },
    "1822": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.getlist()",
      "metadata": {
        "LoC": 2
      }
    },
    "1823": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.__repr__()",
      "metadata": {
        "LoC": 2
      }
    },
    "1824": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict._copy_from()",
      "metadata": {
        "LoC": 4
      }
    },
    "1825": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.copy()",
      "metadata": {
        "LoC": 4
      }
    },
    "1826": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.iteritems()",
      "metadata": {
        "LoC": 6
      }
    },
    "1827": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.itermerged()",
      "metadata": {
        "LoC": 5
      }
    },
    "1828": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict.items()",
      "metadata": {
        "LoC": 2
      }
    },
    "1829": {
      "URI": "//urllib3/urllib3._collections/HTTPHeaderDict._has_value_for_header()",
      "metadata": {
        "LoC": 4
      }
    },
    "1830": {
      "URI": "//urllib3/urllib3.contrib/",
      "metadata": {
        "LoC": 1
      }
    },
    "1831": {
      "URI": "//urllib3/urllib3.contrib.securetransport/",
      "metadata": {
        "LoC": 913
      }
    },
    "1832": {
      "URI": "//urllib3/urllib3.contrib.securetransport/inject_into_urllib3()",
      "metadata": {
        "LoC": 8
      }
    },
    "1833": {
      "URI": "//urllib3/urllib3.contrib.securetransport/extract_from_urllib3()",
      "metadata": {
        "LoC": 8
      }
    },
    "1834": {
      "URI": "//urllib3/urllib3.contrib.securetransport/_read_callback()",
      "metadata": {
        "LoC": 55
      }
    },
    "1835": {
      "URI": "//urllib3/urllib3.contrib.securetransport/_write_callback()",
      "metadata": {
        "LoC": 51
      }
    },
    "1836": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket",
      "metadata": {
        "LoC": 25
      }
    },
    "1837": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket.__init__()",
      "metadata": {
        "LoC": 18
      }
    },
    "1838": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket._raise_on_error()",
      "metadata": {
        "LoC": 19
      }
    },
    "1839": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket._set_alpn_protocols()",
      "metadata": {
        "LoC": 12
      }
    },
    "1840": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket._custom_validate()",
      "metadata": {
        "LoC": 36
      }
    },
    "1841": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket._evaluate_trust()",
      "metadata": {
        "LoC": 39
      }
    },
    "1842": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket.handshake()",
      "metadata": {
        "LoC": 91
      }
    },
    "1843": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket.fileno()",
      "metadata": {
        "LoC": 2
      }
    },
    "1844": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket._decref_socketios()",
      "metadata": {
        "LoC": 5
      }
    },
    "1845": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket.recv()",
      "metadata": {
        "LoC": 5
      }
    },
    "1846": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket.recv_into()",
      "metadata": {
        "LoC": 44
      }
    },
    "1847": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket.settimeout()",
      "metadata": {
        "LoC": 2
      }
    },
    "1848": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket.gettimeout()",
      "metadata": {
        "LoC": 2
      }
    },
    "1849": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket.send()",
      "metadata": {
        "LoC": 16
      }
    },
    "1850": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket.sendall()",
      "metadata": {
        "LoC": 5
      }
    },
    "1851": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket.shutdown()",
      "metadata": {
        "LoC": 3
      }
    },
    "1852": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket.close()",
      "metadata": {
        "LoC": 5
      }
    },
    "1853": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket._real_close()",
      "metadata": {
        "LoC": 14
      }
    },
    "1854": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket.getpeercert()",
      "metadata": {
        "LoC": 57
      }
    },
    "1855": {
      "URI": "//urllib3/urllib3.contrib.securetransport/WrappedSocket.version()",
      "metadata": {
        "LoC": 20
      }
    },
    "1856": {
      "URI": "//urllib3/urllib3.contrib.securetransport/makefile()",
      "metadata": {
        "LoC": 13
      }
    },
    "1857": {
      "URI": "//urllib3/urllib3.contrib.securetransport/SecureTransportContext",
      "metadata": {
        "LoC": 48
      }
    },
    "1858": {
      "URI": "//urllib3/urllib3.contrib.securetransport/SecureTransportContext.__init__()",
      "metadata": {
        "LoC": 13
      }
    },
    "1859": {
      "URI": "//urllib3/urllib3.contrib.securetransport/SecureTransportContext.check_hostname()",
      "metadata": {
        "LoC": 6
      }
    },
    "1860": {
      "URI": "//urllib3/urllib3.contrib.securetransport/SecureTransportContext.options()",
      "metadata": {
        "LoC": 8
      }
    },
    "1861": {
      "URI": "//urllib3/urllib3.contrib.securetransport/SecureTransportContext.verify_mode()",
      "metadata": {
        "LoC": 2
      }
    },
    "1862": {
      "URI": "//urllib3/urllib3.contrib.securetransport/SecureTransportContext.set_default_verify_paths()",
      "metadata": {
        "LoC": 11
      }
    },
    "1863": {
      "URI": "//urllib3/urllib3.contrib.securetransport/SecureTransportContext.load_default_certs()",
      "metadata": {
        "LoC": 2
      }
    },
    "1864": {
      "URI": "//urllib3/urllib3.contrib.securetransport/SecureTransportContext.set_ciphers()",
      "metadata": {
        "LoC": 2
      }
    },
    "1865": {
      "URI": "//urllib3/urllib3.contrib.securetransport/SecureTransportContext.load_verify_locations()",
      "metadata": {
        "LoC": 16
      }
    },
    "1866": {
      "URI": "//urllib3/urllib3.contrib.securetransport/SecureTransportContext.load_cert_chain()",
      "metadata": {
        "LoC": 9
      }
    },
    "1867": {
      "URI": "//urllib3/urllib3.contrib.securetransport/SecureTransportContext.set_alpn_protocols()",
      "metadata": {
        "LoC": 11
      }
    },
    "1868": {
      "URI": "//urllib3/urllib3.contrib.securetransport/SecureTransportContext.wrap_socket()",
      "metadata": {
        "LoC": 32
      }
    },
    "1869": {
      "URI": "//urllib3/urllib3.contrib.securetransport/SecureTransportContext.minimum_version()",
      "metadata": {
        "LoC": 2
      }
    },
    "1870": {
      "URI": "//urllib3/urllib3.contrib.securetransport/SecureTransportContext.maximum_version()",
      "metadata": {
        "LoC": 2
      }
    },
    "1871": {
      "URI": "//urllib3/urllib3.contrib._securetransport.bindings/",
      "metadata": {
        "LoC": 430
      }
    },
    "1872": {
      "URI": "//urllib3/urllib3.contrib._securetransport.bindings/load_cdll()",
      "metadata": {
        "LoC": 15
      }
    },
    "1873": {
      "URI": "//urllib3/urllib3.contrib._securetransport.bindings/CFConst",
      "metadata": {
        "LoC": 7
      }
    },
    "1874": {
      "URI": "//urllib3/urllib3.contrib._securetransport/",
      "metadata": {
        "LoC": 1
      }
    },
    "1875": {
      "URI": "//urllib3/urllib3.contrib._securetransport.low_level/",
      "metadata": {
        "LoC": 474
      }
    },
    "1876": {
      "URI": "//urllib3/urllib3.contrib._securetransport.low_level/_cf_data_from_bytes()",
      "metadata": {
        "LoC": 7
      }
    },
    "1877": {
      "URI": "//urllib3/urllib3.contrib._securetransport.low_level/_cf_dictionary_from_tuples()",
      "metadata": {
        "LoC": 21
      }
    },
    "1878": {
      "URI": "//urllib3/urllib3.contrib._securetransport.low_level/_cfstr()",
      "metadata": {
        "LoC": 12
      }
    },
    "1879": {
      "URI": "//urllib3/urllib3.contrib._securetransport.low_level/_create_cfstring_array()",
      "metadata": {
        "LoC": 29
      }
    },
    "1880": {
      "URI": "//urllib3/urllib3.contrib._securetransport.low_level/_cf_string_to_unicode()",
      "metadata": {
        "LoC": 23
      }
    },
    "1881": {
      "URI": "//urllib3/urllib3.contrib._securetransport.low_level/_assert_no_error()",
      "metadata": {
        "LoC": 21
      }
    },
    "1882": {
      "URI": "//urllib3/urllib3.contrib._securetransport.low_level/_cert_array_from_pem()",
      "metadata": {
        "LoC": 44
      }
    },
    "1883": {
      "URI": "//urllib3/urllib3.contrib._securetransport.low_level/_is_cert()",
      "metadata": {
        "LoC": 6
      }
    },
    "1884": {
      "URI": "//urllib3/urllib3.contrib._securetransport.low_level/_is_identity()",
      "metadata": {
        "LoC": 6
      }
    },
    "1885": {
      "URI": "//urllib3/urllib3.contrib._securetransport.low_level/_temporary_keychain()",
      "metadata": {
        "LoC": 33
      }
    },
    "1886": {
      "URI": "//urllib3/urllib3.contrib._securetransport.low_level/_load_items_from_file()",
      "metadata": {
        "LoC": 55
      }
    },
    "1887": {
      "URI": "//urllib3/urllib3.contrib._securetransport.low_level/_load_client_cert_chain()",
      "metadata": {
        "LoC": 73
      }
    },
    "1888": {
      "URI": "//urllib3/urllib3.contrib._securetransport.low_level/_build_tls_unknown_ca_alert()",
      "metadata": {
        "LoC": 12
      }
    },
    "1889": {
      "URI": "//urllib3/urllib3.contrib._securetransport.low_level/SecurityConst",
      "metadata": {
        "LoC": 55
      }
    },
    "1890": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/",
      "metadata": {
        "LoC": 557
      }
    },
    "1891": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/UnsupportedExtension",
      "metadata": {
        "LoC": 2
      }
    },
    "1892": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/extract_from_urllib3()",
      "metadata": {
        "LoC": 7
      }
    },
    "1893": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/_validate_dependencies_met()",
      "metadata": {
        "LoC": 22
      }
    },
    "1894": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/_dnsname_to_stdlib()",
      "metadata": {
        "LoC": 23
      }
    },
    "1895": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/_dnsname_to_stdlib.idna_encode()",
      "metadata": {
        "LoC": 16
      }
    },
    "1896": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/get_subj_alt_name()",
      "metadata": {
        "LoC": 46
      }
    },
    "1897": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/WrappedSocket",
      "metadata": {
        "LoC": 17
      }
    },
    "1898": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/WrappedSocket.__init__()",
      "metadata": {
        "LoC": 11
      }
    },
    "1899": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/WrappedSocket.fileno()",
      "metadata": {
        "LoC": 2
      }
    },
    "1900": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/WrappedSocket._decref_socketios()",
      "metadata": {
        "LoC": 5
      }
    },
    "1901": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/WrappedSocket.recv()",
      "metadata": {
        "LoC": 24
      }
    },
    "1902": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/WrappedSocket.recv_into()",
      "metadata": {
        "LoC": 22
      }
    },
    "1903": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/WrappedSocket.settimeout()",
      "metadata": {
        "LoC": 2
      }
    },
    "1904": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/WrappedSocket._send_until_done()",
      "metadata": {
        "LoC": 10
      }
    },
    "1905": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/WrappedSocket.sendall()",
      "metadata": {
        "LoC": 7
      }
    },
    "1906": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/WrappedSocket.shutdown()",
      "metadata": {
        "LoC": 3
      }
    },
    "1907": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/WrappedSocket.close()",
      "metadata": {
        "LoC": 4
      }
    },
    "1908": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/WrappedSocket._real_close()",
      "metadata": {
        "LoC": 5
      }
    },
    "1909": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/WrappedSocket.getpeercert()",
      "metadata": {
        "LoC": 14
      }
    },
    "1910": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/WrappedSocket.version()",
      "metadata": {
        "LoC": 2
      }
    },
    "1911": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/PyOpenSSLContext",
      "metadata": {
        "LoC": 42
      }
    },
    "1912": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/PyOpenSSLContext.__init__()",
      "metadata": {
        "LoC": 7
      }
    },
    "1913": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/PyOpenSSLContext.options()",
      "metadata": {
        "LoC": 2
      }
    },
    "1914": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/PyOpenSSLContext.verify_mode()",
      "metadata": {
        "LoC": 2
      }
    },
    "1915": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/PyOpenSSLContext.set_default_verify_paths()",
      "metadata": {
        "LoC": 2
      }
    },
    "1916": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/PyOpenSSLContext.set_ciphers()",
      "metadata": {
        "LoC": 4
      }
    },
    "1917": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/PyOpenSSLContext.load_verify_locations()",
      "metadata": {
        "LoC": 16
      }
    },
    "1918": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/PyOpenSSLContext.load_cert_chain()",
      "metadata": {
        "LoC": 15
      }
    },
    "1919": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/PyOpenSSLContext.set_alpn_protocols()",
      "metadata": {
        "LoC": 3
      }
    },
    "1920": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/PyOpenSSLContext.wrap_socket()",
      "metadata": {
        "LoC": 30
      }
    },
    "1921": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/PyOpenSSLContext._set_ctx_options()",
      "metadata": {
        "LoC": 5
      }
    },
    "1922": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/PyOpenSSLContext.minimum_version()",
      "metadata": {
        "LoC": 2
      }
    },
    "1923": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/PyOpenSSLContext.maximum_version()",
      "metadata": {
        "LoC": 2
      }
    },
    "1924": {
      "URI": "//urllib3/urllib3.contrib.pyopenssl/_verify_callback()",
      "metadata": {
        "LoC": 8
      }
    },
    "1925": {
      "URI": "//urllib3/urllib3.contrib.socks/",
      "metadata": {
        "LoC": 233
      }
    },
    "1926": {
      "URI": "//urllib3/urllib3.contrib.socks/_TYPE_SOCKS_OPTIONS",
      "metadata": {
        "LoC": 7
      }
    },
    "1927": {
      "URI": "//urllib3/urllib3.contrib.socks/SOCKSConnection",
      "metadata": {
        "LoC": 6
      }
    },
    "1928": {
      "URI": "//urllib3/urllib3.contrib.socks/SOCKSConnection.__init__()",
      "metadata": {
        "LoC": 8
      }
    },
    "1929": {
      "URI": "//urllib3/urllib3.contrib.socks/SOCKSConnection._new_conn()",
      "metadata": {
        "LoC": 57
      }
    },
    "1930": {
      "URI": "//urllib3/urllib3.contrib.socks/SOCKSHTTPSConnection",
      "metadata": {
        "LoC": 2
      }
    },
    "1931": {
      "URI": "//urllib3/urllib3.contrib.socks/SOCKSHTTPConnectionPool",
      "metadata": {
        "LoC": 2
      }
    },
    "1932": {
      "URI": "//urllib3/urllib3.contrib.socks/SOCKSHTTPSConnectionPool",
      "metadata": {
        "LoC": 2
      }
    },
    "1933": {
      "URI": "//urllib3/urllib3.contrib.socks/SOCKSProxyManager",
      "metadata": {
        "LoC": 11
      }
    },
    "1934": {
      "URI": "//idna/idna.uts46data/",
      "metadata": {
        "LoC": 8600
      }
    },
    "1935": {
      "URI": "//idna/idna.uts46data/_seg_0()",
      "metadata": {
        "LoC": 102
      }
    },
    "1936": {
      "URI": "//idna/idna.uts46data/_seg_1()",
      "metadata": {
        "LoC": 102
      }
    },
    "1937": {
      "URI": "//idna/idna.uts46data/_seg_2()",
      "metadata": {
        "LoC": 102
      }
    },
    "1938": {
      "URI": "//idna/idna.uts46data/_seg_3()",
      "metadata": {
        "LoC": 102
      }
    },
    "1939": {
      "URI": "//idna/idna.uts46data/_seg_4()",
      "metadata": {
        "LoC": 102
      }
    },
    "1940": {
      "URI": "//idna/idna.uts46data/_seg_5()",
      "metadata": {
        "LoC": 102
      }
    },
    "1941": {
      "URI": "//idna/idna.uts46data/_seg_6()",
      "metadata": {
        "LoC": 102
      }
    },
    "1942": {
      "URI": "//idna/idna.uts46data/_seg_7()",
      "metadata": {
        "LoC": 102
      }
    },
    "1943": {
      "URI": "//idna/idna.uts46data/_seg_8()",
      "metadata": {
        "LoC": 102
      }
    },
    "1944": {
      "URI": "//idna/idna.uts46data/_seg_9()",
      "metadata": {
        "LoC": 102
      }
    },
    "1945": {
      "URI": "//idna/idna.uts46data/_seg_10()",
      "metadata": {
        "LoC": 102
      }
    },
    "1946": {
      "URI": "//idna/idna.uts46data/_seg_11()",
      "metadata": {
        "LoC": 102
      }
    },
    "1947": {
      "URI": "//idna/idna.uts46data/_seg_12()",
      "metadata": {
        "LoC": 102
      }
    },
    "1948": {
      "URI": "//idna/idna.uts46data/_seg_13()",
      "metadata": {
        "LoC": 102
      }
    },
    "1949": {
      "URI": "//idna/idna.uts46data/_seg_14()",
      "metadata": {
        "LoC": 102
      }
    },
    "1950": {
      "URI": "//idna/idna.uts46data/_seg_15()",
      "metadata": {
        "LoC": 102
      }
    },
    "1951": {
      "URI": "//idna/idna.uts46data/_seg_16()",
      "metadata": {
        "LoC": 102
      }
    },
    "1952": {
      "URI": "//idna/idna.uts46data/_seg_17()",
      "metadata": {
        "LoC": 102
      }
    },
    "1953": {
      "URI": "//idna/idna.uts46data/_seg_18()",
      "metadata": {
        "LoC": 102
      }
    },
    "1954": {
      "URI": "//idna/idna.uts46data/_seg_19()",
      "metadata": {
        "LoC": 102
      }
    },
    "1955": {
      "URI": "//idna/idna.uts46data/_seg_20()",
      "metadata": {
        "LoC": 102
      }
    },
    "1956": {
      "URI": "//idna/idna.uts46data/_seg_21()",
      "metadata": {
        "LoC": 102
      }
    },
    "1957": {
      "URI": "//idna/idna.uts46data/_seg_22()",
      "metadata": {
        "LoC": 102
      }
    },
    "1958": {
      "URI": "//idna/idna.uts46data/_seg_23()",
      "metadata": {
        "LoC": 102
      }
    },
    "1959": {
      "URI": "//idna/idna.uts46data/_seg_24()",
      "metadata": {
        "LoC": 102
      }
    },
    "1960": {
      "URI": "//idna/idna.uts46data/_seg_25()",
      "metadata": {
        "LoC": 102
      }
    },
    "1961": {
      "URI": "//idna/idna.uts46data/_seg_26()",
      "metadata": {
        "LoC": 102
      }
    },
    "1962": {
      "URI": "//idna/idna.uts46data/_seg_27()",
      "metadata": {
        "LoC": 102
      }
    },
    "1963": {
      "URI": "//idna/idna.uts46data/_seg_28()",
      "metadata": {
        "LoC": 102
      }
    },
    "1964": {
      "URI": "//idna/idna.uts46data/_seg_29()",
      "metadata": {
        "LoC": 102
      }
    },
    "1965": {
      "URI": "//idna/idna.uts46data/_seg_30()",
      "metadata": {
        "LoC": 102
      }
    },
    "1966": {
      "URI": "//idna/idna.uts46data/_seg_31()",
      "metadata": {
        "LoC": 102
      }
    },
    "1967": {
      "URI": "//idna/idna.uts46data/_seg_32()",
      "metadata": {
        "LoC": 102
      }
    },
    "1968": {
      "URI": "//idna/idna.uts46data/_seg_33()",
      "metadata": {
        "LoC": 102
      }
    },
    "1969": {
      "URI": "//idna/idna.uts46data/_seg_34()",
      "metadata": {
        "LoC": 102
      }
    },
    "1970": {
      "URI": "//idna/idna.uts46data/_seg_35()",
      "metadata": {
        "LoC": 102
      }
    },
    "1971": {
      "URI": "//idna/idna.uts46data/_seg_36()",
      "metadata": {
        "LoC": 102
      }
    },
    "1972": {
      "URI": "//idna/idna.uts46data/_seg_37()",
      "metadata": {
        "LoC": 102
      }
    },
    "1973": {
      "URI": "//idna/idna.uts46data/_seg_38()",
      "metadata": {
        "LoC": 102
      }
    },
    "1974": {
      "URI": "//idna/idna.uts46data/_seg_39()",
      "metadata": {
        "LoC": 102
      }
    },
    "1975": {
      "URI": "//idna/idna.uts46data/_seg_40()",
      "metadata": {
        "LoC": 102
      }
    },
    "1976": {
      "URI": "//idna/idna.uts46data/_seg_41()",
      "metadata": {
        "LoC": 102
      }
    },
    "1977": {
      "URI": "//idna/idna.uts46data/_seg_42()",
      "metadata": {
        "LoC": 102
      }
    },
    "1978": {
      "URI": "//idna/idna.uts46data/_seg_43()",
      "metadata": {
        "LoC": 102
      }
    },
    "1979": {
      "URI": "//idna/idna.uts46data/_seg_44()",
      "metadata": {
        "LoC": 102
      }
    },
    "1980": {
      "URI": "//idna/idna.uts46data/_seg_45()",
      "metadata": {
        "LoC": 102
      }
    },
    "1981": {
      "URI": "//idna/idna.uts46data/_seg_46()",
      "metadata": {
        "LoC": 102
      }
    },
    "1982": {
      "URI": "//idna/idna.uts46data/_seg_47()",
      "metadata": {
        "LoC": 102
      }
    },
    "1983": {
      "URI": "//idna/idna.uts46data/_seg_48()",
      "metadata": {
        "LoC": 102
      }
    },
    "1984": {
      "URI": "//idna/idna.uts46data/_seg_49()",
      "metadata": {
        "LoC": 102
      }
    },
    "1985": {
      "URI": "//idna/idna.uts46data/_seg_50()",
      "metadata": {
        "LoC": 102
      }
    },
    "1986": {
      "URI": "//idna/idna.uts46data/_seg_51()",
      "metadata": {
        "LoC": 102
      }
    },
    "1987": {
      "URI": "//idna/idna.uts46data/_seg_52()",
      "metadata": {
        "LoC": 102
      }
    },
    "1988": {
      "URI": "//idna/idna.uts46data/_seg_53()",
      "metadata": {
        "LoC": 102
      }
    },
    "1989": {
      "URI": "//idna/idna.uts46data/_seg_54()",
      "metadata": {
        "LoC": 102
      }
    },
    "1990": {
      "URI": "//idna/idna.uts46data/_seg_55()",
      "metadata": {
        "LoC": 102
      }
    },
    "1991": {
      "URI": "//idna/idna.uts46data/_seg_56()",
      "metadata": {
        "LoC": 102
      }
    },
    "1992": {
      "URI": "//idna/idna.uts46data/_seg_57()",
      "metadata": {
        "LoC": 102
      }
    },
    "1993": {
      "URI": "//idna/idna.uts46data/_seg_58()",
      "metadata": {
        "LoC": 102
      }
    },
    "1994": {
      "URI": "//idna/idna.uts46data/_seg_59()",
      "metadata": {
        "LoC": 102
      }
    },
    "1995": {
      "URI": "//idna/idna.uts46data/_seg_60()",
      "metadata": {
        "LoC": 102
      }
    },
    "1996": {
      "URI": "//idna/idna.uts46data/_seg_61()",
      "metadata": {
        "LoC": 102
      }
    },
    "1997": {
      "URI": "//idna/idna.uts46data/_seg_62()",
      "metadata": {
        "LoC": 102
      }
    },
    "1998": {
      "URI": "//idna/idna.uts46data/_seg_63()",
      "metadata": {
        "LoC": 102
      }
    },
    "1999": {
      "URI": "//idna/idna.uts46data/_seg_64()",
      "metadata": {
        "LoC": 102
      }
    },
    "2000": {
      "URI": "//idna/idna.uts46data/_seg_65()",
      "metadata": {
        "LoC": 102
      }
    },
    "2001": {
      "URI": "//idna/idna.uts46data/_seg_66()",
      "metadata": {
        "LoC": 102
      }
    },
    "2002": {
      "URI": "//idna/idna.uts46data/_seg_67()",
      "metadata": {
        "LoC": 102
      }
    },
    "2003": {
      "URI": "//idna/idna.uts46data/_seg_68()",
      "metadata": {
        "LoC": 102
      }
    },
    "2004": {
      "URI": "//idna/idna.uts46data/_seg_69()",
      "metadata": {
        "LoC": 102
      }
    },
    "2005": {
      "URI": "//idna/idna.uts46data/_seg_70()",
      "metadata": {
        "LoC": 102
      }
    },
    "2006": {
      "URI": "//idna/idna.uts46data/_seg_71()",
      "metadata": {
        "LoC": 102
      }
    },
    "2007": {
      "URI": "//idna/idna.uts46data/_seg_72()",
      "metadata": {
        "LoC": 102
      }
    },
    "2008": {
      "URI": "//idna/idna.uts46data/_seg_73()",
      "metadata": {
        "LoC": 102
      }
    },
    "2009": {
      "URI": "//idna/idna.uts46data/_seg_74()",
      "metadata": {
        "LoC": 102
      }
    },
    "2010": {
      "URI": "//idna/idna.uts46data/_seg_75()",
      "metadata": {
        "LoC": 102
      }
    },
    "2011": {
      "URI": "//idna/idna.uts46data/_seg_76()",
      "metadata": {
        "LoC": 102
      }
    },
    "2012": {
      "URI": "//idna/idna.uts46data/_seg_77()",
      "metadata": {
        "LoC": 102
      }
    },
    "2013": {
      "URI": "//idna/idna.uts46data/_seg_78()",
      "metadata": {
        "LoC": 102
      }
    },
    "2014": {
      "URI": "//idna/idna.uts46data/_seg_79()",
      "metadata": {
        "LoC": 102
      }
    },
    "2015": {
      "URI": "//idna/idna.uts46data/_seg_80()",
      "metadata": {
        "LoC": 102
      }
    },
    "2016": {
      "URI": "//idna/idna.uts46data/_seg_81()",
      "metadata": {
        "LoC": 80
      }
    },
    "2017": {
      "URI": "//idna/idna.idnadata/",
      "metadata": {
        "LoC": 2151
      }
    },
    "2018": {
      "URI": "//idna/idna.package_data/",
      "metadata": {
        "LoC": 2
      }
    },
    "2019": {
      "URI": "//idna/idna.intranges/",
      "metadata": {
        "LoC": 54
      }
    },
    "2020": {
      "URI": "//idna/idna.intranges/intranges_from_list()",
      "metadata": {
        "LoC": 20
      }
    },
    "2021": {
      "URI": "//idna/idna.intranges/_encode_range()",
      "metadata": {
        "LoC": 2
      }
    },
    "2022": {
      "URI": "//idna/idna.intranges/_decode_range()",
      "metadata": {
        "LoC": 2
      }
    },
    "2023": {
      "URI": "//idna/idna.intranges/intranges_contain()",
      "metadata": {
        "LoC": 16
      }
    },
    "2024": {
      "URI": "//idna/idna.codec/",
      "metadata": {
        "LoC": 112
      }
    },
    "2025": {
      "URI": "//idna/idna.codec/Codec",
      "metadata": {
        "LoC": 3
      }
    },
    "2026": {
      "URI": "//idna/idna.codec/Codec.encode()",
      "metadata": {
        "LoC": 8
      }
    },
    "2027": {
      "URI": "//idna/idna.codec/Codec.decode()",
      "metadata": {
        "LoC": 8
      }
    },
    "2028": {
      "URI": "//idna/idna.codec/IncrementalEncoder",
      "metadata": {
        "LoC": 1
      }
    },
    "2029": {
      "URI": "//idna/idna.codec/IncrementalEncoder._buffer_encode()",
      "metadata": {
        "LoC": 31
      }
    },
    "2030": {
      "URI": "//idna/idna.codec/IncrementalDecoder",
      "metadata": {
        "LoC": 1
      }
    },
    "2031": {
      "URI": "//idna/idna.codec/IncrementalDecoder._buffer_decode()",
      "metadata": {
        "LoC": 30
      }
    },
    "2032": {
      "URI": "//idna/idna.codec/StreamWriter",
      "metadata": {
        "LoC": 2
      }
    },
    "2033": {
      "URI": "//idna/idna.codec/StreamReader",
      "metadata": {
        "LoC": 2
      }
    },
    "2034": {
      "URI": "//idna/idna.codec/getregentry()",
      "metadata": {
        "LoC": 10
      }
    },
    "2035": {
      "URI": "//idna/idna.core/",
      "metadata": {
        "LoC": 400
      }
    },
    "2036": {
      "URI": "//idna/idna.core/IDNAError",
      "metadata": {
        "LoC": 3
      }
    },
    "2037": {
      "URI": "//idna/idna.core/IDNABidiError",
      "metadata": {
        "LoC": 3
      }
    },
    "2038": {
      "URI": "//idna/idna.core/InvalidCodepoint",
      "metadata": {
        "LoC": 3
      }
    },
    "2039": {
      "URI": "//idna/idna.core/InvalidCodepointContext",
      "metadata": {
        "LoC": 3
      }
    },
    "2040": {
      "URI": "//idna/idna.core/_combining_class()",
      "metadata": {
        "LoC": 6
      }
    },
    "2041": {
      "URI": "//idna/idna.core/_is_script()",
      "metadata": {
        "LoC": 2
      }
    },
    "2042": {
      "URI": "//idna/idna.core/_punycode()",
      "metadata": {
        "LoC": 2
      }
    },
    "2043": {
      "URI": "//idna/idna.core/_unot()",
      "metadata": {
        "LoC": 2
      }
    },
    "2044": {
      "URI": "//idna/idna.core/valid_label_length()",
      "metadata": {
        "LoC": 4
      }
    },
    "2045": {
      "URI": "//idna/idna.core/valid_string_length()",
      "metadata": {
        "LoC": 4
      }
    },
    "2046": {
      "URI": "//idna/idna.core/check_bidi()",
      "metadata": {
        "LoC": 57
      }
    },
    "2047": {
      "URI": "//idna/idna.core/check_initial_combiner()",
      "metadata": {
        "LoC": 4
      }
    },
    "2048": {
      "URI": "//idna/idna.core/check_hyphen_ok()",
      "metadata": {
        "LoC": 6
      }
    },
    "2049": {
      "URI": "//idna/idna.core/check_nfc()",
      "metadata": {
        "LoC": 3
      }
    },
    "2050": {
      "URI": "//idna/idna.core/valid_contextj()",
      "metadata": {
        "LoC": 41
      }
    },
    "2051": {
      "URI": "//idna/idna.core/valid_contexto()",
      "metadata": {
        "LoC": 40
      }
    },
    "2052": {
      "URI": "//idna/idna.core/check_label()",
      "metadata": {
        "LoC": 29
      }
    },
    "2053": {
      "URI": "//idna/idna.core/alabel()",
      "metadata": {
        "LoC": 22
      }
    },
    "2054": {
      "URI": "//idna/idna.core/ulabel()",
      "metadata": {
        "LoC": 27
      }
    },
    "2055": {
      "URI": "//idna/idna.core/uts46_remap()",
      "metadata": {
        "LoC": 30
      }
    },
    "2056": {
      "URI": "//idna/idna/",
      "metadata": {
        "LoC": 44
      }
    },
    "2057": {
      "URI": "//idna/idna.compat/",
      "metadata": {
        "LoC": 13
      }
    },
    "2058": {
      "URI": "//idna/idna.compat/ToASCII()",
      "metadata": {
        "LoC": 2
      }
    },
    "2059": {
      "URI": "//idna/idna.compat/ToUnicode()",
      "metadata": {
        "LoC": 2
      }
    },
    "2060": {
      "URI": "//idna/idna.compat/nameprep()",
      "metadata": {
        "LoC": 2
      }
    },
    "2061": {
      "URI": "//certifi/certifi.__main__/",
      "metadata": {
        "LoC": 12
      }
    },
    "2062": {
      "URI": "//certifi/certifi/",
      "metadata": {
        "LoC": 4
      }
    },
    "2063": {
      "URI": "//certifi/certifi.core/",
      "metadata": {
        "LoC": 108
      }
    },
    "2064": {
      "URI": "//certifi/certifi.core/contents()",
      "metadata": {
        "LoC": 2
      }
    },
    "2065": {
      "URI": "//certifi/certifi.core/read_text()",
      "metadata": {
        "LoC": 8
      }
    },
    "2066": {
      "URI": "//plantbreeding#api/Scripts.buildOpenAPI/",
      "metadata": {
        "LoC": 85
      }
    },
    "2067": {
      "URI": "//plantbreeding#api/Scripts.buildOpenAPI/str_presenter()",
      "metadata": {
        "LoC": 4
      }
    },
    "2068": {
      "URI": "//plantbreeding#api/Scripts.buildOpenAPI/go()",
      "metadata": {
        "LoC": 50
      }
    },
    "2069": {
      "URI": "//plantbreeding#api/Scripts.buildOpenAPI/<lambda1>()",
      "metadata": {
        "LoC": 1
      }
    },
    "2070": {
      "URI": "//plantbreeding#api/Scripts.buildGithubIssuesReport/",
      "metadata": {
        "LoC": 69
      }
    },
    "2071": {
      "URI": "//plantbreeding#api/Scripts.buildGithubIssuesReport/go()",
      "metadata": {
        "LoC": 16
      }
    },
    "2072": {
      "URI": "//plantbreeding#api/Scripts.buildGithubIssuesReport/getIssues()",
      "metadata": {
        "LoC": 18
      }
    },
    "2073": {
      "URI": "//plantbreeding#api/Scripts.buildGithubIssuesReport/generateReport()",
      "metadata": {
        "LoC": 17
      }
    },
    "2074": {
      "URI": "//plantbreeding#api/Scripts.generateExamples/",
      "metadata": {
        "LoC": 115
      }
    },
    "2075": {
      "URI": "//plantbreeding#api/Scripts.generateExamples/getObjectExample()",
      "metadata": {
        "LoC": 46
      }
    },
    "2076": {
      "URI": "//plantbreeding#api/Scripts.generateExamples/addExamples()",
      "metadata": {
        "LoC": 17
      }
    },
    "2077": {
      "URI": "//plantbreeding#api/Scripts.generateExamples/readFileToDict()",
      "metadata": {
        "LoC": 9
      }
    },
    "2078": {
      "URI": "//plantbreeding#api/Scripts.buildTermBrowserReference/",
      "metadata": {
        "LoC": 95
      }
    },
    "2079": {
      "URI": "//plantbreeding#api/Scripts.buildTermBrowserReference/buildTermBrowserData()",
      "metadata": {
        "LoC": 63
      }
    },
    "2080": {
      "URI": "//plantbreeding#api/Scripts.buildTermBrowserReference/buildTermBrowserDataFile()",
      "metadata": {
        "LoC": 13
      }
    },
    "2081": {
      "URI": "//plantbreeding#api/Scripts.buildWikiFiles/",
      "metadata": {
        "LoC": 202
      }
    },
    "2082": {
      "URI": "//plantbreeding#api/Scripts.buildWikiFiles/getObject()",
      "metadata": {
        "LoC": 9
      }
    },
    "2083": {
      "URI": "//plantbreeding#api/Scripts.buildWikiFiles/getCallPages()",
      "metadata": {
        "LoC": 75
      }
    },
    "2084": {
      "URI": "//plantbreeding#api/Scripts.buildWikiFiles/getObjectPages()",
      "metadata": {
        "LoC": 7
      }
    },
    "2085": {
      "URI": "//plantbreeding#api/Scripts.buildWikiFiles/getCallsPage()",
      "metadata": {
        "LoC": 5
      }
    },
    "2086": {
      "URI": "//plantbreeding#api/Scripts.buildWikiFiles/getObjectsPage()",
      "metadata": {
        "LoC": 5
      }
    },
    "2087": {
      "URI": "//plantbreeding#api/Scripts.buildWikiFiles/login()",
      "metadata": {
        "LoC": 28
      }
    },
    "2088": {
      "URI": "//plantbreeding#api/Scripts.buildWikiFiles/pushPage()",
      "metadata": {
        "LoC": 24
      }
    },
    "2089": {
      "URI": "//plantbreeding#api/Scripts.buildWikiFiles/run()",
      "metadata": {
        "LoC": 16
      }
    },
    "2090": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/",
      "metadata": {
        "LoC": 467
      }
    },
    "2091": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/buildCollection()",
      "metadata": {
        "LoC": 73
      }
    },
    "2092": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/sortPaths()",
      "metadata": {
        "LoC": 58
      }
    },
    "2093": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/getExecList()",
      "metadata": {
        "LoC": 61
      }
    },
    "2094": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/mapPathToDbId()",
      "metadata": {
        "LoC": 35
      }
    },
    "2095": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/getRequiresList()",
      "metadata": {
        "LoC": 9
      }
    },
    "2096": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/replacePathParams()",
      "metadata": {
        "LoC": 8
      }
    },
    "2097": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/getSearchPathVariableName()",
      "metadata": {
        "LoC": 2
      }
    },
    "2098": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/getParamsList()",
      "metadata": {
        "LoC": 15
      }
    },
    "2099": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/buildResponseObjectName()",
      "metadata": {
        "LoC": 9
      }
    },
    "2100": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/isNotDeprecated()",
      "metadata": {
        "LoC": 4
      }
    },
    "2101": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/buildJSONSchemas()",
      "metadata": {
        "LoC": 22
      }
    },
    "2102": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/fixSchema()",
      "metadata": {
        "LoC": 8
      }
    },
    "2103": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/addMinItems()",
      "metadata": {
        "LoC": 6
      }
    },
    "2104": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/removeDeprecated()",
      "metadata": {
        "LoC": 11
      }
    },
    "2105": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/addRequired()",
      "metadata": {
        "LoC": 9
      }
    },
    "2106": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/removeSwaggerTerms()",
      "metadata": {
        "LoC": 15
      }
    },
    "2107": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/fixStringFormats()",
      "metadata": {
        "LoC": 12
      }
    },
    "2108": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/allowNullFields()",
      "metadata": {
        "LoC": 27
      }
    },
    "2109": {
      "URI": "//plantbreeding#api/Scripts.buildBRAVA_JSONSchema/buildMetaData()",
      "metadata": {
        "LoC": 18
      }
    },
    "2110": {
      "URI": "//plantbreeding#api/Scripts.searchSwagger/",
      "metadata": {
        "LoC": 85
      }
    },
    "2111": {
      "URI": "//plantbreeding#api/Scripts.searchSwagger/go()",
      "metadata": {
        "LoC": 4
      }
    },
    "2112": {
      "URI": "//plantbreeding#api/Scripts.searchSwagger/transform()",
      "metadata": {
        "LoC": 13
      }
    },
    "2113": {
      "URI": "//plantbreeding#api/Scripts.searchSwagger/search()",
      "metadata": {
        "LoC": 10
      }
    },
    "2114": {
      "URI": "//plantbreeding#api/Scripts.searchSwagger/mapPathToDbId()",
      "metadata": {
        "LoC": 33
      }
    },
    "2115": {
      "URI": "//plantbreeding#api/Scripts.checkSpelling/",
      "metadata": {
        "LoC": 73
      }
    },
    "2116": {
      "URI": "//plantbreeding#api/Scripts.checkSpelling/go()",
      "metadata": {
        "LoC": 40
      }
    },
    "2117": {
      "URI": "//plantbreeding#api/Scripts.checkSpelling/parseLine()",
      "metadata": {
        "LoC": 16
      }
    },
    "2118": {
      "URI": "//plantbreeding#api/Scripts.checkSpelling/camel_case_split()",
      "metadata": {
        "LoC": 3
      }
    },
    "2119": {
      "URI": "//plantbreeding#api/Scripts.brapiVersions/",
      "metadata": {
        "LoC": 152
      }
    },
    "2120": {
      "URI": "//plantbreeding#api/Scripts.brapiVersions/getVersions()",
      "metadata": {
        "LoC": 6
      }
    },
    "2121": {
      "URI": "//plantbreeding#api/Scripts.dereferenceAll/",
      "metadata": {
        "LoC": 116
      }
    },
    "2122": {
      "URI": "//plantbreeding#api/Scripts.dereferenceAll/findRef()",
      "metadata": {
        "LoC": 13
      }
    },
    "2123": {
      "URI": "//plantbreeding#api/Scripts.dereferenceAll/dereferenceAll()",
      "metadata": {
        "LoC": 40
      }
    },
    "2124": {
      "URI": "//plantbreeding#api/Scripts.dereferenceAll/dereferenceAllOfClause()",
      "metadata": {
        "LoC": 39
      }
    },
    "2125": {
      "URI": "//plantbreeding#api/Scripts.dereferenceAll/dereferenceBrAPI()",
      "metadata": {
        "LoC": 15
      }
    },
    "2126": {
      "URI": "//plantbreeding#api/Scripts.buildReadMes/",
      "metadata": {
        "LoC": 338
      }
    },
    "2127": {
      "URI": "//plantbreeding#api/Scripts.buildReadMes/buildStringExample()",
      "metadata": {
        "LoC": 14
      }
    },
    "2128": {
      "URI": "//plantbreeding#api/Scripts.buildReadMes/buildArrayExample()",
      "metadata": {
        "LoC": 22
      }
    },
    "2129": {
      "URI": "//plantbreeding#api/Scripts.buildReadMes/buildObjectExample()",
      "metadata": {
        "LoC": 25
      }
    },
    "2130": {
      "URI": "//plantbreeding#api/Scripts.buildReadMes/buildGroupTitle()",
      "metadata": {
        "LoC": 11
      }
    },
    "2131": {
      "URI": "//plantbreeding#api/Scripts.buildReadMes/buildTitleStr()",
      "metadata": {
        "LoC": 20
      }
    },
    "2132": {
      "URI": "//plantbreeding#api/Scripts.buildReadMes/buildParametersList()",
      "metadata": {
        "LoC": 15
      }
    },
    "2133": {
      "URI": "//plantbreeding#api/Scripts.buildReadMes/buildRequestBody()",
      "metadata": {
        "LoC": 18
      }
    },
    "2134": {
      "URI": "//plantbreeding#api/Scripts.buildReadMes/buildExamples()",
      "metadata": {
        "LoC": 18
      }
    },
    "2135": {
      "URI": "//plantbreeding#api/Scripts.buildReadMes/buildRequestDefTable()",
      "metadata": {
        "LoC": 12
      }
    },
    "2136": {
      "URI": "//plantbreeding#api/Scripts.buildReadMes/buildResponseDefTable()",
      "metadata": {
        "LoC": 15
      }
    },
    "2137": {
      "URI": "//plantbreeding#api/Scripts.buildReadMes/buildObjectTableRow()",
      "metadata": {
        "LoC": 52
      }
    },
    "2138": {
      "URI": "//plantbreeding#api/Scripts.buildReadMes/buildReadMe()",
      "metadata": {
        "LoC": 71
      }
    },
    "2139": {
      "URI": "//plantbreeding#api/Scripts.buildReadMes/buildReadMes()",
      "metadata": {
        "LoC": 9
      }
    },
    "2140": {
      "URI": "//plantbreeding#api/Scripts.buildJSONSchema/",
      "metadata": {
        "LoC": 175
      }
    },
    "2141": {
      "URI": "//plantbreeding#api/Scripts.buildJSONSchema/buildJSONSchemas()",
      "metadata": {
        "LoC": 25
      }
    },
    "2142": {
      "URI": "//plantbreeding#api/Scripts.buildJSONSchema/buildJSONSchema()",
      "metadata": {
        "LoC": 16
      }
    },
    "2143": {
      "URI": "//plantbreeding#api/Scripts.buildJSONSchema/fixSchema()",
      "metadata": {
        "LoC": 8
      }
    },
    "2144": {
      "URI": "//plantbreeding#api/Scripts.buildJSONSchema/addMinItems()",
      "metadata": {
        "LoC": 5
      }
    },
    "2145": {
      "URI": "//plantbreeding#api/Scripts.buildJSONSchema/removeDeprecated()",
      "metadata": {
        "LoC": 11
      }
    },
    "2146": {
      "URI": "//plantbreeding#api/Scripts.buildJSONSchema/addRequired()",
      "metadata": {
        "LoC": 9
      }
    },
    "2147": {
      "URI": "//plantbreeding#api/Scripts.buildJSONSchema/removeSwaggerTerms()",
      "metadata": {
        "LoC": 15
      }
    },
    "2148": {
      "URI": "//plantbreeding#api/Scripts.buildJSONSchema/fixStringFormats()",
      "metadata": {
        "LoC": 12
      }
    },
    "2149": {
      "URI": "//plantbreeding#api/Scripts.buildJSONSchema/allowNullFields()",
      "metadata": {
        "LoC": 26
      }
    },
    "2150": {
      "URI": "//plantbreeding#api/Scripts.testInputs/",
      "metadata": {
        "LoC": 492
      }
    },
    "2151": {
      "URI": "//plantbreeding#api/Scripts.testInputs/replaceIDs()",
      "metadata": {
        "LoC": 23
      }
    },
    "2152": {
      "URI": "//plantbreeding#api/Scripts.testInputs/postParams()",
      "metadata": {
        "LoC": 214
      }
    },
    "2153": {
      "URI": "//plantbreeding#api/Scripts.testInputs/putParams()",
      "metadata": {
        "LoC": 227
      }
    },
    "2154": {
      "URI": "//plantbreeding#api/Scripts.testInputs/getParams()",
      "metadata": {
        "LoC": 9
      }
    },
    "2155": {
      "URI": "//plantbreeding#api/Scripts.buildBlueprint/",
      "metadata": {
        "LoC": 93
      }
    },
    "2156": {
      "URI": "//plantbreeding#api/Scripts.buildBlueprint/go()",
      "metadata": {
        "LoC": 59
      }
    },
    "2157": {
      "URI": "//plantbreeding#api/Scripts.buildBlueprint/parseHTMLToMD()",
      "metadata": {
        "LoC": 18
      }
    },
    "2158": {
      "URI": "//plantbreeding#api/Scripts.syncWiki/",
      "metadata": {
        "LoC": 174
      }
    },
    "2159": {
      "URI": "//plantbreeding#api/Scripts.syncWiki/login()",
      "metadata": {
        "LoC": 28
      }
    },
    "2160": {
      "URI": "//plantbreeding#api/Scripts.syncWiki/downloadAllPages()",
      "metadata": {
        "LoC": 26
      }
    },
    "2161": {
      "URI": "//plantbreeding#api/Scripts.syncWiki/downloadAllImages()",
      "metadata": {
        "LoC": 20
      }
    },
    "2162": {
      "URI": "//plantbreeding#api/Scripts.syncWiki/restoreAllImages()",
      "metadata": {
        "LoC": 17
      }
    },
    "2163": {
      "URI": "//plantbreeding#api/Scripts.syncWiki/restoreAllPages()",
      "metadata": {
        "LoC": 10
      }
    },
    "2164": {
      "URI": "//plantbreeding#api/Scripts.syncWiki/pushPage()",
      "metadata": {
        "LoC": 21
      }
    },
    "2165": {
      "URI": "//plantbreeding#api/Scripts.syncWiki/main()",
      "metadata": {
        "LoC": 28
      }
    },
    "2166": {
      "URI": "//plantbreeding#api/Scripts.detectCallsCall/",
      "metadata": {
        "LoC": 132
      }
    },
    "2167": {
      "URI": "//plantbreeding#api/Scripts.detectCallsCall/callObj",
      "metadata": {
        "LoC": 7
      }
    },
    "2168": {
      "URI": "//plantbreeding#api/Scripts.detectCallsCall/callObj.__init__()",
      "metadata": {
        "LoC": 6
      }
    },
    "2169": {
      "URI": "//plantbreeding#api/Scripts.detectCallsCall/callObj.__repr__()",
      "metadata": {
        "LoC": 2
      }
    },
    "2170": {
      "URI": "//plantbreeding#api/Scripts.detectCallsCall/callObj.__str__()",
      "metadata": {
        "LoC": 5
      }
    },
    "2171": {
      "URI": "//plantbreeding#api/Scripts.detectCallsCall/callObj.addMethod()",
      "metadata": {
        "LoC": 2
      }
    },
    "2172": {
      "URI": "//plantbreeding#api/Scripts.detectCallsCall/callObj.addDataType()",
      "metadata": {
        "LoC": 2
      }
    },
    "2173": {
      "URI": "//plantbreeding#api/Scripts.detectCallsCall/callObj.addVersions()",
      "metadata": {
        "LoC": 3
      }
    },
    "2174": {
      "URI": "//plantbreeding#api/Scripts.detectCallsCall/MyEncoder",
      "metadata": {
        "LoC": 1
      }
    },
    "2175": {
      "URI": "//plantbreeding#api/Scripts.detectCallsCall/MyEncoder.default()",
      "metadata": {
        "LoC": 2
      }
    },
    "2176": {
      "URI": "//plantbreeding#api/Scripts.buildGlossaryFromOpenAPI/",
      "metadata": {
        "LoC": 178
      }
    },
    "2177": {
      "URI": "//plantbreeding#api/Scripts.buildGlossaryFromOpenAPI/buildTermBrowserData()",
      "metadata": {
        "LoC": 33
      }
    },
    "2178": {
      "URI": "//plantbreeding#api/Scripts.buildGlossaryFromOpenAPI/collectTermsFromSchema()",
      "metadata": {
        "LoC": 3
      }
    },
    "2179": {
      "URI": "//plantbreeding#api/Scripts.buildGlossaryFromOpenAPI/collectTermsRecursivly()",
      "metadata": {
        "LoC": 29
      }
    },
    "2180": {
      "URI": "//plantbreeding#api/Scripts.buildGlossaryFromOpenAPI/scanForPrimaryClassRef()",
      "metadata": {
        "LoC": 14
      }
    },
    "2181": {
      "URI": "//plantbreeding#api/Scripts.buildGlossaryFromOpenAPI/addTerm()",
      "metadata": {
        "LoC": 34
      }
    },
    "2182": {
      "URI": "//plantbreeding#api/Scripts.buildGlossaryFromOpenAPI/appendContext()",
      "metadata": {
        "LoC": 5
      }
    },
    "2183": {
      "URI": "//plantbreeding#api/Scripts.buildGlossaryFromOpenAPI/printTermsToFile()",
      "metadata": {
        "LoC": 6
      }
    },
    "2184": {
      "URI": "//plantbreeding#api/Scripts.buildGlossaryFromOpenAPI/main()",
      "metadata": {
        "LoC": 26
      }
    },
    "2185": {
      "URI": "//plantbreeding#api/Scripts.diffBrAPIVersions/",
      "metadata": {
        "LoC": 279
      }
    },
    "2186": {
      "URI": "//plantbreeding#api/Scripts.diffBrAPIVersions/go()",
      "metadata": {
        "LoC": 25
      }
    },
    "2187": {
      "URI": "//plantbreeding#api/Scripts.diffBrAPIVersions/printResults()",
      "metadata": {
        "LoC": 55
      }
    },
    "2188": {
      "URI": "//plantbreeding#api/Scripts.diffBrAPIVersions/comparePaths()",
      "metadata": {
        "LoC": 35
      }
    },
    "2189": {
      "URI": "//plantbreeding#api/Scripts.diffBrAPIVersions/compareParams()",
      "metadata": {
        "LoC": 38
      }
    },
    "2190": {
      "URI": "//plantbreeding#api/Scripts.diffBrAPIVersions/compareResults()",
      "metadata": {
        "LoC": 33
      }
    },
    "2191": {
      "URI": "//plantbreeding#api/Scripts.diffBrAPIVersions/compareObjects()",
      "metadata": {
        "LoC": 45
      }
    },
    "2192": {
      "URI": "//plantbreeding#api/Scripts.diffBrAPIVersions/arrayToString()",
      "metadata": {
        "LoC": 11
      }
    },
    "2193": {
      "URI": "//plantbreeding#api/Scripts.diffBrAPIVersions/parseOptions()",
      "metadata": {
        "LoC": 15
      }
    }
  }
}